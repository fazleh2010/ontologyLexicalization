[{
        "word": "abraham_lincoln",
        "pairs": ["subject=res:Abraham_Lincoln"],
        "questions": {
            "7": "Where did Abraham Lincoln die? [subject=res:Abraham_Lincoln]",
            "374": "Does Abraham Lincoln's death place have a website? [subject=res:Abraham_Lincoln]"
        },
        "Sparql": {
            "Sparql_7": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri. }",
            "Sparql_374": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Abraham_Lincoln dbo:deathPlace ?p . ?p dbo:website ?w }"
        }
    }, {
        "word": "action_role",
        "pairs": ["object=res:Category:Action_role-playing_video_games"],
        "questions": {
            "32": "What are the top-10 action role-playing video games according to IGN? [object=res:Category:Action_role-playing_video_games]"
        },
        "Sparql": {
            "Sparql_32": "SELECT DISTINCT ?uri WHERE { ?uri <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Action_role-playing_video_games> ; <http://dbpedia.org/property/ign> ?score } ORDER BY DESC(?score) LIMIT 10"
        }
    }, 
    {
        "word": "action_hero",
        "pairs": ["subject=res:Last_Action_Hero"],
        "questions": {
            "412": "Give me all actors starring in Last Action Hero. [subject=res:Last_Action_Hero]"
        },
        "Sparql": {
            "Sparql_412": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Last_Action_Hero dbo:starring ?uri }"
        }
    }, 

    {
        "word": "actor_play",
        "pairs": ["predicate=dbo:portrayer"],
        "questions": {
            "112": "Which actor played Chewbacca? [predicate=dbo:portrayer]"
        },
        "Sparql": {
            "Sparql_112": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chewbacca> <http://dbpedia.org/ontology/portrayer> ?uri }"
        }
    },
    {
        "word": "actor_cast",
        "pairs": ["predicate=dbo:starring"],
        "questions": {
            "133": "Which actor was casted in the most movies? [predicate=dbo:starring]"
        },
        "Sparql": {
            "Sparql_133": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . ?f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?f <http://dbpedia.org/ontology/starring> ?uri . } ORDER BY DESC(COUNT(DISTINCT(?f))) OFFSET 0 LIMIT 1"
        }
    }, 
    {
        "word": "actor_star, actor_who,actor_born,actor_call,actor_of",
        "pairs": [],
        "questions": {
            "9": "Give me all actors starring in movies directed by and starring William Shatner.",
            "69": "Give me all actors who were born in Paris after 1950.",
            "82": "Which actors were born in Germany?",
            "86": "Give me all actors who were born in Berlin.",
            "128": "Give me all actors called Baldwin.",
            "141": "Give me the birthdays of all actors of the television show Charmed.",
            "286": "Give me all actors starring in movies directed by William Shatner.",
            "412": "Give me all actors starring in Last Action Hero."
        },
        "Sparql": {
            "Sparql_9": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring res:William_Shatner { ?x dbo:starring ?uri } UNION { ?x dbp:starring ?uri } }",
            "Sparql_69": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . ?uri <http://dbpedia.org/ontology/birthDate> ?date . FILTER ( ?date >= xsd:dateTime('1950-12-31T00:00:00Z')) }",
            "Sparql_82": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Actor> { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> } UNION { ?uri <http://dbpedia.org/ontology/birthPlace> ?place . ?place <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> } }",
            "Sparql_86": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Actor> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Berlin> }",
            "Sparql_128": "PREFIX foaf:<http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?uri WHERE { ?uri foaf:surname 'Baldwin'@en . { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Actor> . } UNION { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . } }",
            "Sparql_141": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date }",
            "Sparql_286": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring ?uri }",
            "Sparql_412": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Last_Action_Hero dbo:starring ?uri }"
        }
    }, {
        "word": "john_adams",
        "pairs": ["subject=res:John_Adams"],
        "questions": {
            "252": "When was John Adams born? [subject=res:John_Adams]"
        },
        "Sparql": {
            "Sparql_252": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:John_Adams dbo:birthDate ?date }"
        }
    }, {
        "word": "adele",
        "pairs": ["subject=dbr:Adele"],
        "questions": {
            "233": "What is the birth name of Adele? [subject=dbr:Adele]"
        },
        "Sparql": {
            "Sparql_233": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?bn WHERE { dbr:Adele dbo:birthName ?bn }"
        }
    }, {
        "word": "advertising_industry",
        "pairs": ["predicate=dbo:industry"],
        "questions": {
            "97": "Give me all companies in the advertising industry. [predicate=dbo:industry]"
        },
        "Sparql": {
            "Sparql_97": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Advertising> } UNION { ?uri <http://dbpedia.org/ontology/industry> ?industry FILTER regex(?industry, \"advertising\", \"i\") } }"
        }
    }, {
        "word": "form_of_goverment",
        "pairs": ["predicate=dbo:governmentType"],
        "questions": {
            "303": "What form of government is found in South Africa?"
        },
        "Sparql": {
            "Sparql_303": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:South_Africa dbo:governmentType ?uri }"
        }
    }, {
        "word": "african_cfa",
        "pairs": ["object=res:West_African_CFA_franc"],
        "questions": {
            "147": "In which countries can you pay using the West African CFA franc?"
        },
        "Sparql": {
            "Sparql_147": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> }"
        }
    }, {
        "word": "first_name",
        "pairs": ["predicate=dbo:alias"],
        "questions": {
            "410": "What was the first name of the band Queens of the Stone Age?"
        },
        "Sparql": {
            "Sparql_410": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?name WHERE { res:Queens_of_the_Stone_Age dbo:alias ?name }"
        }
    }, {
        "word": "agent_smith",
        "pairs": ["subject=res:Agent_Smith"],
        "questions": {
            "162": "Who played Agent Smith in Matrix?"
        },
        "Sparql": {
            "Sparql_162": "PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Agent_Smith <http://dbpedia.org/ontology/portrayer> ?uri }"
        }
    }, {
        "word": "air_china",
        "pairs": ["subject=res:Air_China"],
        "questions": {
            "8": "Which airports does Air China serve?"
        },
        "Sparql": {
            "Sparql_8": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Air_China dbo:targetAirport ?uri }"
        }
    }, {
        "word": "airline, airline_part_of,airline_memeber,airline_serve",
        "pairs": [""],
        "questions": {
            "58": "How many airlines are there?",
            "116": "What airlines are part of the SkyTeam alliance?",
            "127": "How many airlines are members of the Star Alliance?",
            "196": "Which airports does Yeti Airlines serve?"
        },
        "Sparql": {
            "Sparql_58": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Airline> }",
            "Sparql_116": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airline> { ?uri <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/SkyTeam> } UNION { ?uri <http://dbpedia.org/ontology/Alliance> <http://dbpedia.org/resource/SkyTeam> } }",
            "Sparql_127": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Airline> ; <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/Star_Alliance> }",
            "Sparql_196": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Yeti_Airlines dbo:targetAirport ?uri }"
        }
    }, {
        "word": "airport",
        "pairs": ["subject=dbr:Düsseldorf_Airport"],
        "questions": {
            "216": "how much is the elevation of Düsseldorf Airport ?"
        },
        "Sparql": {
            "Sparql_216": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ele WHERE { dbr:Düsseldorf_Airport dbo:elevation ?ele } LIMIT 1"
        }
    }, {
        "word": "airport_air, airport_yeti",
        "pairs": ["subject=res:Air_China", "subject=res:Yeti_Airlines"],
        "questions": {
            "8": "Which airports does Air China serve?",
            "196": "Which airports does Yeti Airlines serve?"
        },
        "Sparql": {
            "Sparql_8": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Air_China dbo:targetAirport ?uri }",
            "Sparql_196": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Yeti_Airlines dbo:targetAirport ?uri }"
        }
    }, {
        "word": "albert_einstein",
        "pairs": ["subject=dbr:Albert_Einstein"],
        "questions": {
            "258": "How many theories did Albert Einstein come up with?",
            "337": "Who was the doctoral supervisor of Albert Einstein?"
        },
        "Sparql": {
            "Sparql_258": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(?uri) AS ?count) WHERE { dbr:Albert_Einstein dbo:knownFor ?uri }",
            "Sparql_337": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Albert_Einstein dbo:doctoralAdvisor ?uri }"
        }
    }, {
        "word": "alberta_admitt",
        "pairs": ["predicate=dbo:admittancedate"],
        "questions": {
            "89": "When was Alberta admitted as province?"
        },
        "Sparql": {
            "Sparql_89": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Alberta> <http://dbpedia.org/property/admittancedate> ?date }"
        }
    }, {
        "word": "album, album of",
        "pairs": ["object=dbo:Album",""],
        "questions": {
            "130": "For which label did Elvis record his first album?",
            "299": "Who are the writers of the Wall album of Pink Floyd?",
            "409": "What was the first Queen album?"
        },
        "Sparql": {
            "Sparql_130": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?x rdf:type dbo:Album ; dbo:artist res:Elvis_Presley ; dbo:releaseDate ?y ; dbo:recordLabel ?uri } ORDER BY ASC(?y) OFFSET 0 LIMIT 1",
            "Sparql_299": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?writers WHERE { dbr:The_Wall dbp:writer ?writers }",
            "Sparql_409": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Album ; dbo:artist <http://dbpedia.org/resource/Queen_(band)> ; dbo:releaseDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "album_contain",
        "pairs": ["predicate=dbo:album"],
        "questions": {
            "88": "Which music albums contain the song Last Christmas?"
        },
        "Sparql": {
            "Sparql_88": "SELECT DISTINCT ?uri WHERE { ?single <http://dbpedia.org/ontology/album> ?uri ; <http://www.w3.org/2000/01/rdf-schema#label> \"Last Christmas\"@en }"
        }
    }, {
        "word": "aldi_store",
        "pairs": ["subject=res:Aldi"],
        "questions": {
            "250": "How many Aldi stores are there?"
        },
        "Sparql": {
            "Sparql_250": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?number WHERE { res:Aldi dbo:numberOfLocations ?number }"
        }
    }, {
        "word": "alec_guinness",
        "pairs": ["subject=res:Alec_Guinness"],
        "questions": {
            "411": "What was the last movie with Alec Guinness?"
        },
        "Sparql": {
            "Sparql_411": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Alec_Guinness ; dbo:releaseDate ?date } ORDER BY DESC(?date) LIMIT 1"
        }
    }, {
        "word": "ali_write",
        "pairs": ["predicate=dbo:author"],
        "questions": {
            "383": "Show me the book that Muhammad Ali wrote."
        },
        "Sparql": {
            "Sparql_383": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:Muhammad_Ali }"
        }
    }, {
        "word": "alliance",
        "pairs": ["predicate=dbo:alliance"],
        "questions": {
            "116": "What airlines are part of the SkyTeam alliance?",
            "127": "How many airlines are members of the Star Alliance?"
        },
        "Sparql": {
            "Sparql_116": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airline> { ?uri <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/SkyTeam> } UNION { ?uri <http://dbpedia.org/ontology/Alliance> <http://dbpedia.org/resource/SkyTeam> } }",
            "Sparql_127": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Airline> ; <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/Star_Alliance> }"
        }
    }, {
        "word": "almanac",
        "pairs": ["subject=res:Farmers'_Almanac"],
        "questions": {
            "401": "Who writes the Farmers' Almanac?"
        },
        "Sparql": {
            "Sparql_401": "PREFIX dbp: <http://dbpedia.org/property/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Farmers'_Almanac> dbp:editor ?uri }"
        }
    }, {
        "word": "amazon_eve",
        "pairs": ["subject=res:Amazon_Eve"],
        "questions": {
            "392": "How tall is Amazon Eve?"
        },
        "Sparql": {
            "Sparql_392": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Amazon_Eve dbo:height ?height }"
        }
    }, {
        "word": "america, america_high",
        "pairs": ["subject=res:Captain_America","predicate=dbp:densityrank","subject=dbr:United_States"],
        "questions": {
            "19": "Who created the comic Captain America?",
            "22": "Which state of the United States of America has the highest density?",
            "189": "What is the largest city in america?"
        },
        "Sparql": {
            "Sparql_19": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Captain_America dbo:creator ?uri }",
            "Sparql_22": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1",
            "Sparql_189": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?lcity WHERE { dbr:United_States dbo:largestCity ?lcity }"
        }
    }, {
        "word": "amount_of",
        "pairs": ["predicate=dbo:employees"],
        "questions": {
            "111": "What is the total amount of men and women serving in the FDNY?"
        },
        "Sparql": {
            "Sparql_111": "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/New_York_City_Fire_Department> <http://dbpedia.org/property/employees> ?num }"
        }
    }, {
        "word": "amphibian",
        "pairs": ["object=res:Amphibian"],
        "questions": {
            "214": "Are tree frogs a type of amphibian?"
        },
        "Sparql": {
            "Sparql_214": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Hylidae dbo:class res:Amphibian }"
        }
    }, {
        "word": "angela_merkel",
        "pairs": ["subject=dbr:Angela_Merkel","subject=dbr:Angela_Merkel"],
        "questions": {
            "151": "What is the birth name of Angela Merkel?",
            "194": "What is the alma mater of the chancellor of Germany Angela Merkel?",
            "248": "Which university did Angela Merkel attend?"
        },
        "Sparql": {
            "Sparql_151": "SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/property/birthName> ?string }",
            "Sparql_194": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Almamater WHERE { dbr:Angela_Merkel dbo:almaMater ?Almamater }",
            "Sparql_248": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?university WHERE { res:Angela_Merkel dbo:almaMater ?university }"
        }
    }, {
        "word": "angel_found",
        "pairs": ["predicate=dbo:founded"],
        "questions": {
            "92": "When were the Hells Angels founded?"
        },
        "Sparql": {
            "Sparql_92": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Hells_Angels> <http://dbpedia.org/property/founded> ?date }"
        }
    }, {
        "word": "ankara_ice",
        "pairs": ["object=res:Ankara "],
        "questions": {
            "208": "Who is the coach of Ankara's ice hockey team?"
        },
        "Sparql": {
            "Sparql_208": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:city res:Ankara ; dbo:league res:Turkish_Ice_Hockey_First_League ; dbo:coach ?uri }"
        }
    }, {
        "word": "apollo_astronaut",
        "pairs": ["object=res:Apollo_14"],
        "questions": {
            "20": "Give me the Apollo 14 astronauts.",
            "61": "Give me all Apollo 14 astronauts."
        },
        "Sparql": {
            "Sparql_20": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:mission res:Apollo_14 }",
            "Sparql_61": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/mission> <http://dbpedia.org/resource/Apollo_14> }"
        }
    }, {
        "word": "apple",
        "pairs": ["object=res:Apple_Inc"],
        "questions": {
            "93": "What is the net income of Apple?"
        },
        "Sparql": {
            "Sparql_93": "SELECT DISTINCT ?ni WHERE { <http://dbpedia.org/resource/Apple_Inc.> <http://dbpedia.org/ontology/netIncome> ?ni }"
        }
    }, {
        "word": "arabia_participate",
        "pairs": ["subject=res:T._E._Lawrence"],
        "questions": {
            "369": "In which military conflicts did Lawrence of Arabia participate?"
        },
        "Sparql": {
            "Sparql_369": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:T._E._Lawrence dbo:battle ?uri }"
        }
    }, {
        "word": "architect_of",
        "pairs": ["predicate=dbo:architect"],
        "questions": {
            "67": "Where did the architect of the Eiffel Tower study?"
        },
        "Sparql": {
            "Sparql_67": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eiffel_Tower> <http://dbpedia.org/ontology/architect> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri }"
        }
    }, {
        "word": "area_locate, area_in,area_of",
        "pairs": ["predicate=dbo:location", "predicate=dbp:largestmetro","predicate=dbo:areaTotal","predicte=dbo:areaTotal"],
        "questions": {
            "4": "In which U.S. state is Area 51 located?",
            "98": "What is the largest metropolitan area in Washington state?",
            "154": "What is the smallest city by area in Germany?",
            "209": "How large is the area of UK?",
            "278": "how big is the total area of North Rhine- Westphalia?"
        },
        "Sparql": {
            "Sparql_4": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Area_51 dbo:location ?uri . ?uri dbo:country res:United_States. }",
            "Sparql_98": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Washington_(state)> <http://dbpedia.org/property/largestmetro> ?uri }",
            "Sparql_154": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX skos: <http://www.w3.org/2004/02/skos/core#> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX dct: <http://purl.org/dc/terms/> SELECT ?city WHERE { ?m skos:broader dbc:Cities_in_Germany . ?city dct:subject ?m ; dbo:areaTotal ?area } ORDER BY ?area LIMIT 1",
            "Sparql_209": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?area WHERE { dbr:United_Kingdom dbo:areaTotal ?area }",
            "Sparql_278": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?tarea WHERE { dbr:North_Rhine-Westphalia dbo:areaTotal ?tarea }"
        }
    }, {
        "word": "aristotle",
        "pairs": ["subject=res:Aristotle"],
        "questions": {
            "361": "Did Socrates influence Aristotle?"
        },
        "Sparql": {
            "Sparql_361": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Aristotle dbo:influencedBy res:Socrates }"
        }
    }, {
        "word": "arnold_schwarzenegger",
        "pairs": ["subject=res:Arnold_Schwarzenegger"],
        "questions": {
            "266": "Did Arnold Schwarzenegger attend a university?"
        },
        "Sparql": {
            "Sparql_266": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Arnold_Schwarzenegger dbo:almaMater ?x . ?x rdf:type dbo:University }"
        }
    }, {
        "word": "asimov_foundation",
        "pairs": ["subject=res:Foundation_series"],
        "questions": {
            "347": "Show me all books in Asimov's Foundation series."
        },
        "Sparql": {
            "Sparql_347": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:Foundation_series }"
        }
    }, {
        "word": "astronaut",
        "pairs": ["subject=dboAstronaut"],
        "questions": {
            "20": "Give me the Apollo 14 astronauts.",
            "61": "Give me all Apollo 14 astronauts.",
            "73": "Give me all ESA astronauts."
        },
        "Sparql": {
            "Sparql_20": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:mission res:Apollo_14 }",
            "Sparql_61": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/mission> <http://dbpedia.org/resource/Apollo_14> }",
            "Sparql_73": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/property/type> <http://dbpedia.org/resource/European_Space_Agency> }"
        }
    }, {
        "word": "atacama",
        "pairs": ["subject=res:San_Pedro_de_Atacama"],
        "questions": {
            "370": "What is the timezone in San Pedro de Atacama?"
        },
        "Sparql": {
            "Sparql_370": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:San_Pedro_de_Atacama dbo:timeZone ?uri }"
        }
    }, {
        "word": "atlanta_falcons",
        "pairs": ["object=res:Atlanta_Falcons"],
        "questions": {
            "31": "Who is the tallest player of the Atlanta Falcons?"
        },
        "Sparql": {
            "Sparql_31": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Atlanta_Falcons> ; <http://dbpedia.org/ontology/height> ?h } ORDER BY DESC(?h) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "australia",
        "pairs": ["object=res:Australia", "subject=res:Australia"],
        "questions": {
            "181": "Show me all the breweries in Australia.",
            "256": "How many people live in the capital of Australia?",
            "301": "What is the largest city in Australia?",
            "400": "What is the highest mountain in Australia?"
        },
        "Sparql": {
            "Sparql_181": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Brewery> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }",
            "Sparql_256": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Australia dbo:capital ?x . ?x dbo:populationTotal ?num }",
            "Sparql_301": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Australia dbo:largestCity ?uri }",
            "Sparql_400": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Australia ; dbo:elevation ?elevation } ORDER BY DESC(?elevation) LIMIT 1"
        }
    }, {
        "word": "author_of",
        "pairs": ["predicate=dbo:author"],
        "questions": {
            "119": "What other books have been written by the author of The Fault in Our Stars?",
            "238": "Who is the author of the interpretation of dreams?"
        },
        "Sparql": {
            "Sparql_119": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?books WHERE { ?books dbo:author <http://dbpedia.org/resource/John_Green_(author)> }",
            "Sparql_238": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Author WHERE { dbr:The_Interpretation_of_Dreams dbo:author ?Author }"
        }
    }, {
        "word": "autobiography",
        "pairs": ["object=res:Autobiography"],
        "questions": {
            "391": "Show me Hemingway's autobiography."
        },
        "Sparql": {
            "Sparql_391": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:author res:Ernest_Hemingway ; dbo:literaryGenre res:Autobiography }"
        }
    }, {
        "word": "aviv",
        "pairs": ["subject=res:Tel_Aviv"],
        "questions": {
            "381": "Who is the mayor of Tel Aviv?"
        },
        "Sparql": {
            "Sparql_381": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Tel_Aviv dbo:leaderName ?uri }"
        }
    }, {
        "word": "award",
        "pairs": ["predicate=dbo:award"],
        "questions": {
            "221": "Which awards did Douglas Hofstadter win?"
        },
        "Sparql": {
            "Sparql_221": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Douglas_Hofstadter dbo:award ?uri }"
        }
    }, {
        "word": "b-sides",
        "pairs": ["predicate=dbo:bSide"],
        "questions": {
            "175": "Give me all B-sides of the Ramones."
        },
        "Sparql": {
            "Sparql_175": "SELECT DISTINCT ?string WHERE { ?x <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Ramones> ; <http://dbpedia.org/ontology/bSide> ?string }"
        }
    }, {
        "word": "bach",
        "pairs": ["subject=res:Johann_Sebastian_Bach"],
        "questions": {
            "348": "Where was Bach born?"
        },
        "Sparql": {
            "Sparql_348": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Johann_Sebastian_Bach dbo:birthPlace ?uri }"
        }
    }, {
        "word": "bad",
        "pairs": [],
        "questions": {
            "204": "Who played Gus Fring in Breaking Bad?"
        },
        "Sparql": {
            "Sparql_204": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Gus_Fring dbo:portrayer ?uri }"
        }
    }, {
        "word": "baikal_big",
        "pairs": ["predicate=dbo:areaTotal"],
        "questions": {
            "346": "Is Lake Baikal bigger than the Great Bear Lake?"
        },
        "Sparql": {
            "Sparql_346": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Lake_Baikal dbo:areaTotal ?a1 . res:Great_Bear_Lake dbo:areaTotal ?a2 FILTER ( ?a1 > ?a2 ) }"
        }
    }, {
        "word": "baikonur",
        "pairs": ["object=res:Baikonur_Cosmodrome "],
        "questions": {
            "23": "Which spaceflights were launched from Baikonur?",
            "167": "Which rockets were launched from Baikonur?"
        },
        "Sparql": {
            "Sparql_23": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/launchPad> res:Baikonur_Cosmodrome }",
            "Sparql_167": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Rocket> ; <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Baikonur_Cosmodrome> }"
        }
    }, {
        "word": "baldwin",
        "pairs": ["object='Baldwin'@en"],
        "questions": {
            "128": "Give me all actors called Baldwin."
        },
        "Sparql": {
            "Sparql_128": "PREFIX foaf:<http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?uri WHERE { ?uri foaf:surname 'Baldwin'@en . { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Actor> . } UNION { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . } }"
        }
    }, {
        "word": "bale_star",
        "pairs": ["predicate=dbo:starring"],
        "questions": {
            "131": "Is Christian Bale starring in Batman Begins?",
            "314": "Is Christian Bale starring in Velvet Goldmine?"
        },
        "Sparql": {
            "Sparql_131": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Batman_Begins dbo:starring res:Christian_Bale }",
            "Sparql_314": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Velvet_Goldmine dbo:starring res:Christian_Bale }"
        }
    }, {
        "word": "band_queens",
        "pairs": ["subject=res:Queens_of_the_Stone_Age"],
        "questions": {
            "410": "What was the first name of the band Queens of the Stone Age?"
        },
        "Sparql": {
            "Sparql_410": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?name WHERE { res:Queens_of_the_Stone_Age dbo:alias ?name }"
        }
    }, {
        "word": "bandleaders,bandleaders_play",
        "pairs": ["object=res:Bandleader","predicate=dboinstrument "],
        "questions": {
            "24": "Give me a list of all trumpet players that were bandleaders.",
            "164": "Give me a list of all bandleaders that play trumpet."
        },
        "Sparql": {
            "Sparql_24": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation res:Bandleader ; dbo:instrument res:Trumpet }",
            "Sparql_164": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Bandleader> ; <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Trumpet> }"
        }
    }, {
        "word": "band",
        "pairs": ["subject=dbo:Band"],
        "questions": {
            "101": "Give me all Australian metalcore bands."
        },
        "Sparql": {
            "Sparql_101": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Band> ; <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Metalcore> { ?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/hometown> ?h . ?h <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }"
        }
    }, {
        "word": "barack_obama",
        "pairs": ["subject=res:Barack_Obama"],
        "questions": {
            "274": "Is Barack Obama a democrat?",
            "376": "Is Michelle Obama the wife of Barack Obama?"
        },
        "Sparql": {
            "Sparql_274": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Barack_Obama dbo:party <http://dbpedia.org/resource/Democratic_Party_(United_States)> }",
            "Sparql_376": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Barack_Obama dbo:spouse res:Michelle_Obama }"
        }
    }, {
        "word": "basketball_player,",
        "pairs": ["subject=res:BasketballPlayer","object=res:BasketballPlayer"],
        "questions": {
            "34": "Show me all basketball players that are higher than 2 meters.",
            "53": "Who are the four youngest MVP basketball players?",
            "306": "Who is the tallest basketball player?"
        },
        "Sparql": {
            "Sparql_34": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > 2.0 ) }",
            "Sparql_53": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/birthDate> ?date ; <http://dbpedia.org/property/highlights> ?h FILTER regex(?h, \"MVP\") } ORDER BY DESC(?date) OFFSET 0 LIMIT 4",
            "Sparql_306": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:BasketballPlayer ; dbo:height ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "batman_begin",
        "pairs": ["subject=res:Batman_Begins"],
        "questions": {
            "131": "Is Christian Bale starring in Batman Begins?",
            "210": "Who created Batman?"
        },
        "Sparql": {
            "Sparql_131": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Batman_Begins dbo:starring res:Christian_Bale }",
            "Sparql_210": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Batman dbo:creator ?uri }"
        }
    }, {
        "word": "battle_chess",
        "pairs": ["object=\"Battle Chess\"@en"],
        "questions": {
            "358": "Is there a video game called Battle Chess?"
        },
        "Sparql": {
            "Sparql_358": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?uri rdf:type dbo:VideoGame ; rdfs:label \"Battle Chess\"@en }"
        }
    }, {
        "word": "battlestar_galactica",
        "pairs": ["subject=res:Battlestar_Galactica_%281978_TV_series%29"],
        "questions": {
            "160": "Does the new Battlestar Galactica series have more episodes than the old one?"
        },
        "Sparql": {
            "Sparql_160": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Battlestar_Galactica_%281978_TV_series%29> dbo:numberOfEpisodes ?x . <http://dbpedia.org/resource/Battlestar_Galactica_%282004_TV_series%29> dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }"
        }
    }, {
        "word": "bay_of",
        "pairs": ["subject=res:Bay_of_Pigs_Invasion "],
        "questions": {
            "198": "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?"
        },
        "Sparql": {
            "Sparql_198": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Cuban_Missile_Crisis dbo:date ?x . res:Bay_of_Pigs_Invasion dbo:date ?y FILTER ( ?x < ?y ) }"
        }
    }, {
        "word": "bbc_wildlife",
        "pairs": ["subject=res:BBC_Wildlife_Specials"],
        "questions": {
            "352": "Who is the host of the BBC Wildlife Specials?"
        },
        "Sparql": {
            "Sparql_352": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:BBC_Wildlife_Specials dbo:presenter ?uri }"
        }
    }, {
        "word": "beans",
        "pairs": ["object=res:Cocoa_bean"],
        "questions": {
            "257": "In which ancient empire could you pay with cocoa beans?"
        },
        "Sparql": {
            "Sparql_257": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:currency res:Cocoa_bean }"
        }
    }, {
        "word": "bear_lake",
        "pairs": ["subject=res:Great_Bear_Lake"],
        "questions": {
            "346": "Is Lake Baikal bigger than the Great Bear Lake?"
        },
        "Sparql": {
            "Sparql_346": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Lake_Baikal dbo:areaTotal ?a1 . res:Great_Bear_Lake dbo:areaTotal ?a2 FILTER ( ?a1 > ?a2 ) }"
        }
    }, {
        "word": "becker_end",
        "pairs": ["predicate=dbo:activeYearsEndDate"],
        "questions": {
            "388": "When did Boris Becker end his active career?"
        },
        "Sparql": {
            "Sparql_388": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Boris_Becker dbo:activeYearsEndDate ?d }"
        }
    }, {
        "word": "beer_originate",
        "pairs": ["predicate=dbo:origin"],
        "questions": {
            "80": "Which beer originated in Ireland?"
        },
        "Sparql": {
            "Sparql_80": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Beer> ; <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/Beer_in_Ireland> }"
        }
    }, {
        "word": "beijing",
        "pairs": ["object=res:Beijing "],
        "questions": {
            "263": "Which electronics companies were founded in Beijing?"
        },
        "Sparql": {
            "Sparql_263": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:industry res:Electronics ; dbo:foundationPlace res:Beijing }"
        }
    }, {
        "word": "belgium",
        "pairs": ["object=res:Belgium"],
        "questions": {
            "142": "Which telecommunications organizations are located in Belgium?"
        },
        "Sparql": {
            "Sparql_142": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Organisation> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Telecommunication> } UNION { ?uri <http://dbpedia.org/property/industry> ?industry FILTER regex(?industry, \"Telecommunications\") } { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belgium> } UNION { ?uri <http://dbpedia.org/property/locationCountry> \"Belgium\"@en } }"
        }
    }, {
        "word": "benicio_del",
        "pairs": ["object=res:Benicio_del_Toro "],
        "questions": {
            "345": "Who is starring in Spanish movies produced by Benicio del Toro?"
        },
        "Sparql": {
            "Sparql_345": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?film rdf:type dbo:Film ; dbo:country res:Spain ; dbo:producer res:Benicio_del_Toro ; dbo:starring ?uri . ?uri rdf:type dbo:Person }"
        }
    }, {
        "word": "benjamin_franklin",
        "pairs": ["subject=res:Benjamin_Franklin"],
        "questions": {
            "117": "Which ships were called after Benjamin Franklin?",
            "362": "How many children did Benjamin Franklin have?"
        },
        "Sparql": {
            "Sparql_117": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/shipNamesake> <http://dbpedia.org/resource/Benjamin_Franklin> }",
            "Sparql_362": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Benjamin_Franklin dbo:child ?uri }"
        }
    }, {
        "word": "bergman_marry",
        "pairs": ["predicate:dbp:spouse"],
        "questions": {
            "27": "Who is the daughter of Ingrid Bergman married to?"
        },
        "Sparql": {
            "Sparql_27": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ingrid_Bergman dbo:child ?child . ?child <http://dbpedia.org/property/spouse> ?uri }"
        }
    }, {
        "word": "berlin, berlin_tegel",
        "pairs": ["berlin=res:Berlin","object=res:Berlin_Tegel_Airport"],
        "questions": {
            "86": "Give me all actors who were born in Berlin.",
            "179": "Give me all people that were born in Vienna and died in Berlin.",
            "373": "Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?"
        },
        "Sparql": {
            "Sparql_86": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Actor> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Berlin> }",
            "Sparql_179": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Vienna> ; <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Berlin> }",
            "Sparql_373": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Lufthansa dbo:subsidiary ?uri . ?uri dbo:targetAirport res:Dortmund_Airport ; dbo:targetAirport res:Berlin_Tegel_Airport }"
        }
    }, {
        "word": "bernstein",
        "pairs": ["object=res:Leonard_Bernstein"],
        "questions": {
            "96": "List all the musicals with music by Leonard Bernstein."
        },
        "Sparql": {
            "Sparql_96": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Musical> ; <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Leonard_Bernstein> }"
        }
    }, {
        "word": "beverage",
        "pairs": ["object=dbo:Beverage"],
        "questions": {
            "193": "Is Cola a beverage?"
        },
        "Sparql": {
            "Sparql_193": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Cola rdf:type dbo:Beverage }"
        }
    }, {
        "word": "birth_name,birth_place",
        "pairs": ["predicate=dbp:birthName","predicate=dbo:birthPlace"],
        "questions": {
            "151": "What is the birth name of Angela Merkel?",
            "233": "What is the birth name of Adele?",
            "313": "Give me the birth place of Frank Sinatra."
        },
        "Sparql": {
            "Sparql_151": "SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/property/birthName> ?string }",
            "Sparql_233": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?bn WHERE { dbr:Adele dbo:birthName ?bn }",
            "Sparql_313": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?place WHERE { res:Frank_Sinatra dbo:birthPlace ?place }"
        }
    }, {
        "word": "birthday_of",
        "pairs": ["predicate:dbo:birthDate"],
        "questions": {
            "141": "Give me the birthdays of all actors of the television show Charmed."
        },
        "Sparql": {
            "Sparql_141": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date }"
        }
    }, {
        "word": "birthplace_of",
        "pairs": ["predicate=dbo:birthPlace"],
        "questions": {
            "197": "Where is the birthplace of Goethe?"
        },
        "Sparql": {
            "Sparql_197": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Goethe WHERE { dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?Goethe }"
        }
    }, {
        "word": "boardgames_by",
        "pairs": ["object=res:GMT_Games"],
        "questions": {
            "1": "List all boardgames by GMT."
        },
        "Sparql": {
            "Sparql_1": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games }"
        }
    }, {
        "word": "bond_marry",
        "pairs": ["predicate=dbo:spouse"],
        "questions": {
            "267": "Is James Bond married?"
        },
        "Sparql": {
            "Sparql_267": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:James_Bond dbo:spouse ?uri }"
        }
    }, {
        "word": "book_pillars,book_Les,book_Muhammad",
        "pairs": ["subject=res:The_Pillars_of_the_Earth","object=dbo:Book"],
        "questions": {
            "21": "Who wrote the book The pillars of the Earth?",
            "195": "Who wrote the book Les Piliers de la terre?",
            "335": "Who wrote the book The Pillars of the Earth?",
            "383": "Show me the book that Muhammad Ali wrote."
        },
        "Sparql": {
            "Sparql_21": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }",
            "Sparql_195": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }",
            "Sparql_335": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }",
            "Sparql_383": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:Muhammad_Ali }"
        }
    }, {
        "word": "book_writte,book_have,book,book_in,book_by",
        "pairs": ["predicate=dbo:author","object=dbo:Book","predicate=dbo:series","object=res:Penguin_Books"],
        "questions": {
            "109": "Give me all books written by Danielle Steel.",
            "119": "What other books have been written by the author of The Fault in Our Stars?",
            "121": "Which poet wrote the most books?",
            "123": "Which musician wrote the most books?",
            "347": "Show me all books in Asimov's Foundation series.",
            "371": "Give me all books by William Goldman with more than 300 pages.",
            "378": "Which books by Kerouac were published by Viking Press?",
            "396": "Who is the founder of Penguin Books?"
        },
        "Sparql": {
            "Sparql_109": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Book> ; <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Danielle_Steel> }",
            "Sparql_119": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?books WHERE { ?books dbo:author <http://dbpedia.org/resource/John_Green_(author)> }",
            "Sparql_121": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Poet> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1",
            "Sparql_123": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musician> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1",
            "Sparql_347": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:Foundation_series }",
            "Sparql_371": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:William_Goldman ; dbo:numberOfPages ?x FILTER ( ?x > 300 ) }",
            "Sparql_378": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:publisher res:Viking_Press ; dbo:author res:Jack_Kerouac }",
            "Sparql_396": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Penguin_Books dbo:founder ?uri }"
        }
    }, {
        "word": "border",
        "pairs": ["predicate=dbp:borders"],
        "questions": {
            "262": "With how many countries Iran has borders?"
        },
        "Sparql": {
            "Sparql_262": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?border WHERE { dbr:Geography_of_Iran dbp:borders ?border } LIMIT 8"
        }
    }, {
        "word": "boris_becker",
        "pairs": ["subject=res:Boris_Becker"],
        "questions": {
            "388": "When did Boris Becker end his active career?"
        },
        "Sparql": {
            "Sparql_388": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Boris_Becker dbo:activeYearsEndDate ?d }"
        }
    }, {
        "word": "borough_of",
        "pairs": ["predicate=dbo:governmentType"],
        "questions": {
            "393": "What are the five boroughs of New York?"
        },
        "Sparql": {
            "Sparql_393": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:governmentType <http://dbpedia.org/resource/Borough_(New_York_City)> }"
        }
    }, {
        "word": "bourgogne",
        "pairs": ["subject=res:Melon_de_Bourgogne"],
        "questions": {
            "276": "From which region is the Melon de Bourgogne?"
        },
        "Sparql": {
            "Sparql_276": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Melon_de_Bourgogne dbo:wineRegion ?uri }"
        }
    }, {
        "word": "brad_pitt",
        "pairs": ["object=res:Brad_Pitt"],
        "questions": {
            "12": "Which movies starring Brad Pitt were directed by Guy Ritchie?"
        },
        "Sparql": {
            "Sparql_12": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Brad_Pitt ; dbo:director res:Guy_Ritchie }"
        }
    }, {
        "word": "brazil_low",
        "pairs": ["subject=Brazil_national_football_team"],
        "questions": {
            "105": "What was Brazil's lowest rank in the FIFA World Ranking?"
        },
        "Sparql": {
            "Sparql_105": "SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Brazil_national_football_team> <http://dbpedia.org/property/fifaMin> ?n }"
        }
    }, {
        "word": "breed_of",
        "pairs": ["predicate=dbp:breed"],
        "questions": {
            "185": "Give me all breeds of the German Shepherd dog."
        },
        "Sparql": {
            "Sparql_185": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/breed> <http://dbpedia.org/resource/German_Shepherd> }"
        }
    }, {
        "word": "brewery_in",
        "pairs": ["predicate=dbo:location"],
        "questions": {
            "181": "Show me all the breweries in Australia."
        },
        "Sparql": {
            "Sparql_181": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Brewery> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }"
        }
    }, {
        "word": "brewery",
        "pairs": ["predicate=dbo:manufacturer"],
        "questions": {
            "273": "In what city is the Heineken brewery?"
        },
        "Sparql": {
            "Sparql_273": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Heineken dbo:manufacturer ?x . ?x dbo:locationCity ?uri }"
        }
    }, {
        "word": "bridge_cross,bride,bridge_with",
        "pairs": ["predicate=dbo:crosses","subject=res:Brooklyn_Bridge","subject=dbo:Bridge"],
        "questions": {
            "224": "Which river does the Brooklyn Bridge cross?",
            "350": "Who designed the Brooklyn Bridge?",
            "357": "What is the bridge with the longest span?"
        },
        "Sparql": {
            "Sparql_224": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:crosses ?uri }",
            "Sparql_350": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:architect ?uri }",
            "Sparql_357": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Bridge ; dbo:mainspan ?s } ORDER BY DESC(?s) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "bridge_cross",
        "pairs": ["predicate=dbo:crosses"],
        "questions": {
            "48": "Which bridges cross the Seine?"
        },
        "Sparql": {
            "Sparql_48": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Bridge> ; <http://dbpedia.org/ontology/crosses> <http://dbpedia.org/resource/Seine> }"
        }
    }, {
        "word": "brooklyn_bridge",
        "pairs": ["subject=res:Brooklyn_Bridge"],
        "questions": {
            "224": "Which river does the Brooklyn Bridge cross?",
            "350": "Who designed the Brooklyn Bridge?"
        },
        "Sparql": {
            "Sparql_224": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:crosses ?uri }",
            "Sparql_350": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:architect ?uri }"
        }
    }, {
        "word": "brown",
        "pairs": ["object=dbr:Dan_Brown "],
        "questions": {
            "236": "What is the last work of Dan Brown?"
        },
        "Sparql": {
            "Sparql_236": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?book WHERE { { ?book dbo:author dbr:Dan_Brown . ?book dbp:releaseDate ?date } UNION { ?book dbo:author dbr:Dan_Brown . ?book dbo:publicationDate ?date} } ORDER BY DESC(xsd:date(?date)) LIMIT 1"
        }
    }, {
        "word": "bruce",
        "pairs": [],
        "questions": {
            "13": "Give me the grandchildren of Bruce Lee.",
            "136": "Show me all songs from Bruce Springsteen released between 1980 and 1990.",
            "372": "What did Bruce Carver die from?"
        },
        "Sparql": {
            "Sparql_13": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Bruce_Lee dbo:child ?child . ?child <http://dbpedia.org/property/children> ?uri }",
            "Sparql_136": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> . ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Bruce_Springsteen> . ?uri <http://dbpedia.org/ontology/releaseDate> ?date . FILTER (?date >= '1980-01-01'^^xsd:date && ?date <= '1990-12-31'^^xsd:date) }",
            "Sparql_372": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Bruce_Carver dbo:deathCause ?uri }"
        }
    }, {
        "word": "budget_of, budget",
        "pairs": ["predicate=dbo:budget"],
        "questions": {
            "182": "Give me all films produced by Steven Spielberg with a budget of at least $80 million.",
            "407": "Which of Tim Burton's films had the highest budget?"
        },
        "Sparql": {
            "Sparql_182": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Steven_Spielberg> . ?uri <http://dbpedia.org/ontology/budget> ?b . FILTER( xsd:double(?b) >= 8.0E7 ) }",
            "Sparql_407": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Tim_Burton ; dbo:budget ?b } ORDER BY ?b OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "building_after",
        "pairs": ["object=dbo:Building"],
        "questions": {
            "340": "Which building after the Burj Khalifa has the most floors?"
        },
        "Sparql": {
            "Sparql_340": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Burj_Khalifa dbo:floorCount ?burj . ?uri rdf:type dbo:Building ; dbo:floorCount ?proj FILTER ( ?proj < ?burj ) } ORDER BY DESC(?proj) LIMIT 1"
        }
    }, {
        "word": "building_in",
        "pairs": ["subject=dbo:Building"],
        "questions": {
            "145": "Show me all English Gothic buildings in Kent."
        },
        "Sparql": {
            "Sparql_145": "SELECT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Building> ; <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/English_Gothic_architecture> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Kent> }"
        }
    }, {
        "word": "bulls",
        "pairs": [],
        "questions": {
            "186": "Who is the heaviest player of the Chicago Bulls?"
        },
        "Sparql": {
            "Sparql_186": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/ontology/weight> ?num { ?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/ontology/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "bundesliga",
        "pairs": [],
        "questions": {
            "46": "Show a list of soccer clubs that play in the Bundesliga."
        },
        "Sparql": {
            "Sparql_46": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Bundesliga> }"
        }
    }, {
        "word": "burj",
        "pairs": [],
        "questions": {
            "340": "Which building after the Burj Khalifa has the most floors?"
        },
        "Sparql": {
            "Sparql_340": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Burj_Khalifa dbo:floorCount ?burj . ?uri rdf:type dbo:Building ; dbo:floorCount ?proj FILTER ( ?proj < ?burj ) } ORDER BY DESC(?proj) LIMIT 1"
        }
    }, {
        "word": "burton",
        "pairs": [],
        "questions": {
            "70": "Which movies star both Liz Taylor and Richard Burton?",
            "407": "Which of Tim Burton's films had the highest budget?"
        },
        "Sparql": {
            "Sparql_70": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> }",
            "Sparql_407": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Tim_Burton ; dbo:budget ?b } ORDER BY ?b OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "business",
        "pairs": ["predicate=dbo:owner"],
        "questions": {
            "280": "What is Donald Trump's main business?"
        },
        "Sparql": {
            "Sparql_280": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?owner WHERE { ?owner dbo:owner dbr:Donald_Trump }"
        }
    }, {
        "word": "butter",
        "pairs": ["subject=res:Peanut_butter"],
        "questions": {
            "83": "How much carbs does peanut butter have?"
        },
        "Sparql": {
            "Sparql_83": "SELECT DISTINCT ?carbs WHERE { <http://dbpedia.org/resource/Peanut_butter> <http://dbpedia.org/property/carbs> ?carbs }"
        }
    }, {
        "word": "cairo",
        "pairs": [],
        "questions": {
            "234": "What is the population of Cairo?"
        },
        "Sparql": {
            "Sparql_234": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?pop WHERE { dbr:Cairo dbo:populationTotal ?pop }"
        }
    }, {
        "word": "cake",
        "pairs": ["subject=res:Carrot_cake"],
        "questions": {
            "199": "Which ingredients do I need for carrot cake?"
        },
        "Sparql": {
            "Sparql_199": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Carrot_cake dbo:ingredient ?uri }"
        }
    }, {
        "word": "california",
        "pairs": [],
        "questions": {
            "125": "Which software has been developed by organizations founded in California?",
            "379": "Who wrote the song Hotel California?"
        },
        "Sparql": {
            "Sparql_125": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Software> . ?company a <http://dbpedia.org/ontology/Company> . ?uri <http://dbpedia.org/ontology/developer> ?company . ?company <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/California> }",
            "Sparql_379": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Hotel_California dbo:writer ?uri }"
        }
    }, {
        "word": "cameron",
        "pairs": [],
        "questions": {
            "259": "Who composed the soundtrack for Cameron's Titanic?"
        },
        "Sparql": {
            "Sparql_259": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Titanic_(1997_film)> dbo:musicComposer ?uri }"
        }
    }, {
        "word": "cameroon",
        "pairs": [],
        "questions": {
            "317": "What is the capital of Cameroon?"
        },
        "Sparql": {
            "Sparql_317": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Cameroon dbo:capital ?uri }"
        }
    }, {
        "word": "canada",
        "pairs": [],
        "questions": {
            "284": "How many inhabitants does the largest city in Canada have?",
            "380": "What is the capital of Canada?"
        },
        "Sparql": {
            "Sparql_284": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Canada dbo:largestCity ?city . ?city dbo:populationTotal ?num }",
            "Sparql_380": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Canada dbo:capital ?uri }"
        }
    }, {
        "word": "cannes",
        "pairs": ["object=res:Grand_Prix_(Cannes_Film_Festival)"],
        "questions": {
            "309": "Did Kaurismäki ever win the Grand Prix at Cannes?"
        },
        "Sparql": {
            "Sparql_309": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Aki_Kaurismäki dbo:award <http://dbpedia.org/resource/Grand_Prix_(Cannes_Film_Festival)> }"
        }
    }, {
        "word": "capital,capital_of,",
        "pairs": ["predicate=dbo:capital"],
        "questions": {
            "166": "Is Egypts largest city also its capital?",
            "256": "How many people live in the capital of Australia?",
            "285": "Who is the mayor of the capital of French Polynesia?",
            "317": "What is the capital of Cameroon?",
            "380": "What is the capital of Canada?"
        },
        "Sparql": {
            "Sparql_166": "ASK WHERE { <http://dbpedia.org/resource/Egypt> <http://dbpedia.org/ontology/largestCity> ?large ; <http://dbpedia.org/ontology/capital> ?capital FILTER ( ?large = ?capital ) }",
            "Sparql_256": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Australia dbo:capital ?x . ?x dbo:populationTotal ?num }",
            "Sparql_285": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:French_Polynesia dbo:capital ?x . ?x dbo:mayor ?uri }",
            "Sparql_317": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Cameroon dbo:capital ?uri }",
            "Sparql_380": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Canada dbo:capital ?uri }"
        }
    }, {
        "word": "capital",
        "pairs": ["predicate=dbo:capital"],
        "questions": {
            "55": "Give me the capitals of all countries that the Himalayas run through."
        },
        "Sparql": {
            "Sparql_55": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?country . ?country <http://dbpedia.org/ontology/capital> ?uri }"
        }
    }, {
        "word": "captain_America",
        "pairs": ["object=res:Captain_America"],
        "questions": {
            "19": "Who created the comic Captain America?"
        },
        "Sparql": {
            "Sparql_19": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Captain_America dbo:creator ?uri }"
        }
    }, {
        "word": "carb_peanut",
        "pairs": ["predicate=dbp:carbs"],
        "questions": {
            "83": "How much carbs does peanut butter have?"
        },
        "Sparql": {
            "Sparql_83": "SELECT DISTINCT ?carbs WHERE { <http://dbpedia.org/resource/Peanut_butter> <http://dbpedia.org/property/carbs> ?carbs }"
        }
    }, {
        "word": "care",
        "pairs": ["subject=res:UNC_Health_Care> "],
        "questions": {
            "176": "What are the specialities of the UNC Health Care?"
        },
        "Sparql": {
            "Sparql_176": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/UNC_Health_Care> <http://dbpedia.org/property/speciality> ?uri }"
        }
    }, {
        "word": "career",
        "pairs": ["predicate=dbo:activeYearsEndDate"],
        "questions": {
            "388": "When did Boris Becker end his active career?"
        },
        "Sparql": {
            "Sparql_388": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Boris_Becker dbo:activeYearsEndDate ?d }"
        }
    }, {
        "word": "carolina",
        "pairs": [],
        "questions": {
            "242": "Where is the origin of Carolina reaper?"
        },
        "Sparql": {
            "Sparql_242": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:Carolina_Reaper dbo:origin ?uri}"
        }
    }, {
        "word": "carrot_cake",
        "pairs": ["subject=res:Carrot_cake"],
        "questions": {
            "199": "Which ingredients do I need for carrot cake?"
        },
        "Sparql": {
            "Sparql_199": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Carrot_cake dbo:ingredient ?uri }"
        }
    }, {
        "word": "carver",
        "pairs": [],
        "questions": {
            "372": "What did Bruce Carver die from?"
        },
        "Sparql": {
            "Sparql_372": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Bruce_Carver dbo:deathCause ?uri }"
        }
    }, {
        "word": "cat",
        "pairs": [],
        "questions": {
            "126": "Which instruments does Cat Stevens play?"
        },
        "Sparql": {
            "Sparql_126": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cat_Stevens> <http://dbpedia.org/ontology/instrument> ?uri }"
        }
    }, {
        "word": "cause_of",
        "pairs": ["predicate=dbo:deathCause"],
        "questions": {
            "52": "What is the most frequent cause of death?"
        },
        "Sparql": {
            "Sparql_52": "SELECT DISTINCT ?x WHERE { ?uri <http://dbpedia.org/ontology/deathCause> ?x . } ORDER BY DESC(COUNT(DISTINCT ?uri)) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "cave, cave_have",
        "pairs": ["object=dbo:Cave","subject=dbo:Cave"],
        "questions": {
            "6": "Which countries have places with more than two caves?",
            "30": "Which caves have more than 3 entrances?",
            "135": "Which countries have more than ten caves?"
        },
        "Sparql": {
            "Sparql_6": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?cave rdf:type dbo:Cave ; dbo:location ?uri . ?uri rdf:type dbo:Country } GROUP BY ?uri HAVING ( COUNT(?cave) > 2 )",
            "Sparql_30": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Cave> ; <http://dbpedia.org/property/entranceCount> ?entrance FILTER ( ?entrance > 3 ) }",
            "Sparql_135": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> . ?cave a <http://dbpedia.org/ontology/Cave> { ?cave <http://dbpedia.org/ontology/location> ?uri } UNION { ?cave <http://dbpedia.org/ontology/location> ?loc . ?loc <http://dbpedia.org/ontology/country> ?uri } } GROUP BY ?uri HAVING ( COUNT(?cave) > 10 )"
        }
    }, {
        "word": "ceres",
        "pairs": [],
        "questions": {
            "191": "Who discovered Ceres?"
        },
        "Sparql": {
            "Sparql_191": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> dbo:discoverer ?uri }"
        }
    }, {
        "word": "cfa",
        "pairs": [],
        "questions": {
            "147": "In which countries can you pay using the West African CFA franc?"
        },
        "Sparql": {
            "Sparql_147": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> }"
        }
    }, {
        "word": "chagall",
        "pairs": [],
        "questions": {
            "104": "Was Marc Chagall a jew?"
        },
        "Sparql": {
            "Sparql_104": "ASK WHERE { <http://dbpedia.org/resource/Marc_Chagall> <http://dbpedia.org/property/ethnicity> \"Jewish\"@en }"
        }
    }, {
        "word": "chan-wook",
        "pairs": [],
        "questions": {
            "56": "How many movies did Park Chan-wook direct?"
        },
        "Sparql": {
            "Sparql_56": "SELECT COUNT(DISTINCT ?uri AS ?uri) WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Park_Chan-wook> . }"
        }
    }, {
        "word": "chancellor_of",
        "pairs": ["dbo:almaMater"],
        "questions": {
            "194": "What is the alma mater of the chancellor of Germany Angela Merkel?"
        },
        "Sparql": {
            "Sparql_194": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Almamater WHERE { dbr:Angela_Merkel dbo:almaMater ?Almamater }"
        }
    }, {
        "word": "chancellors",
        "pairs": ["object=res:Chancellor_of_Germany"],
        "questions": {
            "78": "Give me all federal chancellors of Germany."
        },
        "Sparql": {
            "Sparql_78": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> { ?uri <http://dbpedia.org/ontology/office> \"Chancellor of Germany\" } UNION { ?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Chancellor_of_Germany> } }"
        }
    }, {
        "word": "charmed",
        "pairs": [],
        "questions": {
            "141": "Give me the birthdays of all actors of the television show Charmed."
        },
        "Sparql": {
            "Sparql_141": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date }"
        }
    }, {
        "word": "che",
        "pairs": [],
        "questions": {
            "308": "Did Che Guevara have children?"
        },
        "Sparql": {
            "Sparql_308": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Che_Guevara dbo:child ?uri }"
        }
    }, {
        "word": "chemist",
        "pairs": ["object=res:Chemist"],
        "questions": {
            "107": "Was Margaret Thatcher a chemist?"
        },
        "Sparql": {
            "Sparql_107": "ASK WHERE { <http://dbpedia.org/resource/Margaret_Thatcher> <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Chemist> }"
        }
    }, {
        "word": "cher",
        "pairs": [],
        "questions": {
            "315": "Who is the son of Sonny and Cher?"
        },
        "Sparql": {
            "Sparql_315": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:parent res:Cher ; dbo:parent res:Sonny_Bono }"
        }
    }, {
        "word": "chess_player",
        "pairs": ["subject=dbo:ChessPlayer","object=\"Battle Chess\"@en"],
        "questions": {
            "169": "Which Chess players died in the same place they were born in?",
            "358": "Is there a video game called Battle Chess?"
        },
        "Sparql": {
            "Sparql_169": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ChessPlayer> ; <http://dbpedia.org/ontology/birthPlace> ?x ; <http://dbpedia.org/ontology/deathPlace> ?y FILTER ( ?x = ?y ) }",
            "Sparql_358": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?uri rdf:type dbo:VideoGame ; rdfs:label \"Battle Chess\"@en }"
        }
    }, {
        "word": "chewbacca",
        "pairs": [],
        "questions": {
            "112": "Which actor played Chewbacca?"
        },
        "Sparql": {
            "Sparql_112": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chewbacca> <http://dbpedia.org/ontology/portrayer> ?uri }"
        }
    }, {
        "word": "chicago",
        "pairs": [],
        "questions": {
            "186": "Who is the heaviest player of the Chicago Bulls?"
        },
        "Sparql": {
            "Sparql_186": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/ontology/weight> ?num { ?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/ontology/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "child_of",
        "pairs": ["predicate=dbo:child"],
        "questions": {
            "320": "Who is the oldest child of Meryl Streep?"
        },
        "Sparql": {
            "Sparql_320": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Meryl_Streep dbo:child ?uri . ?uri dbo:birthDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "child,child_of,child_of_Margaret ",
        "pairs": ["predicate=dbp:children"],
        "questions": {
            "144": "How many children does Eddie Murphy have?",
            "275": "List the children of Margaret Thatcher.",
            "308": "Did Che Guevara have children?",
            "362": "How many children did Benjamin Franklin have?",
            "375": "Did Elvis Presley have children?"
        },
        "Sparql": {
            "Sparql_144": "SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Eddie_Murphy> <http://dbpedia.org/property/children> ?n }",
            "Sparql_275": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Margaret_Thatcher dbo:child ?uri }",
            "Sparql_308": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Che_Guevara dbo:child ?uri }",
            "Sparql_362": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Benjamin_Franklin dbo:child ?uri }",
            "Sparql_375": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Elvis_Presley dbo:child ?uri }"
        }
    }, {
        "word": "chile",
        "pairs": [],
        "questions": {
            "366": "In which city does the Chile Route 68 end?"
        },
        "Sparql": {
            "Sparql_366": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Chile_Route_68 dbo:routeEnd ?uri }"
        }
    }, {
        "word": "china",
        "pairs": [],
        "questions": {
            "8": "Which airports does Air China serve?",
            "402": "Give me the currency of China."
        },
        "Sparql": {
            "Sparql_8": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Air_China dbo:targetAirport ?uri }",
            "Sparql_402": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:China dbo:currency ?uri }"
        }
    }, {
        "word": "chip_cookie",
        "pairs": ["subject=res:Chocolate_chip_cookie"],
        "questions": {
            "293": "What is in a chocolate chip cookie?"
        },
        "Sparql": {
            "Sparql_293": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Chocolate_chip_cookie dbo:ingredient ?uri }"
        }
    }, {
        "word": "chirac",
        "pairs": [],
        "questions": {
            "302": "Who was married to president Chirac?"
        },
        "Sparql": {
            "Sparql_302": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Jacques_Chirac dbo:spouse ?uri }"
        }
    }, {
        "word": "chocolate_chip",
        "pairs": ["subject=res:Chocolate_chip_cookie"],
        "questions": {
            "293": "What is in a chocolate chip cookie?"
        },
        "Sparql": {
            "Sparql_293": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Chocolate_chip_cookie dbo:ingredient ?uri }"
        }
    }, {
        "word": "christian",
        "pairs": [],
        "questions": {
            "131": "Is Christian Bale starring in Batman Begins?",
            "314": "Is Christian Bale starring in Velvet Goldmine?"
        },
        "Sparql": {
            "Sparql_131": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Batman_Begins dbo:starring res:Christian_Bale }",
            "Sparql_314": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Velvet_Goldmine dbo:starring res:Christian_Bale }"
        }
    }, {
        "word": "christmas",
        "pairs": ["predicate=rdfs:label"],
        "questions": {
            "88": "Which music albums contain the song Last Christmas?"
        },
        "Sparql": {
            "Sparql_88": "SELECT DISTINCT ?uri WHERE { ?single <http://dbpedia.org/ontology/album> ?uri ; <http://www.w3.org/2000/01/rdf-schema#label> \"Last Christmas\"@en }"
        }
    }, {
        "word": "city_in,city_Weser",
        "pairs": ["object=dbo:City","predicate=dbo:City"],
        "questions": {
            "173": "Give me all cities in New Jersey with more than 100000 inhabitants.",
            "246": "Which cities does the Weser flow through?"
        },
        "Sparql": {
            "Sparql_173": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:isPartOf res:New_Jersey ; dbo:populationTotal ?inhabitants FILTER ( ?inhabitants > 100000 ) }",
            "Sparql_246": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Weser dbo:city ?uri }"
        }
    }, {
        "word": "city, city_former,city_by,city_capital,city_Heineken, city_inhabitant, city_in, city_least,city_old,city_Chile,city_John,city_headquarter",
        "pairs": ["subject=res:New_York_City","subject=dbo:Settlement","object=dbc:Cities_in_Germany","predicate:dbo:largestCity","predicate=dbo:locationCity","object=dbo:locationCity","predicate=dbo:Town","object=dbo:City","predicate=dbo:headquarter","subject=res:Chile_Route_68"],
        "questions": {
            "5": "Who is the mayor of New York City?",
            "95": "In which city was the former Dutch queen Juliana buried?",
            "154": "What is the smallest city by area in Germany?",
            "166": "Is Egypts largest city also its capital?",
            "189": "What is the largest city in america?",
            "217": "How much is the population of mexico city ?",
            "273": "In what city is the Heineken brewery?",
            "279": "Which city has the most inhabitants?",
            "284": "How many inhabitants does the largest city in Canada have?",
            "292": "In which city did Nikos Kazantzakis die?",
            "301": "What is the largest city in Australia?",
            "332": "Which city has the least inhabitants?",
            "349": "Which city has the oldest running metro?",
            "364": "In which UK city are the headquarters of the MI6?",
            "366": "In which city does the Chile Route 68 end?",
            "377": "In which city does Sylvester Stallone live?",
            "399": "In which city did John F. Kennedy die?",
            "404": "In which city are the headquarters of the United Nations?"
        },
        "Sparql": {
            "Sparql_5": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:New_York_City dbo:leaderName ?uri }",
            "Sparql_95": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juliana_of_the_Netherlands> <http://dbpedia.org/property/burialPlace> ?uri . ?uri a <http://dbpedia.org/ontology/Settlement> }",
            "Sparql_154": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX skos: <http://www.w3.org/2004/02/skos/core#> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX dct: <http://purl.org/dc/terms/> SELECT ?city WHERE { ?m skos:broader dbc:Cities_in_Germany . ?city dct:subject ?m ; dbo:areaTotal ?area } ORDER BY ?area LIMIT 1",
            "Sparql_166": "ASK WHERE { <http://dbpedia.org/resource/Egypt> <http://dbpedia.org/ontology/largestCity> ?large ; <http://dbpedia.org/ontology/capital> ?capital FILTER ( ?large = ?capital ) }",
            "Sparql_189": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?lcity WHERE { dbr:United_States dbo:largestCity ?lcity }",
            "Sparql_217": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Mexico_City WHERE { dbr:Mexico_City dbo:populationTotal ?Mexico_City }",
            "Sparql_273": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Heineken dbo:manufacturer ?x . ?x dbo:locationCity ?uri }",
            "Sparql_279": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:populationTotal ?pop } ORDER BY DESC(?pop) OFFSET 0 LIMIT 1",
            "Sparql_284": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Canada dbo:largestCity ?city . ?city dbo:populationTotal ?num }",
            "Sparql_292": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Nikos_Kazantzakis dbo:deathPlace ?uri . ?uri rdf:type dbo:Town }",
            "Sparql_301": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Australia dbo:largestCity ?uri }",
            "Sparql_332": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:populationTotal ?pop } ORDER BY ASC(?pop) OFFSET 0 LIMIT 1",
            "Sparql_349": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?loc WHERE { ?uri dbo:type dbr:Rapid_transit ; dbo:openingYear ?date ; dbo:location ?loc . ?loc rdf:type dbo:City } ORDER BY ASC(?date) LIMIT 1",
            "Sparql_364": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Secret_Intelligence_Service dbo:headquarter ?uri . ?uri dbo:country res:United_Kingdom }",
            "Sparql_366": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Chile_Route_68 dbo:routeEnd ?uri }",
            "Sparql_377": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City . res:Sylvester_Stallone dbo:residence ?uri }",
            "Sparql_399": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:deathPlace ?uri . ?uri rdf:type dbo:City }",
            "Sparql_404": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Headquarters_of_the_United_Nations dbo:location ?uri . ?uri rdf:type dbo:City }"
        }
    }, {
        "word": "claudia",
        "pairs": [],
        "questions": {
            "287": "How tall is Claudia Schiffer?"
        },
        "Sparql": {
            "Sparql_287": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Claudia_Schiffer dbo:height ?height }"
        }
    }, {
        "word": "cleese",
        "pairs": [],
        "questions": {
            "137": "Which television shows were created by John Cleese?"
        },
        "Sparql": {
            "Sparql_137": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> }"
        }
    }, {
        "word": "clint",
        "pairs": [],
        "questions": {
            "124": "Which films starring Clint Eastwood did he direct himself?"
        },
        "Sparql": {
            "Sparql_124": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Clint_Eastwood> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Clint_Eastwood> }"
        }
    }, {
        "word": "club_play, club_in",
        "pairs": ["predicate=dbo:league","predicate=dbo:ground"],
        "questions": {
            "46": "Show a list of soccer clubs that play in the Bundesliga.",
            "64": "Give me all soccer clubs in the Premier League.",
            "183": "Give me all soccer clubs in Spain."
        },
        "Sparql": {
            "Sparql_46": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Bundesliga> }",
            "Sparql_64": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Premier_League> }",
            "Sparql_183": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> { ?uri <http://dbpedia.org/ontology/ground> <http://dbpedia.org/resource/Spain> } UNION { ?uri <http://dbpedia.org/property/ground> ?ground FILTER regex(?ground, \"Spain\") } }"
        }
    }, {
        "word": "coach_of",
        "pairs": ["predicate=dbo:coach"],
        "questions": {
            "208": "Who is the coach of Ankara's ice hockey team?"
        },
        "Sparql": {
            "Sparql_208": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:city res:Ankara ; dbo:league res:Turkish_Ice_Hockey_First_League ; dbo:coach ?uri }"
        }
    }, {
        "word": "cocoa_bean",
        "pairs": ["object=res:Cocoa_bean"],
        "questions": {
            "257": "In which ancient empire could you pay with cocoa beans?"
        },
        "Sparql": {
            "Sparql_257": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:currency res:Cocoa_bean }"
        }
    }, {
        "word": "cola_beverage",
        "pairs": ["subject=res:Cola"],
        "questions": {
            "193": "Is Cola a beverage?"
        },
        "Sparql": {
            "Sparql_193": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Cola rdf:type dbo:Beverage }"
        }
    }, {
        "word": "colombia",
        "pairs": [],
        "questions": {
            "385": "How many languages are spoken in Colombia?"
        },
        "Sparql": {
            "Sparql_385": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri rdf:type dbo:Language . res:Colombia dbo:language ?uri }"
        }
    }, {
        "word": "colombo",
        "pairs": [],
        "questions": {
            "298": "How high is the lighthouse in Colombo?"
        },
        "Sparql": {
            "Sparql_298": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Colombo_Lighthouse dbo:height ?num }"
        }
    }, {
        "word": "color_of",
        "pairs": ["predicate=dbo:officialSchoolColour"],
        "questions": {
            "49": "What is the official color of the University of Oxford?"
        },
        "Sparql": {
            "Sparql_49": "SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/University_of_Oxford> <http://dbpedia.org/ontology/officialSchoolColour> ?string }"
        }
    }, {
        "word": "columbia",
        "pairs": [],
        "questions": {
            "140": "How many politicians graduated from Columbia University?"
        },
        "Sparql": {
            "Sparql_140": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> ; <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Columbia_University> }"
        }
    }, {
        "word": "company_in,company,company_produce,company_found",
        "pairs": ["subject=dbo:Company","predicate=dbo:industry","predicate=dbo:product","predicate=dbo:foundationPlace"],
        "questions": {
            "54": "Give me all companies in Munich.",
            "62": "Which companies have more than 1 million employees?",
            "97": "Give me all companies in the advertising industry.",
            "253": "Which companies produce hovercrafts?",
            "263": "Which electronics companies were founded in Beijing?"
        },
        "Sparql": {
            "Sparql_54": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Munich> } UNION { ?uri <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Munich> } UNION { ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Munich> } }",
            "Sparql_62": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/numberOfEmployees> ?n } UNION { ?uri <http://dbpedia.org/property/numEmployees> ?n } FILTER ( ?n > 1000000 ) }",
            "Sparql_97": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Advertising> } UNION { ?uri <http://dbpedia.org/ontology/industry> ?industry FILTER regex(?industry, \"advertising\", \"i\") } }",
            "Sparql_253": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:product res:Hovercraft }",
            "Sparql_263": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:industry res:Electronics ; dbo:foundationPlace res:Beijing }"
        }
    }, {
        "word": "company_employ,company_manufacture",
        "pairs": ["object=dbo:Company","object=dbr:Ford_Motor_Company"],
        "questions": {
            "269": "Which Indian company has the most employees?",
            "360": "Does the Ford Motor Company have a manufacturing plant in Malaysia?"
        },
        "Sparql": {
            "Sparql_269": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:location res:India ; dbo:numberOfEmployees ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1",
            "Sparql_360": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { ?uri dbo:assembly dbr:Malaysia ; dbo:manufacturer dbr:Ford_Motor_Company }"
        }
    }, {
        "word": "conflict",
        "pairs": ["predicate=dbo:battle"],
        "questions": {
            "369": "In which military conflicts did Lawrence of Arabia participate?"
        },
        "Sparql": {
            "Sparql_369": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:T._E._Lawrence dbo:battle ?uri }"
        }
    }, {
        "word": "cookie",
        "pairs": ["subject=res:Chocolate_chip_cookie"],
        "questions": {
            "293": "What is in a chocolate chip cookie?"
        },
        "Sparql": {
            "Sparql_293": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Chocolate_chip_cookie dbo:ingredient ?uri }"
        }
    }, {
        "word": "coppola",
        "pairs": [],
        "questions": {
            "213": "Give me all movies directed by Francis Ford Coppola."
        },
        "Sparql": {
            "Sparql_213": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:director res:Francis_Ford_Coppola }"
        }
    }, {
        "word": "cosmonaut",
        "pairs": ["subject=dbo:Astronaut"],
        "questions": {
            "41": "Give me all cosmonauts."
        },
        "Sparql": {
            "Sparql_41": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Astronaut> { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russia> } UNION { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soviet_Union> } }"
        }
    }, {
        "word": "country_place,country_himalaya,country_adopt,country_cave,country_pay,country_Iran,country",
        "pairs": ["object=dbo:Country","predicate=dbo:country","subject=dbo:country","predicate=dbo:Country"],
        "questions": {
            "6": "Which countries have places with more than two caves?",
            "55": "Give me the capitals of all countries that the Himalayas run through.",
            "81": "To which countries does the Himalayan mountain system extend?",
            "102": "Which countries adopted the Euro?",
            "134": "Which countries have more than two official languages?",
            "135": "Which countries have more than ten caves?",
            "147": "In which countries can you pay using the West African CFA franc?",
            "262": "With how many countries Iran has borders?",
            "406": "In which countries do people speak Japanese?"
        },
        "Sparql": {
            "Sparql_6": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?cave rdf:type dbo:Cave ; dbo:location ?uri . ?uri rdf:type dbo:Country } GROUP BY ?uri HAVING ( COUNT(?cave) > 2 )",
            "Sparql_55": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?country . ?country <http://dbpedia.org/ontology/capital> ?uri }",
            "Sparql_81": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?uri }",
            "Sparql_102": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> } UNION { ?uri <http://dbpedia.org/property/currencyCode> \"EUR\"@en } }",
            "Sparql_134": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> ; <http://dbpedia.org/ontology/officialLanguage> ?language } GROUP BY ?uri HAVING ( COUNT(?language) > 2 )",
            "Sparql_135": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> . ?cave a <http://dbpedia.org/ontology/Cave> { ?cave <http://dbpedia.org/ontology/location> ?uri } UNION { ?cave <http://dbpedia.org/ontology/location> ?loc . ?loc <http://dbpedia.org/ontology/country> ?uri } } GROUP BY ?uri HAVING ( COUNT(?cave) > 10 )",
            "Sparql_147": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> }",
            "Sparql_262": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?border WHERE { dbr:Geography_of_Iran dbp:borders ?border } LIMIT 8",
            "Sparql_406": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:language res:Japanese_language }"
        }
    }, {
        "word": "country_official,country_in,country_Nile,country_Mecca, country_creator",
        "pairs": ["predicate=dbo:Country","predicate=dbo:sourceCountry","predicate=dbo:country","predicate=dbo:creator","predicate=dbo:foundationPlace","object=dbo:Country","predicate=dbo:sourceCountry"],
        "questions": {
            "110": "Which country has the most official languages?",
            "188": "What is the largest country in the world?",
            "203": "In which country is Mecca located?",
            "205": "In which country does the Nile start?",
            "271": "Which country does the creator of Miffy come from?",
            "294": "In which country is the Limerick Lake?",
            "312": "What country is Sitecore from?",
            "354": "What country is Mount Everest in?",
            "395": "In which country does the Ganges start?"
        },
        "Sparql": {
            "Sparql_110": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/property/officialLanguages> ?language . } ORDER BY DESC(COUNT(?language)) OFFSET 0 LIMIT 1",
            "Sparql_188": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:areaTotal ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1",
            "Sparql_203": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mecca dbo:country ?uri }",
            "Sparql_205": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Nile dbo:sourceCountry ?uri }",
            "Sparql_271": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Miffy dbo:creator ?x . ?x dbo:nationality ?uri }",
            "Sparql_294": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Limerick_Lake dbo:country ?uri }",
            "Sparql_312": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Sitecore dbo:foundationPlace ?uri }",
            "Sparql_354": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:locatedInArea ?uri . ?uri rdf:type dbo:Country }",
            "Sparql_395": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ganges dbo:sourceCountry ?uri }"
        }
    }, {
        "word": "creator_of",
        "pairs": ["predicate=dbo:creator"],
        "questions": {
            "271": "Which country does the creator of Miffy come from?"
        },
        "Sparql": {
            "Sparql_271": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Miffy dbo:creator ?x . ?x dbo:nationality ?uri }"
        }
    }, {
        "word": "crisis",
        "pairs": ["subject=res:Cuban_Missile_Crisis"],
        "questions": {
            "198": "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?"
        },
        "Sparql": {
            "Sparql_198": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Cuban_Missile_Crisis dbo:date ?x . res:Bay_of_Pigs_Invasion dbo:date ?y FILTER ( ?x < ?y ) }"
        }
    }, {
        "word": "cruise",
        "pairs": [],
        "questions": {
            "152": "Who has Tom Cruise been married to?",
            "171": "Give me all movies with Tom Cruise."
        },
        "Sparql": {
            "Sparql_152": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tom_Cruise> }",
            "Sparql_171": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Tom_Cruise> }"
        }
    }, {
        "word": "cup_2018",
        "pairs": ["subject=dbr:2018_FIFA_World_Cup"],
        "questions": {
            "281": "When will start the final match of the football world cup 2018?"
        },
        "Sparql": {
            "Sparql_281": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?Date WHERE { dbr:2018_FIFA_World_Cup dbp:date ?Date } ORDER BY DESC(?Date) LIMIT 1"
        }
    }, {
        "word": "currency_of",
        "pairs": ["predicate=dbo:currency"],
        "questions": {
            "386": "What is the currency of the Czech Republic?",
            "402": "Give me the currency of China."
        },
        "Sparql": {
            "Sparql_386": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Czech_Republic dbo:currency ?uri }",
            "Sparql_402": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:China dbo:currency ?uri }"
        }
    }, {
        "word": "czech",
        "pairs": ["predicate=dbo:currency"],
        "questions": {
            "386": "What is the currency of the Czech Republic?"
        },
        "Sparql": {
            "Sparql_386": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Czech_Republic dbo:currency ?uri }"
        }
    }, {
        "word": "dan",
        "pairs": [],
        "questions": {
            "236": "What is the last work of Dan Brown?"
        },
        "Sparql": {
            "Sparql_236": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?book WHERE { { ?book dbo:author dbr:Dan_Brown . ?book dbp:releaseDate ?date } UNION { ?book dbo:author dbr:Dan_Brown . ?book dbo:publicationDate ?date} } ORDER BY DESC(xsd:date(?date)) LIMIT 1"
        }
    }, {
        "word": "dancers",
        "pairs": [],
        "questions": {
            "355": "To which artistic movement did the painter of The Three Dancers belong?"
        },
        "Sparql": {
            "Sparql_355": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Three_Dancers dbo:author ?person . ?person dbo:movement ?uri }"
        }
    }, {
        "word": "danielle",
        "pairs": [],
        "questions": {
            "109": "Give me all books written by Danielle Steel."
        },
        "Sparql": {
            "Sparql_109": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Book> ; <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Danielle_Steel> }"
        }
    }, {
        "word": "darth",
        "pairs": [],
        "questions": {
            "180": "Is Darth Vader Luke’s father?"
        },
        "Sparql": {
            "Sparql_180": "ASK WHERE { <http://dbpedia.org/resource/Darth_Vader> <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Luke_Skywalker> }"
        }
    }, {
        "word": "darts",
        "pairs": [],
        "questions": {
            "222": "Who is the youngest Darts player?"
        },
        "Sparql": {
            "Sparql_222": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:DartsPlayer ; dbo:birthDate ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "date_of",
        "pairs": ["predicate=dbo:foundingDate"],
        "questions": {
            "218": "when was the founding date of french fifth republic?"
        },
        "Sparql": {
            "Sparql_218": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ff WHERE { dbr:French_Fifth_Republic dbo:foundingDate ?ff }"
        }
    }, {
        "word": "daughter_of",
        "pairs": ["predicate=dbo:child"],
        "questions": {
            "27": "Who is the daughter of Ingrid Bergman married to?"
        },
        "Sparql": {
            "Sparql_27": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ingrid_Bergman dbo:child ?child . ?child <http://dbpedia.org/property/spouse> ?uri }"
        }
    }, {
        "word": "dbpedia",
        "pairs": ["subject=res:DBpedia "],
        "questions": {
            "212": "Who are the developers of DBpedia?"
        },
        "Sparql": {
            "Sparql_212": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:DBpedia dbo:developer ?uri }"
        }
    }, {
        "word": "death, death_of, death_place",
        "pairs": ["predicate=dbo:deathCause","predicate=dbo:deathDate","predicate=dbo:deathPlace"],
        "questions": {
            "52": "What is the most frequent cause of death?",
            "239": "When was the death  of  Shakespeare?",
            "374": "Does Abraham Lincoln's death place have a website?"
        },
        "Sparql": {
            "Sparql_52": "SELECT DISTINCT ?x WHERE { ?uri <http://dbpedia.org/ontology/deathCause> ?x . } ORDER BY DESC(COUNT(DISTINCT ?uri)) OFFSET 0 LIMIT 1",
            "Sparql_239": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?x WHERE { dbr:William_Shakespeare dbo:deathDate ?x } LIMIT 1",
            "Sparql_374": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Abraham_Lincoln dbo:deathPlace ?p . ?p dbo:website ?w }"
        }
    }, {
        "word": "del",
        "pairs": [],
        "questions": {
            "345": "Who is starring in Spanish movies produced by Benicio del Toro?"
        },
        "Sparql": {
            "Sparql_345": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?film rdf:type dbo:Film ; dbo:country res:Spain ; dbo:producer res:Benicio_del_Toro ; dbo:starring ?uri . ?uri rdf:type dbo:Person }"
        }
    }, {
        "word": "democrat",
        "pairs": ["object=res:Democratic_Party_(United_States)"],
        "questions": {
            "274": "Is Barack Obama a democrat?"
        },
        "Sparql": {
            "Sparql_274": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Barack_Obama dbo:party <http://dbpedia.org/resource/Democratic_Party_(United_States)> }"
        }
    }, {
        "word": "denmark",
        "pairs": [],
        "questions": {
            "143": "Give me a list of all lakes in Denmark."
        },
        "Sparql": {
            "Sparql_143": "SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> } UNION { ?uri a <http://dbpedia.org/class/yago/LakesOfDenmark> } }"
        }
    }, {
        "word": "density",
        "pairs": ["predicate=dbp:densityrank"],
        "questions": {
            "16": "Which state of the USA has the highest population density?",
            "22": "Which state of the United States of America has the highest density?"
        },
        "Sparql": {
            "Sparql_16": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:densityrank ?rank } ORDER BY ASC(?rank) LIMIT 1",
            "Sparql_22": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        }
    }, {
        "word": "designer_of",
        "pairs": ["predicate=dbp:designer"],
        "questions": {
            "14": "Which other weapons did the designer of the Uzi develop?"
        },
        "Sparql": {
            "Sparql_14": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Weapon ; dbp:designer ?x . res:Uzi dbp:designer ?x FILTER ( ?uri != res:Uzi ) }"
        }
    }, {
        "word": "developer_of",
        "pairs": ["predicate=dbo:developer"],
        "questions": {
            "212": "Who are the developers of DBpedia?"
        },
        "Sparql": {
            "Sparql_212": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:DBpedia dbo:developer ?uri }"
        }
    }, {
        "word": "dicaprio",
        "pairs": [],
        "questions": {
            "106": "How many films did Leonardo DiCaprio star in?"
        },
        "Sparql": {
            "Sparql_106": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Leonardo_DiCaprio> }"
        }
    }, {
        "word": "disney",
        "pairs": ["object=res:Walt_Disney"],
        "questions": {
            "321": "Which television shows were created by Walt Disney?"
        },
        "Sparql": {
            "Sparql_321": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:TelevisionShow ; dbo:creator res:Walt_Disney }"
        }
    }, {
        "word": "disorder",
        "pairs": ["subject=<http://dbpedia.org/class/yago/WikicatEatingDisorders>"],
        "questions": {
            "103": "Give me all types of eating disorders."
        },
        "Sparql": {
            "Sparql_103": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/class/yago/WikicatEatingDisorders> }"
        }
    }, {
        "word": "dog",
        "pairs": ["object=res:German_Shepherd>"],
        "questions": {
            "185": "Give me all breeds of the German Shepherd dog."
        },
        "Sparql": {
            "Sparql_185": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/breed> <http://dbpedia.org/resource/German_Shepherd> }"
        }
    }, {
        "word": "donald",
        "pairs": [],
        "questions": {
            "280": "What is Donald Trump's main business?"
        },
        "Sparql": {
            "Sparql_280": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?owner WHERE { ?owner dbo:owner dbr:Donald_Trump }"
        }
    }, {
        "word": "dortmund",
        "pairs": [],
        "questions": {
            "373": "Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?"
        },
        "Sparql": {
            "Sparql_373": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Lufthansa dbo:subsidiary ?uri . ?uri dbo:targetAirport res:Dortmund_Airport ; dbo:targetAirport res:Berlin_Tegel_Airport }"
        }
    }, {
        "word": "douglas",
        "pairs": [],
        "questions": {
            "221": "Which awards did Douglas Hofstadter win?"
        },
        "Sparql": {
            "Sparql_221": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Douglas_Hofstadter dbo:award ?uri }"
        }
    }, {
        "word": "dream",
        "pairs": ["subject=dbr:The_Interpretation_of_Dreams"],
        "questions": {
            "238": "Who is the author of the interpretation of dreams?"
        },
        "Sparql": {
            "Sparql_238": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Author WHERE { dbr:The_Interpretation_of_Dreams dbo:author ?Author }"
        }
    }, {
        "word": "driver_with",
        "pairs": ["object=dbo:FormulaOneRacer"],
        "questions": {
            "311": "Who is the Formula 1 race driver with the most races?"
        },
        "Sparql": {
            "Sparql_311": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:FormulaOneRacer ; dbo:races ?x } ORDER BY DESC(?x) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "dutch",
        "pairs": [],
        "questions": {
            "95": "In which city was the former Dutch queen Juliana buried?"
        },
        "Sparql": {
            "Sparql_95": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juliana_of_the_Netherlands> <http://dbpedia.org/property/burialPlace> ?uri . ?uri a <http://dbpedia.org/ontology/Settlement> }"
        }
    }, {
        "word": "dynasty",
        "pairs": [],
        "questions": {
            "368": "When did the Ming dynasty dissolve?"
        },
        "Sparql": {
            "Sparql_368": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Ming_dynasty dbo:dissolutionDate ?date }"
        }
    }, {
        "word": "düsseldorf",
        "pairs": [],
        "questions": {
            "216": "how much is the elevation of Düsseldorf Airport ?"
        },
        "Sparql": {
            "Sparql_216": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ele WHERE { dbr:Düsseldorf_Airport dbo:elevation ?ele } LIMIT 1"
        }
    }, {
        "word": "earth",
        "pairs": ["subject=res:The_Pillars_of_the_Earth","subject=dbo:Mountain"],
        "questions": {
            "21": "Who wrote the book The pillars of the Earth?",
            "165": "What is the second highest mountain on Earth?",
            "335": "Who wrote the book The Pillars of the Earth?"
        },
        "Sparql": {
            "Sparql_21": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }",
            "Sparql_165": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 1 LIMIT 1",
            "Sparql_335": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }"
        }
    }, {
        "word": "eastwood",
        "pairs": [],
        "questions": {
            "124": "Which films starring Clint Eastwood did he direct himself?"
        },
        "Sparql": {
            "Sparql_124": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Clint_Eastwood> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Clint_Eastwood> }"
        }
    }, {
        "word": "eddie",
        "pairs": [],
        "questions": {
            "144": "How many children does Eddie Murphy have?"
        },
        "Sparql": {
            "Sparql_144": "SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Eddie_Murphy> <http://dbpedia.org/property/children> ?n }"
        }
    }, {
        "word": "editor_of",
        "pairs": ["predicate=dbo:editor"],
        "questions": {
            "220": "Who is the editor of Forbes?"
        },
        "Sparql": {
            "Sparql_220": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Forbes dbo:editor ?uri }"
        }
    }, {
        "word": "eiffel",
        "pairs": [],
        "questions": {
            "67": "Where did the architect of the Eiffel Tower study?"
        },
        "Sparql": {
            "Sparql_67": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eiffel_Tower> <http://dbpedia.org/ontology/architect> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri }"
        }
    }, {
        "word": "einstein",
        "pairs": [],
        "questions": {
            "258": "How many theories did Albert Einstein come up with?",
            "337": "Who was the doctoral supervisor of Albert Einstein?"
        },
        "Sparql": {
            "Sparql_258": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(?uri) AS ?count) WHERE { dbr:Albert_Einstein dbo:knownFor ?uri }",
            "Sparql_337": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Albert_Einstein dbo:doctoralAdvisor ?uri }"
        }
    }, {
        "word": "eisenberg",
        "pairs": [],
        "questions": {
            "39": "What movies does Jesse Eisenberg play in?"
        },
        "Sparql": {
            "Sparql_39": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> }"
        }
    }, {
        "word": "electronics_company",
        "pairs": ["predicate=dbo:industry","predicate=dbo:Company"],
        "questions": {
            "263": "Which electronics companies were founded in Beijing?"
        },
        "Sparql": {
            "Sparql_263": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:industry res:Electronics ; dbo:foundationPlace res:Beijing }"
        }
    }, {
        "word": "elephant_belong",
        "pairs": ["predicate=dbp:species"],
        "questions": {
            "255": "Which species does an elephant belong?"
        },
        "Sparql": {
            "Sparql_255": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?species WHERE { dbr:Elephant dbp:species ?species }"
        }
    }, {
        "word": "elevation_of",
        "pairs": ["predicate=dbo:elevation"],
        "questions": {
            "216": "how much is the elevation of Düsseldorf Airport ?"
        },
        "Sparql": {
            "Sparql_216": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ele WHERE { dbr:Düsseldorf_Airport dbo:elevation ?ele } LIMIT 1"
        }
    }, {
        "word": "elton",
        "pairs": [],
        "questions": {
            "249": "List all the musicals with music by Elton John."
        },
        "Sparql": {
            "Sparql_249": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Musical ; dbo:musicBy res:Elton_John }"
        }
    }, {
        "word": "elvis",
        "pairs": [],
        "questions": {
            "130": "For which label did Elvis record his first album?",
            "367": "Give me the grandchildren of Elvis Presley.",
            "375": "Did Elvis Presley have children?"
        },
        "Sparql": {
            "Sparql_130": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?x rdf:type dbo:Album ; dbo:artist res:Elvis_Presley ; dbo:releaseDate ?y ; dbo:recordLabel ?uri } ORDER BY ASC(?y) OFFSET 0 LIMIT 1",
            "Sparql_367": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Elvis_Presley dbo:child ?child . ?child dbo:child ?uri }",
            "Sparql_375": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Elvis_Presley dbo:child ?uri }"
        }
    }, {
        "word": "empire_pay",
        "pairs": ["predicate=dbo:currency"],
        "questions": {
            "257": "In which ancient empire could you pay with cocoa beans?"
        },
        "Sparql": {
            "Sparql_257": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:currency res:Cocoa_bean }"
        }
    }, {
        "word": "employee,employee_google,employee_IBM",
        "pairs": ["predicate=dbo:numberOfEmployees"],
        "questions": {
            "62": "Which companies have more than 1 million employees?",
            "85": "How many employees does Google have?",
            "157": "How many employees does IBM have?",
            "269": "Which Indian company has the most employees?"
        },
        "Sparql": {
            "Sparql_62": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/numberOfEmployees> ?n } UNION { ?uri <http://dbpedia.org/property/numEmployees> ?n } FILTER ( ?n > 1000000 ) }",
            "Sparql_85": "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Google> <http://dbpedia.org/ontology/numberOfEmployees> ?num }",
            "Sparql_157": "SELECT DISTINCT ?number WHERE { <http://dbpedia.org/resource/IBM> <http://dbpedia.org/ontology/numberOfEmployees> ?number }",
            "Sparql_269": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:location res:India ; dbo:numberOfEmployees ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "england",
        "pairs": [],
        "questions": {
            "219": "Who was the first King of England?"
        },
        "Sparql": {
            "Sparql_219": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Royalty ; rdf:type yago:WikicatEnglishMonarchs ; dbo:activeYearsStartYear ?date } ORDER BY ASC(?date) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "entrance",
        "pairs": ["predicate=dbp:entranceCount"],
        "questions": {
            "30": "Which caves have more than 3 entrances?"
        },
        "Sparql": {
            "Sparql_30": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Cave> ; <http://dbpedia.org/property/entranceCount> ?entrance FILTER ( ?entrance > 3 ) }"
        }
    }, {
        "word": "episode_of",
        "pairs": ["predicate=dbo:completionDate"],
        "questions": {
            "226": "When was the last episode of the TV series Friends aired?"
        },
        "Sparql": {
            "Sparql_226": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?date WHERE { dbr:Friends dbo:completionDate ?date }"
        }
    }, {
        "word": "episode_of,episod_old,episod_first, episode_game",
        "pairs": ["predicate=dbo:series","predicate=dbo:numberOfEpisodes"],
        "questions": {
            "158": "List all episodes of the first season of the HBO television series The Sopranos!",
            "160": "Does the new Battlestar Galactica series have more episodes than the old one?",
            "331": "List all episodes of the first season of the HBO television series The Sopranos.",
            "338": "Does Breaking Bad have more episodes than Game of Thrones?"
        },
        "Sparql": {
            "Sparql_158": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }",
            "Sparql_160": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Battlestar_Galactica_%281978_TV_series%29> dbo:numberOfEpisodes ?x . <http://dbpedia.org/resource/Battlestar_Galactica_%282004_TV_series%29> dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }",
            "Sparql_331": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }",
            "Sparql_338": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Breaking_Bad dbo:numberOfEpisodes ?x . res:Game_of_Thrones dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }"
        }
    }, {
        "word": "eritrea",
        "pairs": [],
        "questions": {
            "398": "Who is the president of Eritrea?"
        },
        "Sparql": {
            "Sparql_398": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Eritrea dbo:leader ?uri ; dbo:leaderTitle \"President\"@en }"
        }
    }, {
        "word": "esa",
        "pairs": [],
        "questions": {
            "73": "Give me all ESA astronauts."
        },
        "Sparql": {
            "Sparql_73": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Astronaut> ; <http://dbpedia.org/property/type> <http://dbpedia.org/resource/European_Space_Agency> }"
        }
    }, {
        "word": "estonia",
        "pairs": [],
        "questions": {
            "187": "Which languages are spoken in Estonia?"
        },
        "Sparql": {
            "Sparql_187": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spokenIn> <http://dbpedia.org/resource/Estonia> }"
        }
    }, {
        "word": "eu",
        "pairs": [],
        "questions": {
            "138": "When did Latvia join the EU?"
        },
        "Sparql": {
            "Sparql_138": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Latvia> <http://dbpedia.org/property/accessioneudate> ?date }"
        }
    }, {
        "word": "eurasia",
        "pairs": [],
        "questions": {
            "351": "How many people live in Eurasia?"
        },
        "Sparql": {
            "Sparql_351": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?population WHERE { res:Eurasia dbo:populationTotal ?population }"
        }
    }, {
        "word": "euro",
        "pairs": ["object=res:Euro"],
        "questions": {
            "102": "Which countries adopted the Euro?"
        },
        "Sparql": {
            "Sparql_102": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> } UNION { ?uri <http://dbpedia.org/property/currencyCode> \"EUR\"@en } }"
        }
    }, {
        "word": "eve",
        "pairs": ["subject=res:Amazon_Eve"],
        "questions": {
            "392": "How tall is Amazon Eve?"
        },
        "Sparql": {
            "Sparql_392": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Amazon_Eve dbo:height ?height }"
        }
    }, {
        "word": "everest",
        "pairs": [],
        "questions": {
            "354": "What country is Mount Everest in?",
            "384": "Who was the first to climb Mount Everest?"
        },
        "Sparql": {
            "Sparql_354": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:locatedInArea ?uri . ?uri rdf:type dbo:Country }",
            "Sparql_384": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:firstAscentPerson ?uri }"
        }
    }, {
        "word": "everyone_who",
        "pairs": ["subject=dbo:Person"],
        "questions": {
            "79": "Show me everyone who was born on Halloween."
        },
        "Sparql": {
            "Sparql_79": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> { ?uri <http://dbpedia.org/ontology/birthDate> ?date } UNION { ?uri <http://dbpedia.org/property/birthDate> ?date } <http://dbpedia.org/resource/Halloween> <http://dbpedia.org/property/date> ?date }"
        }
    }, {
        "word": "f.",
        "pairs": [],
        "questions": {
            "264": "Who was the successor of John F. Kennedy?",
            "270": "Who was John F. Kennedy's vice president?",
            "399": "In which city did John F. Kennedy die?"
        },
        "Sparql": {
            "Sparql_264": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:successor ?uri }",
            "Sparql_270": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:vicePresident ?uri }",
            "Sparql_399": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:deathPlace ?uri . ?uri rdf:type dbo:City }"
        }
    }, {
        "word": "facebook",
        "pairs": [],
        "questions": {
            "170": "Who is the owner of Facebook?"
        },
        "Sparql": {
            "Sparql_170": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/ontology/foundedBy> ?uri }"
        }
    }, {
        "word": "falcons",
        "pairs": [],
        "questions": {
            "31": "Who is the tallest player of the Atlanta Falcons?"
        },
        "Sparql": {
            "Sparql_31": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Atlanta_Falcons> ; <http://dbpedia.org/ontology/height> ?h } ORDER BY DESC(?h) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "family",
        "pairs": [],
        "questions": {
            "365": "Who created Family Guy?"
        },
        "Sparql": {
            "Sparql_365": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Family_Guy dbo:creator ?uri }"
        }
    }, {
        "word": "farmers",
        "pairs": [],
        "questions": {
            "401": "Who writes the Farmers' Almanac?"
        },
        "Sparql": {
            "Sparql_401": "PREFIX dbp: <http://dbpedia.org/property/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Farmers'_Almanac> dbp:editor ?uri }"
        }
    }, {
        "word": "father",
        "pairs": [],
        "questions": {
            "180": "Is Darth Vader Luke’s father?"
        },
        "Sparql": {
            "Sparql_180": "ASK WHERE { <http://dbpedia.org/resource/Darth_Vader> <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Luke_Skywalker> }"
        }
    }, {
        "word": "fault",
        "pairs": [],
        "questions": {
            "119": "What other books have been written by the author of The Fault in Our Stars?"
        },
        "Sparql": {
            "Sparql_119": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?books WHERE { ?books dbo:author <http://dbpedia.org/resource/John_Green_(author)> }"
        }
    }, {
        "word": "fdny",
        "pairs": [],
        "questions": {
            "111": "What is the total amount of men and women serving in the FDNY?"
        },
        "Sparql": {
            "Sparql_111": "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/New_York_City_Fire_Department> <http://dbpedia.org/property/employees> ?num }"
        }
    }, {
        "word": "fiction",
        "pairs": [],
        "questions": {
            "342": "How much did Pulp Fiction cost?"
        },
        "Sparql": {
            "Sparql_342": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:Pulp_Fiction dbo:budget ?n }"
        }
    }, {
        "word": "fifa",
        "pairs": [],
        "questions": {
            "105": "What was Brazil's lowest rank in the FIFA World Ranking?"
        },
        "Sparql": {
            "Sparql_105": "SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Brazil_national_football_team> <http://dbpedia.org/property/fifaMin> ?n }"
        }
    }, {
        "word": "films",
        "pairs": [],
        "questions": {
            "11": "Give me all Danish films.",
            "50": "How many films did Hal Roach produce?",
            "63": "In which films directed by Garry Marshall was Julia Roberts starring?",
            "84": "Who produced the most films?",
            "106": "How many films did Leonardo DiCaprio star in?",
            "124": "Which films starring Clint Eastwood did he direct himself?",
            "161": "Give me all films produced by Hal Roach.",
            "182": "Give me all films produced by Steven Spielberg with a budget of at least $80 million.",
            "184": "Who produced films starring Natalie Portman?",
            "282": "Which films did Stanley Kubrick direct?",
            "390": "In which films did Julia Roberts as well as Richard Gere play?",
            "407": "Which of Tim Burton's films had the highest budget?"
        },
        "Sparql": {
            "Sparql_11": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:country res:Denmark }",
            "Sparql_50": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> }",
            "Sparql_63": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> ; <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> }",
            "Sparql_84": "SELECT DISTINCT ?uri WHERE { ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?film <http://dbpedia.org/ontology/producer> ?uri . } ORDER BY DESC(COUNT(?film)) OFFSET 0 LIMIT 1",
            "Sparql_106": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Leonardo_DiCaprio> }",
            "Sparql_124": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Clint_Eastwood> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Clint_Eastwood> }",
            "Sparql_161": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> }",
            "Sparql_182": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Steven_Spielberg> . ?uri <http://dbpedia.org/ontology/budget> ?b . FILTER( xsd:double(?b) >= 8.0E7 ) }",
            "Sparql_184": "SELECT DISTINCT ?uri WHERE { ?film a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Natalie_Portman> ; <http://dbpedia.org/ontology/producer> ?uri }",
            "Sparql_282": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Stanley_Kubrick }",
            "Sparql_390": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Julia_Roberts ; dbo:starring res:Richard_Gere }",
            "Sparql_407": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Tim_Burton ; dbo:budget ?b } ORDER BY ?b OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "finance",
        "pairs": [],
        "questions": {
            "202": "Who is the current federal minister of finance in Germany?"
        },
        "Sparql": {
            "Sparql_202": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?leader WHERE { <http://dbpedia.org/resource/Federal_Ministry_of_Finance_(Germany)> dbo:leader ?leader }"
        }
    }, {
        "word": "floors",
        "pairs": [],
        "questions": {
            "340": "Which building after the Burj Khalifa has the most floors?"
        },
        "Sparql": {
            "Sparql_340": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Burj_Khalifa dbo:floorCount ?burj . ?uri rdf:type dbo:Building ; dbo:floorCount ?proj FILTER ( ?proj < ?burj ) } ORDER BY DESC(?proj) LIMIT 1"
        }
    }, {
        "word": "florida",
        "pairs": [],
        "questions": {
            "353": "What is the total population of Melbourne, Florida?"
        },
        "Sparql": {
            "Sparql_353": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Melbourne,_Florida> dbo:populationTotal ?uri }"
        }
    }, {
        "word": "flow",
        "pairs": [],
        "questions": {
            "246": "Which cities does the Weser flow through?",
            "268": "Does the Isar flow into a lake?"
        },
        "Sparql": {
            "Sparql_246": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Weser dbo:city ?uri }",
            "Sparql_268": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?x dbo:inflow res:Isar ; rdf:type dbo:Lake }"
        }
    }, {
        "word": "floyd",
        "pairs": [],
        "questions": {
            "299": "Who are the writers of the Wall album of Pink Floyd?"
        },
        "Sparql": {
            "Sparql_299": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?writers WHERE { dbr:The_Wall dbp:writer ?writers }"
        }
    }, {
        "word": "fonda",
        "pairs": [],
        "questions": {
            "244": "How often did Jane Fonda marry?"
        },
        "Sparql": {
            "Sparql_244": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Jane_Fonda dbo:spouse ?uri }"
        }
    }, {
        "word": "football",
        "pairs": [],
        "questions": {
            "281": "When will start the final match of the football world cup 2018?"
        },
        "Sparql": {
            "Sparql_281": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?Date WHERE { dbr:2018_FIFA_World_Cup dbp:date ?Date } ORDER BY DESC(?Date) LIMIT 1"
        }
    }, {
        "word": "forbes",
        "pairs": [],
        "questions": {
            "220": "Who is the editor of Forbes?"
        },
        "Sparql": {
            "Sparql_220": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Forbes dbo:editor ?uri }"
        }
    }, {
        "word": "ford",
        "pairs": [],
        "questions": {
            "213": "Give me all movies directed by Francis Ford Coppola.",
            "360": "Does the Ford Motor Company have a manufacturing plant in Malaysia?"
        },
        "Sparql": {
            "Sparql_213": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:director res:Francis_Ford_Coppola }",
            "Sparql_360": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { ?uri dbo:assembly dbr:Malaysia ; dbo:manufacturer dbr:Ford_Motor_Company }"
        }
    }, {
        "word": "form",
        "pairs": [],
        "questions": {
            "303": "What form of government is found in South Africa?",
            "382": "What form of government does Russia have?"
        },
        "Sparql": {
            "Sparql_303": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:South_Africa dbo:governmentType ?uri }",
            "Sparql_382": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Russia dbo:governmentType ?uri }"
        }
    }, {
        "word": "formula",
        "pairs": [],
        "questions": {
            "311": "Who is the Formula 1 race driver with the most races?"
        },
        "Sparql": {
            "Sparql_311": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:FormulaOneRacer ; dbo:races ?x } ORDER BY DESC(?x) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "fort",
        "pairs": [],
        "questions": {
            "172": "In which U.S. state is Fort Knox located?"
        },
        "Sparql": {
            "Sparql_172": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Fort_Knox dbo:location ?uri . ?uri dbo:country res:United_States }"
        }
    }, {
        "word": "foundation",
        "pairs": [],
        "questions": {
            "347": "Show me all books in Asimov's Foundation series."
        },
        "Sparql": {
            "Sparql_347": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:Foundation_series }"
        }
    }, {
        "word": "founder",
        "pairs": [],
        "questions": {
            "396": "Who is the founder of Penguin Books?"
        },
        "Sparql": {
            "Sparql_396": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Penguin_Books dbo:founder ?uri }"
        }
    }, {
        "word": "founding",
        "pairs": [],
        "questions": {
            "218": "when was the founding date of french fifth republic?"
        },
        "Sparql": {
            "Sparql_218": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ff WHERE { dbr:French_Fifth_Republic dbo:foundingDate ?ff }"
        }
    }, {
        "word": "franc",
        "pairs": [],
        "questions": {
            "147": "In which countries can you pay using the West African CFA franc?"
        },
        "Sparql": {
            "Sparql_147": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> }"
        }
    }, {
        "word": "france",
        "pairs": [],
        "questions": {
            "387": "Where in France is sparkling wine produced?"
        },
        "Sparql": {
            "Sparql_387": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:wineProduced res:Sparkling_wine ; dbo:location res:France }"
        }
    }, {
        "word": "francis",
        "pairs": [],
        "questions": {
            "213": "Give me all movies directed by Francis Ford Coppola."
        },
        "Sparql": {
            "Sparql_213": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:director res:Francis_Ford_Coppola }"
        }
    }, {
        "word": "frank",
        "pairs": [],
        "questions": {
            "235": "Is Frank Herbert still alive?",
            "313": "Give me the birth place of Frank Sinatra."
        },
        "Sparql": {
            "Sparql_235": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { OPTIONAL { res:Frank_Herbert dbo:deathDate ?date } FILTER ( ! bound(?date) ) }",
            "Sparql_313": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?place WHERE { res:Frank_Sinatra dbo:birthPlace ?place }"
        }
    }, {
        "word": "franklin",
        "pairs": [],
        "questions": {
            "117": "Which ships were called after Benjamin Franklin?",
            "362": "How many children did Benjamin Franklin have?"
        },
        "Sparql": {
            "Sparql_117": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/shipNamesake> <http://dbpedia.org/resource/Benjamin_Franklin> }",
            "Sparql_362": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Benjamin_Franklin dbo:child ?uri }"
        }
    }, {
        "word": "freud",
        "pairs": [],
        "questions": {
            "211": "Was Sigmund Freud married?"
        },
        "Sparql": {
            "Sparql_211": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { dbr:Sigmund_Freud dbo:spouse ?uri }"
        }
    }, {
        "word": "friends",
        "pairs": [],
        "questions": {
            "226": "When was the last episode of the TV series Friends aired?"
        },
        "Sparql": {
            "Sparql_226": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?date WHERE { dbr:Friends dbo:completionDate ?date }"
        }
    }, {
        "word": "fring",
        "pairs": [],
        "questions": {
            "204": "Who played Gus Fring in Breaking Bad?"
        },
        "Sparql": {
            "Sparql_204": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Gus_Fring dbo:portrayer ?uri }"
        }
    }, {
        "word": "frogs",
        "pairs": [],
        "questions": {
            "214": "Are tree frogs a type of amphibian?"
        },
        "Sparql": {
            "Sparql_214": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Hylidae dbo:class res:Amphibian }"
        }
    }, {
        "word": "galactica",
        "pairs": [],
        "questions": {
            "160": "Does the new Battlestar Galactica series have more episodes than the old one?"
        },
        "Sparql": {
            "Sparql_160": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Battlestar_Galactica_%281978_TV_series%29> dbo:numberOfEpisodes ?x . <http://dbpedia.org/resource/Battlestar_Galactica_%282004_TV_series%29> dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }"
        }
    }, {
        "word": "game",
        "pairs": [],
        "questions": {
            "232": "Who developed the video game World of Warcraft?",
            "338": "Does Breaking Bad have more episodes than Game of Thrones?",
            "358": "Is there a video game called Battle Chess?",
            "397": "Who wrote the Game of Thrones theme?"
        },
        "Sparql": {
            "Sparql_232": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:World_of_Warcraft dbo:developer ?uri }",
            "Sparql_338": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Breaking_Bad dbo:numberOfEpisodes ?x . res:Game_of_Thrones dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }",
            "Sparql_358": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?uri rdf:type dbo:VideoGame ; rdfs:label \"Battle Chess\"@en }",
            "Sparql_397": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Game_of_Thrones dbo:composer ?uri }"
        }
    }, {
        "word": "games",
        "pairs": [],
        "questions": {
            "32": "What are the top-10 action role-playing video games according to IGN?",
            "129": "Who wrote The Hunger Games?",
            "290": "List all games by GMT.",
            "295": "Give me all video games published by Mean Hamster Software."
        },
        "Sparql": {
            "Sparql_32": "SELECT DISTINCT ?uri WHERE { ?uri <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Action_role-playing_video_games> ; <http://dbpedia.org/property/ign> ?score } ORDER BY DESC(?score) LIMIT 10",
            "Sparql_129": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Hunger_Games> <http://dbpedia.org/property/author> ?uri }",
            "Sparql_290": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:publisher res:GMT_Games }",
            "Sparql_295": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:VideoGame ; dbo:publisher res:Mean_Hamster_Software }"
        }
    }, {
        "word": "ganges",
        "pairs": [],
        "questions": {
            "395": "In which country does the Ganges start?"
        },
        "Sparql": {
            "Sparql_395": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ganges dbo:sourceCountry ?uri }"
        }
    }, {
        "word": "garry",
        "pairs": [],
        "questions": {
            "63": "In which films directed by Garry Marshall was Julia Roberts starring?"
        },
        "Sparql": {
            "Sparql_63": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> ; <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> }"
        }
    }, {
        "word": "gere",
        "pairs": [],
        "questions": {
            "390": "In which films did Julia Roberts as well as Richard Gere play?"
        },
        "Sparql": {
            "Sparql_390": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Julia_Roberts ; dbo:starring res:Richard_Gere }"
        }
    }, {
        "word": "germany",
        "pairs": [],
        "questions": {
            "78": "Give me all federal chancellors of Germany.",
            "82": "Which actors were born in Germany?",
            "154": "What is the smallest city by area in Germany?",
            "194": "What is the alma mater of the chancellor of Germany Angela Merkel?",
            "201": "What is the highest mountain in Saxony Germany?",
            "202": "Who is the current federal minister of finance in Germany?",
            "288": "how much is the population densty rank of germany?"
        },
        "Sparql": {
            "Sparql_78": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> { ?uri <http://dbpedia.org/ontology/office> \"Chancellor of Germany\" } UNION { ?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Chancellor_of_Germany> } }",
            "Sparql_82": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Actor> { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> } UNION { ?uri <http://dbpedia.org/ontology/birthPlace> ?place . ?place <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> } }",
            "Sparql_154": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX skos: <http://www.w3.org/2004/02/skos/core#> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX dct: <http://purl.org/dc/terms/> SELECT ?city WHERE { ?m skos:broader dbc:Cities_in_Germany . ?city dct:subject ?m ; dbo:areaTotal ?area } ORDER BY ?area LIMIT 1",
            "Sparql_194": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Almamater WHERE { dbr:Angela_Merkel dbo:almaMater ?Almamater }",
            "Sparql_201": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?m WHERE { ?m dbo:mountainRange dbr:Ore_Mountains ; dbo:elevation ?height } ORDER BY DESC(?height) LIMIT 1",
            "Sparql_202": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?leader WHERE { <http://dbpedia.org/resource/Federal_Ministry_of_Finance_(Germany)> dbo:leader ?leader }",
            "Sparql_288": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?rank WHERE { dbr:Germany dbp:populationDensityRank ?rank }"
        }
    }, {
        "word": "gimp",
        "pairs": [],
        "questions": {
            "247": "In which programming language is GIMP written?"
        },
        "Sparql": {
            "Sparql_247": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:GIMP dbo:programmingLanguage ?uri }"
        }
    }, {
        "word": "giza",
        "pairs": [],
        "questions": {
            "359": "Who was buried in the Great Pyramid of Giza?"
        },
        "Sparql": {
            "Sparql_359": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:restingPlace dbr:Great_Pyramid_of_Giza }"
        }
    }, {
        "word": "gmt",
        "pairs": [],
        "questions": {
            "1": "List all boardgames by GMT.",
            "290": "List all games by GMT."
        },
        "Sparql": {
            "Sparql_1": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games }",
            "Sparql_290": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:publisher res:GMT_Games }"
        }
    }, {
        "word": "goethe",
        "pairs": [],
        "questions": {
            "197": "Where is the birthplace of Goethe?"
        },
        "Sparql": {
            "Sparql_197": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Goethe WHERE { dbr:Johann_Wolfgang_von_Goethe dbo:birthPlace ?Goethe }"
        }
    }, {
        "word": "gogh",
        "pairs": [],
        "questions": {
            "339": "Who was Vincent van Gogh inspired by?"
        },
        "Sparql": {
            "Sparql_339": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:influenced res:Vincent_van_Gogh }"
        }
    }, {
        "word": "gold",
        "pairs": [],
        "questions": {
            "26": "Which U.S. states possess gold minerals?"
        },
        "Sparql": {
            "Sparql_26": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:mineral ?mineral FILTER regex(?mineral, \"gold\", \"i\") }"
        }
    }, {
        "word": "goldman",
        "pairs": [],
        "questions": {
            "371": "Give me all books by William Goldman with more than 300 pages."
        },
        "Sparql": {
            "Sparql_371": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:William_Goldman ; dbo:numberOfPages ?x FILTER ( ?x > 300 ) }"
        }
    }, {
        "word": "goldmine",
        "pairs": [],
        "questions": {
            "314": "Is Christian Bale starring in Velvet Goldmine?"
        },
        "Sparql": {
            "Sparql_314": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Velvet_Goldmine dbo:starring res:Christian_Bale }"
        }
    }, {
        "word": "goofy",
        "pairs": [],
        "questions": {
            "87": "Who created Goofy?"
        },
        "Sparql": {
            "Sparql_87": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goofy> <http://dbpedia.org/ontology/creator> ?uri }"
        }
    }, {
        "word": "google",
        "pairs": [],
        "questions": {
            "85": "How many employees does Google have?"
        },
        "Sparql": {
            "Sparql_85": "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Google> <http://dbpedia.org/ontology/numberOfEmployees> ?num }"
        }
    }, {
        "word": "government",
        "pairs": [],
        "questions": {
            "303": "What form of government is found in South Africa?",
            "382": "What form of government does Russia have?"
        },
        "Sparql": {
            "Sparql_303": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:South_Africa dbo:governmentType ?uri }",
            "Sparql_382": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Russia dbo:governmentType ?uri }"
        }
    }, {
        "word": "governor",
        "pairs": [],
        "questions": {
            "66": "Who is the governor of Wyoming?"
        },
        "Sparql": {
            "Sparql_66": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wyoming> <http://dbpedia.org/property/governor> ?uri }"
        }
    }, {
        "word": "grand",
        "pairs": [],
        "questions": {
            "309": "Did Kaurismäki ever win the Grand Prix at Cannes?"
        },
        "Sparql": {
            "Sparql_309": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Aki_Kaurismäki dbo:award <http://dbpedia.org/resource/Grand_Prix_(Cannes_Film_Festival)> }"
        }
    }, {
        "word": "grandchildren",
        "pairs": [],
        "questions": {
            "13": "Give me the grandchildren of Bruce Lee.",
            "367": "Give me the grandchildren of Elvis Presley."
        },
        "Sparql": {
            "Sparql_13": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Bruce_Lee dbo:child ?child . ?child <http://dbpedia.org/property/children> ?uri }",
            "Sparql_367": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Elvis_Presley dbo:child ?child . ?child dbo:child ?uri }"
        }
    }, {
        "word": "grapes",
        "pairs": [],
        "questions": {
            "323": "Which types of grapes grow in Oregon?"
        },
        "Sparql": {
            "Sparql_323": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Oregon_wine dbo:growingGrape ?uri }"
        }
    }, {
        "word": "great",
        "pairs": [],
        "questions": {
            "346": "Is Lake Baikal bigger than the Great Bear Lake?",
            "359": "Who was buried in the Great Pyramid of Giza?"
        },
        "Sparql": {
            "Sparql_346": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Lake_Baikal dbo:areaTotal ?a1 . res:Great_Bear_Lake dbo:areaTotal ?a2 FILTER ( ?a1 > ?a2 ) }",
            "Sparql_359": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:restingPlace dbr:Great_Pyramid_of_Giza }"
        }
    }, {
        "word": "groups",
        "pairs": [],
        "questions": {
            "316": "How many ethnic groups live in Slovenia?"
        },
        "Sparql": {
            "Sparql_316": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Slovenia dbo:ethnicGroup ?uri }"
        }
    }, {
        "word": "grunge",
        "pairs": [],
        "questions": {
            "394": "Give me all Canadian Grunge record labels."
        },
        "Sparql": {
            "Sparql_394": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:RecordLabel ; dbo:genre res:Grunge ; dbo:country res:Canada }"
        }
    }, {
        "word": "guevara",
        "pairs": [],
        "questions": {
            "308": "Did Che Guevara have children?"
        },
        "Sparql": {
            "Sparql_308": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Che_Guevara dbo:child ?uri }"
        }
    }, {
        "word": "guinness",
        "pairs": [],
        "questions": {
            "411": "What was the last movie with Alec Guinness?"
        },
        "Sparql": {
            "Sparql_411": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Alec_Guinness ; dbo:releaseDate ?date } ORDER BY DESC(?date) LIMIT 1"
        }
    }, {
        "word": "gus",
        "pairs": [],
        "questions": {
            "204": "Who played Gus Fring in Breaking Bad?"
        },
        "Sparql": {
            "Sparql_204": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Gus_Fring dbo:portrayer ?uri }"
        }
    }, {
        "word": "guy",
        "pairs": [],
        "questions": {
            "12": "Which movies starring Brad Pitt were directed by Guy Ritchie?",
            "365": "Who created Family Guy?",
            "389": "Which movies starring Mickey Rourke were directed by Guy Ritchie?"
        },
        "Sparql": {
            "Sparql_12": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Brad_Pitt ; dbo:director res:Guy_Ritchie }",
            "Sparql_365": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Family_Guy dbo:creator ?uri }",
            "Sparql_389": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Mickey_Rourke ; dbo:director res:Guy_Ritchie }"
        }
    }, {
        "word": "hal",
        "pairs": [],
        "questions": {
            "50": "How many films did Hal Roach produce?",
            "161": "Give me all films produced by Hal Roach."
        },
        "Sparql": {
            "Sparql_50": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> }",
            "Sparql_161": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> }"
        }
    }, {
        "word": "halloween",
        "pairs": [],
        "questions": {
            "79": "Show me everyone who was born on Halloween."
        },
        "Sparql": {
            "Sparql_79": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> { ?uri <http://dbpedia.org/ontology/birthDate> ?date } UNION { ?uri <http://dbpedia.org/property/birthDate> ?date } <http://dbpedia.org/resource/Halloween> <http://dbpedia.org/property/date> ?date }"
        }
    }, {
        "word": "hamster",
        "pairs": [],
        "questions": {
            "295": "Give me all video games published by Mean Hamster Software."
        },
        "Sparql": {
            "Sparql_295": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:VideoGame ; dbo:publisher res:Mean_Hamster_Software }"
        }
    }, {
        "word": "hanks",
        "pairs": [],
        "questions": {
            "405": "Is Rita Wilson the wife of Tom Hanks?"
        },
        "Sparql": {
            "Sparql_405": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Tom_Hanks dbo:spouse res:Rita_Wilson }"
        }
    }, {
        "word": "harold",
        "pairs": [],
        "questions": {
            "330": "Who composed the music for Harold and Maude?"
        },
        "Sparql": {
            "Sparql_330": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Harold_and_Maude dbo:musicComposer ?uri }"
        }
    }, {
        "word": "harris",
        "pairs": [],
        "questions": {
            "91": "Give me all the TV shows with Neil Patrick Harris."
        },
        "Sparql": {
            "Sparql_91": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Neil_Patrick_Harris> }"
        }
    }, {
        "word": "harry",
        "pairs": [],
        "questions": {
            "336": "Do Prince Harry and Prince William have the same parents?"
        },
        "Sparql": {
            "Sparql_336": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Prince_William,_Duke_of_Cambridge> dbo:parent ?x . res:Prince_Harry dbo:parent ?x }"
        }
    }, {
        "word": "hbo",
        "pairs": [],
        "questions": {
            "158": "List all episodes of the first season of the HBO television series The Sopranos!",
            "331": "List all episodes of the first season of the HBO television series The Sopranos."
        },
        "Sparql": {
            "Sparql_158": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }",
            "Sparql_331": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }"
        }
    }, {
        "word": "headquarters",
        "pairs": [],
        "questions": {
            "364": "In which UK city are the headquarters of the MI6?",
            "404": "In which city are the headquarters of the United Nations?"
        },
        "Sparql": {
            "Sparql_364": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Secret_Intelligence_Service dbo:headquarter ?uri . ?uri dbo:country res:United_Kingdom }",
            "Sparql_404": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Headquarters_of_the_United_Nations dbo:location ?uri . ?uri rdf:type dbo:City }"
        }
    }, {
        "word": "health",
        "pairs": [],
        "questions": {
            "176": "What are the specialities of the UNC Health Care?"
        },
        "Sparql": {
            "Sparql_176": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/UNC_Health_Care> <http://dbpedia.org/property/speciality> ?uri }"
        }
    }, {
        "word": "heckler",
        "pairs": [],
        "questions": {
            "153": "Which weapons did Heckler & Koch develop?"
        },
        "Sparql": {
            "Sparql_153": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Weapon> ; <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Heckler_&_Koch> }"
        }
    }, {
        "word": "heineken",
        "pairs": [],
        "questions": {
            "273": "In what city is the Heineken brewery?"
        },
        "Sparql": {
            "Sparql_273": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Heineken dbo:manufacturer ?x . ?x dbo:locationCity ?uri }"
        }
    }, {
        "word": "hells",
        "pairs": [],
        "questions": {
            "92": "When were the Hells Angels founded?"
        },
        "Sparql": {
            "Sparql_92": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Hells_Angels> <http://dbpedia.org/property/founded> ?date }"
        }
    }, {
        "word": "hemingway",
        "pairs": [],
        "questions": {
            "391": "Show me Hemingway's autobiography."
        },
        "Sparql": {
            "Sparql_391": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:author res:Ernest_Hemingway ; dbo:literaryGenre res:Autobiography }"
        }
    }, {
        "word": "heraklion",
        "pairs": [],
        "questions": {
            "3": "Which people were born in Heraklion?"
        },
        "Sparql": {
            "Sparql_3": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX onto: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Person ; onto:birthPlace <http://dbpedia.org/resource/Heraklion>. }"
        }
    }, {
        "word": "herbert",
        "pairs": [],
        "questions": {
            "235": "Is Frank Herbert still alive?"
        },
        "Sparql": {
            "Sparql_235": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { OPTIONAL { res:Frank_Herbert dbo:deathDate ?date } FILTER ( ! bound(?date) ) }"
        }
    }, {
        "word": "heritage",
        "pairs": [],
        "questions": {
            "68": "Give me all world heritage sites designated within the past two years."
        },
        "Sparql": {
            "Sparql_68": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WorldHeritageSite> . { ?uri <http://dbpedia.org/property/year> '2013'^^xsd:integer . } UNION { ?uri <http://dbpedia.org/property/year> '2014'^^xsd:integer . } }"
        }
    }, {
        "word": "hero",
        "pairs": [],
        "questions": {
            "412": "Give me all actors starring in Last Action Hero."
        },
        "Sparql": {
            "Sparql_412": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Last_Action_Hero dbo:starring ?uri }"
        }
    }, {
        "word": "hillel",
        "pairs": [],
        "questions": {
            "38": "Where did Hillel Slovak die?"
        },
        "Sparql": {
            "Sparql_38": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hillel_Slovak> <http://dbpedia.org/ontology/deathPlace> ?uri }"
        }
    }, {
        "word": "himalayas",
        "pairs": [],
        "questions": {
            "55": "Give me the capitals of all countries that the Himalayas run through."
        },
        "Sparql": {
            "Sparql_55": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?country . ?country <http://dbpedia.org/ontology/capital> ?uri }"
        }
    }, {
        "word": "hockey",
        "pairs": [],
        "questions": {
            "208": "Who is the coach of Ankara's ice hockey team?"
        },
        "Sparql": {
            "Sparql_208": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:city res:Ankara ; dbo:league res:Turkish_Ice_Hockey_First_League ; dbo:coach ?uri }"
        }
    }, {
        "word": "hofstadter",
        "pairs": [],
        "questions": {
            "221": "Which awards did Douglas Hofstadter win?"
        },
        "Sparql": {
            "Sparql_221": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Douglas_Hofstadter dbo:award ?uri }"
        }
    }, {
        "word": "holidays",
        "pairs": [],
        "questions": {
            "94": "Give me all Swedish holidays.",
            "148": "Which holidays are celebrated around the world?",
            "305": "Which holidays are celebrated around the world? test2"
        },
        "Sparql": {
            "Sparql_94": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Holiday> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> }",
            "Sparql_148": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday }",
            "Sparql_305": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday }"
        }
    }, {
        "word": "horse",
        "pairs": [],
        "questions": {
            "223": "Is horse racing a sport?"
        },
        "Sparql": {
            "Sparql_223": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { dbr:Horse_racing rdf:type dbo:Sport }"
        }
    }, {
        "word": "host",
        "pairs": [],
        "questions": {
            "352": "Who is the host of the BBC Wildlife Specials?"
        },
        "Sparql": {
            "Sparql_352": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:BBC_Wildlife_Specials dbo:presenter ?uri }"
        }
    }, {
        "word": "hotel",
        "pairs": [],
        "questions": {
            "379": "Who wrote the song Hotel California?"
        },
        "Sparql": {
            "Sparql_379": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Hotel_California dbo:writer ?uri }"
        }
    }, {
        "word": "houses",
        "pairs": [],
        "questions": {
            "215": "What is the location of the Houses of Parliament?"
        },
        "Sparql": {
            "Sparql_215": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:Palace_of_Westminster dbo:location ?uri }"
        }
    }, {
        "word": "hovercrafts",
        "pairs": [],
        "questions": {
            "253": "Which companies produce hovercrafts?"
        },
        "Sparql": {
            "Sparql_253": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:product res:Hovercraft }"
        }
    }, {
        "word": "hunger",
        "pairs": [],
        "questions": {
            "129": "Who wrote The Hunger Games?"
        },
        "Sparql": {
            "Sparql_129": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Hunger_Games> <http://dbpedia.org/property/author> ?uri }"
        }
    }, {
        "word": "ibm",
        "pairs": [],
        "questions": {
            "157": "How many employees does IBM have?"
        },
        "Sparql": {
            "Sparql_157": "SELECT DISTINCT ?number WHERE { <http://dbpedia.org/resource/IBM> <http://dbpedia.org/ontology/numberOfEmployees> ?number }"
        }
    }, {
        "word": "ice",
        "pairs": [],
        "questions": {
            "208": "Who is the coach of Ankara's ice hockey team?"
        },
        "Sparql": {
            "Sparql_208": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:city res:Ankara ; dbo:league res:Turkish_Ice_Hockey_First_League ; dbo:coach ?uri }"
        }
    }, {
        "word": "icro",
        "pairs": [],
        "questions": {
            "159": "What does ICRO stand for?"
        },
        "Sparql": {
            "Sparql_159": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/abbreviation> \"ICRO\" }"
        }
    }, {
        "word": "ign",
        "pairs": [],
        "questions": {
            "32": "What are the top-10 action role-playing video games according to IGN?"
        },
        "Sparql": {
            "Sparql_32": "SELECT DISTINCT ?uri WHERE { ?uri <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Action_role-playing_video_games> ; <http://dbpedia.org/property/ign> ?score } ORDER BY DESC(?score) LIMIT 10"
        }
    }, {
        "word": "ii",
        "pairs": [],
        "questions": {
            "72": "Which pope succeeded John Paul II?"
        },
        "Sparql": {
            "Sparql_72": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_John_Paul_II> <http://dbpedia.org/property/successor> ?uri }"
        }
    }, {
        "word": "illinois",
        "pairs": [],
        "questions": {
            "36": "Which states border Illinois?"
        },
        "Sparql": {
            "Sparql_36": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Illinois> <http://dbpedia.org/property/borderingstates> ?uri }"
        }
    }, {
        "word": "income",
        "pairs": [],
        "questions": {
            "93": "What is the net income of Apple?"
        },
        "Sparql": {
            "Sparql_93": "SELECT DISTINCT ?ni WHERE { <http://dbpedia.org/resource/Apple_Inc.> <http://dbpedia.org/ontology/netIncome> ?ni }"
        }
    }, {
        "word": "industry",
        "pairs": [],
        "questions": {
            "97": "Give me all companies in the advertising industry."
        },
        "Sparql": {
            "Sparql_97": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Advertising> } UNION { ?uri <http://dbpedia.org/ontology/industry> ?industry FILTER regex(?industry, \"advertising\", \"i\") } }"
        }
    }, {
        "word": "ingredients",
        "pairs": [],
        "questions": {
            "199": "Which ingredients do I need for carrot cake?"
        },
        "Sparql": {
            "Sparql_199": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Carrot_cake dbo:ingredient ?uri }"
        }
    }, {
        "word": "ingrid",
        "pairs": [],
        "questions": {
            "27": "Who is the daughter of Ingrid Bergman married to?"
        },
        "Sparql": {
            "Sparql_27": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ingrid_Bergman dbo:child ?child . ?child <http://dbpedia.org/property/spouse> ?uri }"
        }
    }, {
        "word": "inhabitants",
        "pairs": [],
        "questions": {
            "60": "How many inhabitants does Maribor have?",
            "173": "Give me all cities in New Jersey with more than 100000 inhabitants.",
            "279": "Which city has the most inhabitants?",
            "284": "How many inhabitants does the largest city in Canada have?",
            "332": "Which city has the least inhabitants?"
        },
        "Sparql": {
            "Sparql_60": "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Maribor> <http://dbpedia.org/ontology/populationTotal> ?num }",
            "Sparql_173": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:isPartOf res:New_Jersey ; dbo:populationTotal ?inhabitants FILTER ( ?inhabitants > 100000 ) }",
            "Sparql_279": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:populationTotal ?pop } ORDER BY DESC(?pop) OFFSET 0 LIMIT 1",
            "Sparql_284": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Canada dbo:largestCity ?city . ?city dbo:populationTotal ?num }",
            "Sparql_332": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:populationTotal ?pop } ORDER BY ASC(?pop) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "instruments",
        "pairs": [],
        "questions": {
            "126": "Which instruments does Cat Stevens play?"
        },
        "Sparql": {
            "Sparql_126": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cat_Stevens> <http://dbpedia.org/ontology/instrument> ?uri }"
        }
    }, {
        "word": "interpretation",
        "pairs": [],
        "questions": {
            "238": "Who is the author of the interpretation of dreams?"
        },
        "Sparql": {
            "Sparql_238": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Author WHERE { dbr:The_Interpretation_of_Dreams dbo:author ?Author }"
        }
    }, {
        "word": "invasion",
        "pairs": [],
        "questions": {
            "198": "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?"
        },
        "Sparql": {
            "Sparql_198": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Cuban_Missile_Crisis dbo:date ?x . res:Bay_of_Pigs_Invasion dbo:date ?y FILTER ( ?x < ?y ) }"
        }
    }, {
        "word": "iran",
        "pairs": [],
        "questions": {
            "262": "With how many countries Iran has borders?"
        },
        "Sparql": {
            "Sparql_262": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?border WHERE { dbr:Geography_of_Iran dbp:borders ?border } LIMIT 8"
        }
    }, {
        "word": "iraq",
        "pairs": [],
        "questions": {
            "283": "how much is the population  Iraq?"
        },
        "Sparql": {
            "Sparql_283": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?pIraq WHERE { dbr:Iraq dbo:populationTotal ?pIraq }"
        }
    }, {
        "word": "ireland",
        "pairs": [],
        "questions": {
            "80": "Which beer originated in Ireland?"
        },
        "Sparql": {
            "Sparql_80": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Beer> ; <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/Beer_in_Ireland> }"
        }
    }, {
        "word": "isar",
        "pairs": [],
        "questions": {
            "268": "Does the Isar flow into a lake?"
        },
        "Sparql": {
            "Sparql_268": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?x dbo:inflow res:Isar ; rdf:type dbo:Lake }"
        }
    }, {
        "word": "islands",
        "pairs": [],
        "questions": {
            "59": "Give me all islands that belong to Japan."
        },
        "Sparql": {
            "Sparql_59": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Island> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> }"
        }
    }, {
        "word": "istanbul",
        "pairs": [],
        "questions": {
            "100": "Which writers studied in Istanbul?"
        },
        "Sparql": {
            "Sparql_100": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> { ?uri <http://dbpedia.org/ontology/almaMater> ?x } UNION { ?uri <http://dbpedia.org/ontology/education> ?x } { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Istanbul> } UNION { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Istanbul> } }"
        }
    }, {
        "word": "italy",
        "pairs": [],
        "questions": {
            "289": "What is the highest mountain in Italy?"
        },
        "Sparql": {
            "Sparql_289": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Italy ; dbo:elevation ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "iycm",
        "pairs": [],
        "questions": {
            "322": "What does IYCM stand for?"
        },
        "Sparql": {
            "Sparql_322": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:abbreviation \"IYCM\" }"
        }
    }, {
        "word": "jackson",
        "pairs": [],
        "questions": {
            "324": "Was U.S. president Jackson involved in a war?"
        },
        "Sparql": {
            "Sparql_324": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Andrew_Jackson dbo:battle ?battle }"
        }
    }, {
        "word": "james",
        "pairs": [],
        "questions": {
            "267": "Is James Bond married?"
        },
        "Sparql": {
            "Sparql_267": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:James_Bond dbo:spouse ?uri }"
        }
    }, {
        "word": "jane",
        "pairs": [],
        "questions": {
            "244": "How often did Jane Fonda marry?"
        },
        "Sparql": {
            "Sparql_244": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Jane_Fonda dbo:spouse ?uri }"
        }
    }, {
        "word": "japan",
        "pairs": [],
        "questions": {
            "47": "Which volcanos in Japan erupted since 2000?",
            "59": "Give me all islands that belong to Japan."
        },
        "Sparql": {
            "Sparql_47": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Japan> ; <http://dbpedia.org/ontology/eruptionYear> ?date FILTER ( year(?date) >= 2000 ) }",
            "Sparql_59": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Island> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> }"
        }
    }, {
        "word": "japanese",
        "pairs": [],
        "questions": {
            "406": "In which countries do people speak Japanese?"
        },
        "Sparql": {
            "Sparql_406": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:language res:Japanese_language }"
        }
    }, {
        "word": "javascript",
        "pairs": [],
        "questions": {
            "122": "Which programming languages influenced Javascript?"
        },
        "Sparql": {
            "Sparql_122": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> ; <http://dbpedia.org/ontology/influenced> <http://dbpedia.org/resource/JavaScript> }"
        }
    }, {
        "word": "jersey",
        "pairs": [],
        "questions": {
            "173": "Give me all cities in New Jersey with more than 100000 inhabitants."
        },
        "Sparql": {
            "Sparql_173": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:isPartOf res:New_Jersey ; dbo:populationTotal ?inhabitants FILTER ( ?inhabitants > 100000 ) }"
        }
    }, {
        "word": "jesse",
        "pairs": [],
        "questions": {
            "39": "What movies does Jesse Eisenberg play in?"
        },
        "Sparql": {
            "Sparql_39": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> }"
        }
    }, {
        "word": "jew",
        "pairs": [],
        "questions": {
            "104": "Was Marc Chagall a jew?"
        },
        "Sparql": {
            "Sparql_104": "ASK WHERE { <http://dbpedia.org/resource/Marc_Chagall> <http://dbpedia.org/property/ethnicity> \"Jewish\"@en }"
        }
    }, {
        "word": "jfk",
        "pairs": [],
        "questions": {
            "77": "Where was JFK assassinated?"
        },
        "Sparql": {
            "Sparql_77": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/ontology/deathPlace> ?uri }"
        }
    }, {
        "word": "john",
        "pairs": [],
        "questions": {
            "72": "Which pope succeeded John Paul II?",
            "99": "Who killed John Lennon?",
            "137": "Which television shows were created by John Cleese?",
            "249": "List all the musicals with music by Elton John.",
            "252": "When was John Adams born?",
            "264": "Who was the successor of John F. Kennedy?",
            "270": "Who was John F. Kennedy's vice president?",
            "399": "In which city did John F. Kennedy die?"
        },
        "Sparql": {
            "Sparql_72": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_John_Paul_II> <http://dbpedia.org/property/successor> ?uri }",
            "Sparql_99": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/property/conviction> <http://dbpedia.org/resource/Death_of_John_Lennon> }",
            "Sparql_137": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> }",
            "Sparql_249": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Musical ; dbo:musicBy res:Elton_John }",
            "Sparql_252": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:John_Adams dbo:birthDate ?date }",
            "Sparql_264": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:successor ?uri }",
            "Sparql_270": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:vicePresident ?uri }",
            "Sparql_399": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:deathPlace ?uri . ?uri rdf:type dbo:City }"
        }
    }, {
        "word": "jordan",
        "pairs": [],
        "questions": {
            "363": "How tall is Michael Jordan?"
        },
        "Sparql": {
            "Sparql_363": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Michael_Jordan dbo:height ?num }"
        }
    }, {
        "word": "julia",
        "pairs": [],
        "questions": {
            "63": "In which films directed by Garry Marshall was Julia Roberts starring?",
            "390": "In which films did Julia Roberts as well as Richard Gere play?"
        },
        "Sparql": {
            "Sparql_63": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> ; <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> }",
            "Sparql_390": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Julia_Roberts ; dbo:starring res:Richard_Gere }"
        }
    }, {
        "word": "juliana",
        "pairs": [],
        "questions": {
            "95": "In which city was the former Dutch queen Juliana buried?"
        },
        "Sparql": {
            "Sparql_95": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juliana_of_the_Netherlands> <http://dbpedia.org/property/burialPlace> ?uri . ?uri a <http://dbpedia.org/ontology/Settlement> }"
        }
    }, {
        "word": "jupiter",
        "pairs": [],
        "questions": {
            "156": "How heavy is Jupiter's lightest moon?"
        },
        "Sparql": {
            "Sparql_156": "SELECT DISTINCT ?n WHERE { ?uri <http://dbpedia.org/property/satelliteOf> <http://dbpedia.org/resource/Jupiter> ; <http://dbpedia.org/ontology/mass> ?n } ORDER BY ASC(?n) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "kaurismäki",
        "pairs": [],
        "questions": {
            "309": "Did Kaurismäki ever win the Grand Prix at Cannes?"
        },
        "Sparql": {
            "Sparql_309": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Aki_Kaurismäki dbo:award <http://dbpedia.org/resource/Grand_Prix_(Cannes_Film_Festival)> }"
        }
    }, {
        "word": "kazantzakis",
        "pairs": [],
        "questions": {
            "292": "In which city did Nikos Kazantzakis die?"
        },
        "Sparql": {
            "Sparql_292": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Nikos_Kazantzakis dbo:deathPlace ?uri . ?uri rdf:type dbo:Town }"
        }
    }, {
        "word": "kennedy",
        "pairs": [],
        "questions": {
            "264": "Who was the successor of John F. Kennedy?",
            "270": "Who was John F. Kennedy's vice president?",
            "399": "In which city did John F. Kennedy die?"
        },
        "Sparql": {
            "Sparql_264": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:successor ?uri }",
            "Sparql_270": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:vicePresident ?uri }",
            "Sparql_399": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:deathPlace ?uri . ?uri rdf:type dbo:City }"
        }
    }, {
        "word": "kent",
        "pairs": [],
        "questions": {
            "145": "Show me all English Gothic buildings in Kent."
        },
        "Sparql": {
            "Sparql_145": "SELECT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Building> ; <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/English_Gothic_architecture> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Kent> }"
        }
    }, {
        "word": "kerouac",
        "pairs": [],
        "questions": {
            "378": "Which books by Kerouac were published by Viking Press?"
        },
        "Sparql": {
            "Sparql_378": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:publisher res:Viking_Press ; dbo:author res:Jack_Kerouac }"
        }
    }, {
        "word": "khalifa",
        "pairs": [],
        "questions": {
            "340": "Which building after the Burj Khalifa has the most floors?"
        },
        "Sparql": {
            "Sparql_340": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Burj_Khalifa dbo:floorCount ?burj . ?uri rdf:type dbo:Building ; dbo:floorCount ?proj FILTER ( ?proj < ?burj ) } ORDER BY DESC(?proj) LIMIT 1"
        }
    }, {
        "word": "kind",
        "pairs": [],
        "questions": {
            "44": "What kind of music did Lou Reed play?"
        },
        "Sparql": {
            "Sparql_44": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?uri }"
        }
    }, {
        "word": "king",
        "pairs": [],
        "questions": {
            "192": "Who is the king of the Netherlands?",
            "219": "Who was the first King of England?"
        },
        "Sparql": {
            "Sparql_192": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Netherlands dbo:leader ?uri . ?uri rdf:type dbo:Royalty }",
            "Sparql_219": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Royalty ; rdf:type yago:WikicatEnglishMonarchs ; dbo:activeYearsStartYear ?date } ORDER BY ASC(?date) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "kings",
        "pairs": [],
        "questions": {
            "178": "List the seven kings of Rome."
        },
        "Sparql": {
            "Sparql_178": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/King_of_Rome> }"
        }
    }, {
        "word": "knox",
        "pairs": [],
        "questions": {
            "172": "In which U.S. state is Fort Knox located?"
        },
        "Sparql": {
            "Sparql_172": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Fort_Knox dbo:location ?uri . ?uri dbo:country res:United_States }"
        }
    }, {
        "word": "koch",
        "pairs": [],
        "questions": {
            "153": "Which weapons did Heckler & Koch develop?"
        },
        "Sparql": {
            "Sparql_153": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Weapon> ; <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Heckler_&_Koch> }"
        }
    }, {
        "word": "kubrick",
        "pairs": [],
        "questions": {
            "282": "Which films did Stanley Kubrick direct?"
        },
        "Sparql": {
            "Sparql_282": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Stanley_Kubrick }"
        }
    }, {
        "word": "label",
        "pairs": [],
        "questions": {
            "130": "For which label did Elvis record his first album?"
        },
        "Sparql": {
            "Sparql_130": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?x rdf:type dbo:Album ; dbo:artist res:Elvis_Presley ; dbo:releaseDate ?y ; dbo:recordLabel ?uri } ORDER BY ASC(?y) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "labels",
        "pairs": [],
        "questions": {
            "394": "Give me all Canadian Grunge record labels."
        },
        "Sparql": {
            "Sparql_394": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:RecordLabel ; dbo:genre res:Grunge ; dbo:country res:Canada }"
        }
    }, {
        "word": "lake",
        "pairs": [],
        "questions": {
            "28": "How deep is Lake Placid?",
            "57": "Which rivers flow into a German lake?",
            "268": "Does the Isar flow into a lake?",
            "294": "In which country is the Limerick Lake?",
            "346": "Is Lake Baikal bigger than the Great Bear Lake?"
        },
        "Sparql": {
            "Sparql_28": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Lake_Placid_(Texas)> dbo:maximumDepth ?n }",
            "Sparql_57": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> . ?x <http://dbpedia.org/ontology/inflow> ?uri ; a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> }",
            "Sparql_268": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?x dbo:inflow res:Isar ; rdf:type dbo:Lake }",
            "Sparql_294": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Limerick_Lake dbo:country ?uri }",
            "Sparql_346": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Lake_Baikal dbo:areaTotal ?a1 . res:Great_Bear_Lake dbo:areaTotal ?a2 FILTER ( ?a1 > ?a2 ) }"
        }
    }, {
        "word": "lakes",
        "pairs": [],
        "questions": {
            "143": "Give me a list of all lakes in Denmark."
        },
        "Sparql": {
            "Sparql_143": "SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> } UNION { ?uri a <http://dbpedia.org/class/yago/LakesOfDenmark> } }"
        }
    }, {
        "word": "language",
        "pairs": [],
        "questions": {
            "247": "In which programming language is GIMP written?",
            "291": "What is the official language of Suriname?"
        },
        "Sparql": {
            "Sparql_247": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:GIMP dbo:programmingLanguage ?uri }",
            "Sparql_291": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Suriname dbo:officialLanguage ?uri }"
        }
    }, {
        "word": "languages",
        "pairs": [],
        "questions": {
            "10": "What are the official languages of the Philippines?",
            "110": "Which country has the most official languages?",
            "114": "Which programming languages were influenced by Perl?",
            "122": "Which programming languages influenced Javascript?",
            "134": "Which countries have more than two official languages?",
            "168": "How many programming languages are there?",
            "187": "Which languages are spoken in Estonia?",
            "307": "How many languages are spoken in Turkmenistan?",
            "385": "How many languages are spoken in Colombia?"
        },
        "Sparql": {
            "Sparql_10": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Philippines dbo:officialLanguage ?uri }",
            "Sparql_110": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/property/officialLanguages> ?language . } ORDER BY DESC(COUNT(?language)) OFFSET 0 LIMIT 1",
            "Sparql_114": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> { ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Perl> } UNION { <http://dbpedia.org/resource/Perl> <http://dbpedia.org/ontology/influenced> ?uri } }",
            "Sparql_122": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> ; <http://dbpedia.org/ontology/influenced> <http://dbpedia.org/resource/JavaScript> }",
            "Sparql_134": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> ; <http://dbpedia.org/ontology/officialLanguage> ?language } GROUP BY ?uri HAVING ( COUNT(?language) > 2 )",
            "Sparql_168": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> }",
            "Sparql_187": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spokenIn> <http://dbpedia.org/resource/Estonia> }",
            "Sparql_307": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?x) AS ?c) WHERE { res:Turkmenistan dbo:language ?x }",
            "Sparql_385": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri rdf:type dbo:Language . res:Colombia dbo:language ?uri }"
        }
    }, {
        "word": "latvia",
        "pairs": [],
        "questions": {
            "138": "When did Latvia join the EU?"
        },
        "Sparql": {
            "Sparql_138": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Latvia> <http://dbpedia.org/property/accessioneudate> ?date }"
        }
    }, {
        "word": "launch",
        "pairs": [],
        "questions": {
            "231": "Give me all launch pads operated by NASA."
        },
        "Sparql": {
            "Sparql_231": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:LaunchPad ; dbo:operator res:NASA }"
        }
    }, {
        "word": "lawrence",
        "pairs": [],
        "questions": {
            "369": "In which military conflicts did Lawrence of Arabia participate?"
        },
        "Sparql": {
            "Sparql_369": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:T._E._Lawrence dbo:battle ?uri }"
        }
    }, {
        "word": "league",
        "pairs": [],
        "questions": {
            "64": "Give me all soccer clubs in the Premier League."
        },
        "Sparql": {
            "Sparql_64": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Premier_League> }"
        }
    }, {
        "word": "lee",
        "pairs": [],
        "questions": {
            "13": "Give me the grandchildren of Bruce Lee."
        },
        "Sparql": {
            "Sparql_13": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Bruce_Lee dbo:child ?child . ?child <http://dbpedia.org/property/children> ?uri }"
        }
    }, {
        "word": "lego",
        "pairs": [],
        "questions": {
            "329": "How much did the Lego Movie cost?"
        },
        "Sparql": {
            "Sparql_329": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:The_Lego_Movie dbo:budget ?n }"
        }
    }, {
        "word": "lennon",
        "pairs": [],
        "questions": {
            "99": "Who killed John Lennon?"
        },
        "Sparql": {
            "Sparql_99": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/property/conviction> <http://dbpedia.org/resource/Death_of_John_Lennon> }"
        }
    }, {
        "word": "leonard",
        "pairs": [],
        "questions": {
            "96": "List all the musicals with music by Leonard Bernstein."
        },
        "Sparql": {
            "Sparql_96": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Musical> ; <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Leonard_Bernstein> }"
        }
    }, {
        "word": "leonardo",
        "pairs": [],
        "questions": {
            "106": "How many films did Leonardo DiCaprio star in?"
        },
        "Sparql": {
            "Sparql_106": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Leonardo_DiCaprio> }"
        }
    }, {
        "word": "les",
        "pairs": [],
        "questions": {
            "195": "Who wrote the book Les Piliers de la terre?"
        },
        "Sparql": {
            "Sparql_195": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }"
        }
    }, {
        "word": "liberty",
        "pairs": [],
        "questions": {
            "35": "When was the Statue of Liberty built?"
        },
        "Sparql": {
            "Sparql_35": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Statue_of_Liberty> <http://dbpedia.org/property/beginningDate> ?date }"
        }
    }, {
        "word": "libraries",
        "pairs": [],
        "questions": {
            "113": "Give me all libraries established earlier than 1400."
        },
        "Sparql": {
            "Sparql_113": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> ; <http://dbpedia.org/property/established> ?year FILTER ( ?year < 1400 ) }"
        }
    }, {
        "word": "lighthouse",
        "pairs": [],
        "questions": {
            "298": "How high is the lighthouse in Colombo?"
        },
        "Sparql": {
            "Sparql_298": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Colombo_Lighthouse dbo:height ?num }"
        }
    }, {
        "word": "limerick",
        "pairs": [],
        "questions": {
            "294": "In which country is the Limerick Lake?"
        },
        "Sparql": {
            "Sparql_294": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Limerick_Lake dbo:country ?uri }"
        }
    }, {
        "word": "lincoln",
        "pairs": [],
        "questions": {
            "7": "Where did Abraham Lincoln die?",
            "245": "Was the wife of president Lincoln called Mary?",
            "254": "Who was the wife of U.S. president Lincoln?",
            "374": "Does Abraham Lincoln's death place have a website?"
        },
        "Sparql": {
            "Sparql_7": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri. }",
            "Sparql_245": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Abraham_Lincoln dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, \"Mary\") }",
            "Sparql_254": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:spouse ?uri }",
            "Sparql_374": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Abraham_Lincoln dbo:deathPlace ?p . ?p dbo:website ?w }"
        }
    }, {
        "word": "lisbon",
        "pairs": [],
        "questions": {
            "155": "What is the ruling party in Lisbon?"
        },
        "Sparql": {
            "Sparql_155": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lisbon> <http://dbpedia.org/property/leaderParty> ?uri }"
        }
    }, {
        "word": "list",
        "pairs": [],
        "questions": {
            "24": "Give me a list of all trumpet players that were bandleaders.",
            "46": "Show a list of soccer clubs that play in the Bundesliga.",
            "143": "Give me a list of all lakes in Denmark.",
            "164": "Give me a list of all bandleaders that play trumpet."
        },
        "Sparql": {
            "Sparql_24": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation res:Bandleader ; dbo:instrument res:Trumpet }",
            "Sparql_46": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Bundesliga> }",
            "Sparql_143": "SELECT DISTINCT ?uri WHERE { { ?uri a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> } UNION { ?uri a <http://dbpedia.org/class/yago/LakesOfDenmark> } }",
            "Sparql_164": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Bandleader> ; <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Trumpet> }"
        }
    }, {
        "word": "literature",
        "pairs": [],
        "questions": {
            "33": "Give me all writers that won the Nobel Prize in literature."
        },
        "Sparql": {
            "Sparql_33": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> }"
        }
    }, {
        "word": "liz",
        "pairs": [],
        "questions": {
            "70": "Which movies star both Liz Taylor and Richard Burton?"
        },
        "Sparql": {
            "Sparql_70": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> }"
        }
    }, {
        "word": "location",
        "pairs": [],
        "questions": {
            "215": "What is the location of the Houses of Parliament?"
        },
        "Sparql": {
            "Sparql_215": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:Palace_of_Westminster dbo:location ?uri }"
        }
    }, {
        "word": "london",
        "pairs": [],
        "questions": {
            "29": "Show me all museums in London."
        },
        "Sparql": {
            "Sparql_29": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Museum> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/London> }"
        }
    }, {
        "word": "lou",
        "pairs": [],
        "questions": {
            "44": "What kind of music did Lou Reed play?"
        },
        "Sparql": {
            "Sparql_44": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?uri }"
        }
    }, {
        "word": "lufthansa",
        "pairs": [],
        "questions": {
            "373": "Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?"
        },
        "Sparql": {
            "Sparql_373": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Lufthansa dbo:subsidiary ?uri . ?uri dbo:targetAirport res:Dortmund_Airport ; dbo:targetAirport res:Berlin_Tegel_Airport }"
        }
    }, {
        "word": "luke",
        "pairs": [],
        "questions": {
            "180": "Is Darth Vader Luke’s father?"
        },
        "Sparql": {
            "Sparql_180": "ASK WHERE { <http://dbpedia.org/resource/Darth_Vader> <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Luke_Skywalker> }"
        }
    }, {
        "word": "madrid",
        "pairs": [],
        "questions": {
            "146": "Who is the manager of Real Madrid?",
            "334": "Does Neymar play for Real Madrid?"
        },
        "Sparql": {
            "Sparql_146": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Real_Madrid_C.F.> <http://dbpedia.org/ontology/manager> ?uri }",
            "Sparql_334": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Neymar dbo:team <http://dbpedia.org/resource/Real_Madrid_C.F.> }"
        }
    }, {
        "word": "malaysia",
        "pairs": [],
        "questions": {
            "360": "Does the Ford Motor Company have a manufacturing plant in Malaysia?"
        },
        "Sparql": {
            "Sparql_360": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { ?uri dbo:assembly dbr:Malaysia ; dbo:manufacturer dbr:Ford_Motor_Company }"
        }
    }, {
        "word": "malta",
        "pairs": [],
        "questions": {
            "139": "Which soccer players were born on Malta?"
        },
        "Sparql": {
            "Sparql_139": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerPlayer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Malta> }"
        }
    }, {
        "word": "manager",
        "pairs": [],
        "questions": {
            "146": "Who is the manager of Real Madrid?"
        },
        "Sparql": {
            "Sparql_146": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Real_Madrid_C.F.> <http://dbpedia.org/ontology/manager> ?uri }"
        }
    }, {
        "word": "manhattan",
        "pairs": [],
        "questions": {
            "328": "Which scientist is known for the Manhattan Project and the Nobel Peace Prize?"
        },
        "Sparql": {
            "Sparql_328": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri dbo:knownFor res:Manhattan_Project ; rdf:type dbo:Scientist ; dbo:knownFor res:Nobel_Peace_Prize }"
        }
    }, {
        "word": "manufacturing",
        "pairs": [],
        "questions": {
            "360": "Does the Ford Motor Company have a manufacturing plant in Malaysia?"
        },
        "Sparql": {
            "Sparql_360": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { ?uri dbo:assembly dbr:Malaysia ; dbo:manufacturer dbr:Ford_Motor_Company }"
        }
    }, {
        "word": "marc",
        "pairs": [],
        "questions": {
            "104": "Was Marc Chagall a jew?"
        },
        "Sparql": {
            "Sparql_104": "ASK WHERE { <http://dbpedia.org/resource/Marc_Chagall> <http://dbpedia.org/property/ethnicity> \"Jewish\"@en }"
        }
    }, {
        "word": "margaret",
        "pairs": [],
        "questions": {
            "107": "Was Margaret Thatcher a chemist?",
            "275": "List the children of Margaret Thatcher."
        },
        "Sparql": {
            "Sparql_107": "ASK WHERE { <http://dbpedia.org/resource/Margaret_Thatcher> <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Chemist> }",
            "Sparql_275": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Margaret_Thatcher dbo:child ?uri }"
        }
    }, {
        "word": "maribor",
        "pairs": [],
        "questions": {
            "60": "How many inhabitants does Maribor have?"
        },
        "Sparql": {
            "Sparql_60": "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Maribor> <http://dbpedia.org/ontology/populationTotal> ?num }"
        }
    }, {
        "word": "marine",
        "pairs": [],
        "questions": {
            "304": "How high is the Yokohama Marine Tower?"
        },
        "Sparql": {
            "Sparql_304": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Yokohama_Marine_Tower dbo:height ?num }"
        }
    }, {
        "word": "marshall",
        "pairs": [],
        "questions": {
            "63": "In which films directed by Garry Marshall was Julia Roberts starring?"
        },
        "Sparql": {
            "Sparql_63": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> ; <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> }"
        }
    }, {
        "word": "mary",
        "pairs": [],
        "questions": {
            "245": "Was the wife of president Lincoln called Mary?"
        },
        "Sparql": {
            "Sparql_245": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Abraham_Lincoln dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, \"Mary\") }"
        }
    }, {
        "word": "match",
        "pairs": [],
        "questions": {
            "281": "When will start the final match of the football world cup 2018?"
        },
        "Sparql": {
            "Sparql_281": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?Date WHERE { dbr:2018_FIFA_World_Cup dbp:date ?Date } ORDER BY DESC(?Date) LIMIT 1"
        }
    }, {
        "word": "mater",
        "pairs": [],
        "questions": {
            "194": "What is the alma mater of the chancellor of Germany Angela Merkel?"
        },
        "Sparql": {
            "Sparql_194": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Almamater WHERE { dbr:Angela_Merkel dbo:almaMater ?Almamater }"
        }
    }, {
        "word": "matrix",
        "pairs": [],
        "questions": {
            "162": "Who played Agent Smith in Matrix?"
        },
        "Sparql": {
            "Sparql_162": "PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Agent_Smith <http://dbpedia.org/ontology/portrayer> ?uri }"
        }
    }, {
        "word": "maude",
        "pairs": [],
        "questions": {
            "330": "Who composed the music for Harold and Maude?"
        },
        "Sparql": {
            "Sparql_330": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Harold_and_Maude dbo:musicComposer ?uri }"
        }
    }, {
        "word": "mayor",
        "pairs": [],
        "questions": {
            "5": "Who is the mayor of New York City?",
            "265": "Who is the mayor of Paris?",
            "285": "Who is the mayor of the capital of French Polynesia?",
            "300": "Who is the mayor of Rotterdam?",
            "310": "To which party does the mayor of Paris belong?",
            "381": "Who is the mayor of Tel Aviv?"
        },
        "Sparql": {
            "Sparql_5": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:New_York_City dbo:leaderName ?uri }",
            "Sparql_265": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Paris dbo:mayor ?uri }",
            "Sparql_285": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:French_Polynesia dbo:capital ?x . ?x dbo:mayor ?uri }",
            "Sparql_300": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rotterdam dbo:leaderName ?uri }",
            "Sparql_310": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Paris dbo:mayor ?x . ?x dbo:party ?uri }",
            "Sparql_381": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Tel_Aviv dbo:leaderName ?uri }"
        }
    }, {
        "word": "mckinley",
        "pairs": [],
        "questions": {
            "115": "In which U.S. state is Mount McKinley located?"
        },
        "Sparql": {
            "Sparql_115": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_McKinley> dbo:wikiPageRedirects ?x . ?x <http://dbpedia.org/ontology/locatedInArea> ?uri. ?uri rdf:type yago:WikicatStatesOfTheUnitedStates }"
        }
    }, {
        "word": "mean",
        "pairs": [],
        "questions": {
            "295": "Give me all video games published by Mean Hamster Software."
        },
        "Sparql": {
            "Sparql_295": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:VideoGame ; dbo:publisher res:Mean_Hamster_Software }"
        }
    }, {
        "word": "mecca",
        "pairs": [],
        "questions": {
            "203": "In which country is Mecca located?"
        },
        "Sparql": {
            "Sparql_203": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mecca dbo:country ?uri }"
        }
    }, {
        "word": "melbourne",
        "pairs": [],
        "questions": {
            "353": "What is the total population of Melbourne, Florida?"
        },
        "Sparql": {
            "Sparql_353": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Melbourne,_Florida> dbo:populationTotal ?uri }"
        }
    }, {
        "word": "melon",
        "pairs": [],
        "questions": {
            "276": "From which region is the Melon de Bourgogne?"
        },
        "Sparql": {
            "Sparql_276": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Melon_de_Bourgogne dbo:wineRegion ?uri }"
        }
    }, {
        "word": "members",
        "pairs": [],
        "questions": {
            "127": "How many airlines are members of the Star Alliance?",
            "296": "Give me all members of Prodigy."
        },
        "Sparql": {
            "Sparql_127": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Airline> ; <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/Star_Alliance> }",
            "Sparql_296": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Prodigy dbo:bandMember ?uri }"
        }
    }, {
        "word": "men",
        "pairs": [],
        "questions": {
            "111": "What is the total amount of men and women serving in the FDNY?"
        },
        "Sparql": {
            "Sparql_111": "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/New_York_City_Fire_Department> <http://dbpedia.org/property/employees> ?num }"
        }
    }, {
        "word": "merkel",
        "pairs": [],
        "questions": {
            "151": "What is the birth name of Angela Merkel?",
            "194": "What is the alma mater of the chancellor of Germany Angela Merkel?",
            "248": "Which university did Angela Merkel attend?"
        },
        "Sparql": {
            "Sparql_151": "SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/property/birthName> ?string }",
            "Sparql_194": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Almamater WHERE { dbr:Angela_Merkel dbo:almaMater ?Almamater }",
            "Sparql_248": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?university WHERE { res:Angela_Merkel dbo:almaMater ?university }"
        }
    }, {
        "word": "meryl",
        "pairs": [],
        "questions": {
            "320": "Who is the oldest child of Meryl Streep?"
        },
        "Sparql": {
            "Sparql_320": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Meryl_Streep dbo:child ?uri . ?uri dbo:birthDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "metalcore",
        "pairs": [],
        "questions": {
            "101": "Give me all Australian metalcore bands."
        },
        "Sparql": {
            "Sparql_101": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Band> ; <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Metalcore> { ?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/hometown> ?h . ?h <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }"
        }
    }, {
        "word": "meters",
        "pairs": [],
        "questions": {
            "34": "Show me all basketball players that are higher than 2 meters."
        },
        "Sparql": {
            "Sparql_34": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > 2.0 ) }"
        }
    }, {
        "word": "metro",
        "pairs": [],
        "questions": {
            "349": "Which city has the oldest running metro?"
        },
        "Sparql": {
            "Sparql_349": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?loc WHERE { ?uri dbo:type dbr:Rapid_transit ; dbo:openingYear ?date ; dbo:location ?loc . ?loc rdf:type dbo:City } ORDER BY ASC(?date) LIMIT 1"
        }
    }, {
        "word": "mexico",
        "pairs": [],
        "questions": {
            "327": "How many states are in Mexico?"
        },
        "Sparql": {
            "Sparql_327": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(?uri) AS ?count) WHERE { ?uri dbo:type dbr:States_of_Mexico }"
        }
    }, {
        "word": "mi6",
        "pairs": [],
        "questions": {
            "364": "In which UK city are the headquarters of the MI6?"
        },
        "Sparql": {
            "Sparql_364": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Secret_Intelligence_Service dbo:headquarter ?uri . ?uri dbo:country res:United_Kingdom }"
        }
    }, {
        "word": "michael",
        "pairs": [],
        "questions": {
            "363": "How tall is Michael Jordan?"
        },
        "Sparql": {
            "Sparql_363": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Michael_Jordan dbo:height ?num }"
        }
    }, {
        "word": "michelle",
        "pairs": [],
        "questions": {
            "227": "Is the wife of president Obama called Michelle?",
            "376": "Is Michelle Obama the wife of Barack Obama?"
        },
        "Sparql": {
            "Sparql_227": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Barack_Obama dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, \"Michelle\") }",
            "Sparql_376": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Barack_Obama dbo:spouse res:Michelle_Obama }"
        }
    }, {
        "word": "mickey",
        "pairs": [],
        "questions": {
            "389": "Which movies starring Mickey Rourke were directed by Guy Ritchie?"
        },
        "Sparql": {
            "Sparql_389": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Mickey_Rourke ; dbo:director res:Guy_Ritchie }"
        }
    }, {
        "word": "miffy",
        "pairs": [],
        "questions": {
            "271": "Which country does the creator of Miffy come from?"
        },
        "Sparql": {
            "Sparql_271": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Miffy dbo:creator ?x . ?x dbo:nationality ?uri }"
        }
    }, {
        "word": "minecraft",
        "pairs": [],
        "questions": {
            "37": "Who developed Minecraft?"
        },
        "Sparql": {
            "Sparql_37": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Minecraft> <http://dbpedia.org/ontology/developer> ?uri }"
        }
    }, {
        "word": "minerals",
        "pairs": [],
        "questions": {
            "26": "Which U.S. states possess gold minerals?"
        },
        "Sparql": {
            "Sparql_26": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:mineral ?mineral FILTER regex(?mineral, \"gold\", \"i\") }"
        }
    }, {
        "word": "ming",
        "pairs": [],
        "questions": {
            "368": "When did the Ming dynasty dissolve?"
        },
        "Sparql": {
            "Sparql_368": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Ming_dynasty dbo:dissolutionDate ?date }"
        }
    }, {
        "word": "minister",
        "pairs": [],
        "questions": {
            "132": "Where is the residence of the prime minister of Spain?",
            "202": "Who is the current federal minister of finance in Germany?"
        },
        "Sparql": {
            "Sparql_132": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/property/residence> ?uri }",
            "Sparql_202": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?leader WHERE { <http://dbpedia.org/resource/Federal_Ministry_of_Finance_(Germany)> dbo:leader ?leader }"
        }
    }, {
        "word": "missile",
        "pairs": [],
        "questions": {
            "198": "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?"
        },
        "Sparql": {
            "Sparql_198": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Cuban_Missile_Crisis dbo:date ?x . res:Bay_of_Pigs_Invasion dbo:date ?y FILTER ( ?x < ?y ) }"
        }
    }, {
        "word": "missions",
        "pairs": [],
        "questions": {
            "90": "How many missions does the Soyuz programme have?"
        },
        "Sparql": {
            "Sparql_90": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/property/programme> <http://dbpedia.org/resource/Soyuz_programme> }"
        }
    }, {
        "word": "monarchs",
        "pairs": [],
        "questions": {
            "17": "Which monarchs were married to a German?"
        },
        "Sparql": {
            "Sparql_17": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Monarch ; dbo:spouse ?spouse { ?spouse dbo:birthPlace res:Germany } UNION { ?spouse dbo:birthPlace ?p . ?p dbo:country res:Germany } }"
        }
    }, {
        "word": "moon",
        "pairs": [],
        "questions": {
            "156": "How heavy is Jupiter's lightest moon?"
        },
        "Sparql": {
            "Sparql_156": "SELECT DISTINCT ?n WHERE { ?uri <http://dbpedia.org/property/satelliteOf> <http://dbpedia.org/resource/Jupiter> ; <http://dbpedia.org/ontology/mass> ?n } ORDER BY ASC(?n) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "moscow",
        "pairs": [],
        "questions": {
            "40": "Give all swimmers that were born in Moscow."
        },
        "Sparql": {
            "Sparql_40": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Swimmer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Moscow> }"
        }
    }, {
        "word": "motor",
        "pairs": [],
        "questions": {
            "360": "Does the Ford Motor Company have a manufacturing plant in Malaysia?"
        },
        "Sparql": {
            "Sparql_360": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { ?uri dbo:assembly dbr:Malaysia ; dbo:manufacturer dbr:Ford_Motor_Company }"
        }
    }, {
        "word": "mount",
        "pairs": [],
        "questions": {
            "115": "In which U.S. state is Mount McKinley located?",
            "354": "What country is Mount Everest in?",
            "384": "Who was the first to climb Mount Everest?"
        },
        "Sparql": {
            "Sparql_115": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_McKinley> dbo:wikiPageRedirects ?x . ?x <http://dbpedia.org/ontology/locatedInArea> ?uri. ?uri rdf:type yago:WikicatStatesOfTheUnitedStates }",
            "Sparql_354": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:locatedInArea ?uri . ?uri rdf:type dbo:Country }",
            "Sparql_384": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:firstAscentPerson ?uri }"
        }
    }, {
        "word": "mountain",
        "pairs": [],
        "questions": {
            "81": "To which countries does the Himalayan mountain system extend?",
            "120": "What is the highest mountain?",
            "165": "What is the second highest mountain on Earth?",
            "201": "What is the highest mountain in Saxony Germany?",
            "289": "What is the highest mountain in Italy?",
            "400": "What is the highest mountain in Australia?"
        },
        "Sparql": {
            "Sparql_81": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?uri }",
            "Sparql_120": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1",
            "Sparql_165": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 1 LIMIT 1",
            "Sparql_201": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?m WHERE { ?m dbo:mountainRange dbr:Ore_Mountains ; dbo:elevation ?height } ORDER BY DESC(?height) LIMIT 1",
            "Sparql_289": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Italy ; dbo:elevation ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1",
            "Sparql_400": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Australia ; dbo:elevation ?elevation } ORDER BY DESC(?elevation) LIMIT 1"
        }
    }, {
        "word": "mountains",
        "pairs": [],
        "questions": {
            "174": "Which mountains are higher than the Nanga Parbat?"
        },
        "Sparql": {
            "Sparql_174": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nanga_Parbat> <http://dbpedia.org/ontology/elevation> ?elevation . ?uri a <http://dbpedia.org/ontology/Mountain> { ?uri <http://dbpedia.org/ontology/elevation> ?otherelevation } UNION { ?uri <http://dbpedia.org/property/elevationM> ?otherelevation } FILTER ( ?otherelevation > ?elevation ) }"
        }
    }, {
        "word": "movement",
        "pairs": [],
        "questions": {
            "355": "To which artistic movement did the painter of The Three Dancers belong?"
        },
        "Sparql": {
            "Sparql_355": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Three_Dancers dbo:author ?person . ?person dbo:movement ?uri }"
        }
    }, {
        "word": "movie",
        "pairs": [],
        "questions": {
            "329": "How much did the Lego Movie cost?",
            "411": "What was the last movie with Alec Guinness?"
        },
        "Sparql": {
            "Sparql_329": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:The_Lego_Movie dbo:budget ?n }",
            "Sparql_411": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Alec_Guinness ; dbo:releaseDate ?date } ORDER BY DESC(?date) LIMIT 1"
        }
    }, {
        "word": "movies",
        "pairs": [],
        "questions": {
            "9": "Give me all actors starring in movies directed by and starring William Shatner.",
            "12": "Which movies starring Brad Pitt were directed by Guy Ritchie?",
            "39": "What movies does Jesse Eisenberg play in?",
            "51": "Give me all Danish movies.",
            "56": "How many movies did Park Chan-wook direct?",
            "70": "Which movies star both Liz Taylor and Richard Burton?",
            "133": "Which actor was casted in the most movies?",
            "171": "Give me all movies with Tom Cruise.",
            "213": "Give me all movies directed by Francis Ford Coppola.",
            "286": "Give me all actors starring in movies directed by William Shatner.",
            "345": "Who is starring in Spanish movies produced by Benicio del Toro?",
            "389": "Which movies starring Mickey Rourke were directed by Guy Ritchie?"
        },
        "Sparql": {
            "Sparql_9": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring res:William_Shatner { ?x dbo:starring ?uri } UNION { ?x dbp:starring ?uri } }",
            "Sparql_12": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Brad_Pitt ; dbo:director res:Guy_Ritchie }",
            "Sparql_39": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> }",
            "Sparql_51": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> }",
            "Sparql_56": "SELECT COUNT(DISTINCT ?uri AS ?uri) WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Park_Chan-wook> . }",
            "Sparql_70": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> }",
            "Sparql_133": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . ?f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?f <http://dbpedia.org/ontology/starring> ?uri . } ORDER BY DESC(COUNT(DISTINCT(?f))) OFFSET 0 LIMIT 1",
            "Sparql_171": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Tom_Cruise> }",
            "Sparql_213": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:director res:Francis_Ford_Coppola }",
            "Sparql_286": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring ?uri }",
            "Sparql_345": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?film rdf:type dbo:Film ; dbo:country res:Spain ; dbo:producer res:Benicio_del_Toro ; dbo:starring ?uri . ?uri rdf:type dbo:Person }",
            "Sparql_389": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Mickey_Rourke ; dbo:director res:Guy_Ritchie }"
        }
    }, {
        "word": "muhammad",
        "pairs": [],
        "questions": {
            "383": "Show me the book that Muhammad Ali wrote."
        },
        "Sparql": {
            "Sparql_383": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:Muhammad_Ali }"
        }
    }, {
        "word": "munich",
        "pairs": [],
        "questions": {
            "54": "Give me all companies in Munich."
        },
        "Sparql": {
            "Sparql_54": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Company> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Munich> } UNION { ?uri <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Munich> } UNION { ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Munich> } }"
        }
    }, {
        "word": "murphy",
        "pairs": [],
        "questions": {
            "144": "How many children does Eddie Murphy have?"
        },
        "Sparql": {
            "Sparql_144": "SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Eddie_Murphy> <http://dbpedia.org/property/children> ?n }"
        }
    }, {
        "word": "museum",
        "pairs": [],
        "questions": {
            "408": "Which museum in New York has the most visitors?"
        },
        "Sparql": {
            "Sparql_408": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Museum ; dbo:location res:New_York_City ; dbo:numberOfVisitors ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "museums",
        "pairs": [],
        "questions": {
            "29": "Show me all museums in London.",
            "76": "How many museums does Paris have?"
        },
        "Sparql": {
            "Sparql_29": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Museum> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/London> }",
            "Sparql_76": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Museum> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Paris> }"
        }
    }, {
        "word": "music",
        "pairs": [],
        "questions": {
            "44": "What kind of music did Lou Reed play?",
            "88": "Which music albums contain the song Last Christmas?",
            "96": "List all the musicals with music by Leonard Bernstein.",
            "249": "List all the musicals with music by Elton John.",
            "330": "Who composed the music for Harold and Maude?"
        },
        "Sparql": {
            "Sparql_44": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?uri }",
            "Sparql_88": "SELECT DISTINCT ?uri WHERE { ?single <http://dbpedia.org/ontology/album> ?uri ; <http://www.w3.org/2000/01/rdf-schema#label> \"Last Christmas\"@en }",
            "Sparql_96": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Musical> ; <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Leonard_Bernstein> }",
            "Sparql_249": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Musical ; dbo:musicBy res:Elton_John }",
            "Sparql_330": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Harold_and_Maude dbo:musicComposer ?uri }"
        }
    }, {
        "word": "musicals",
        "pairs": [],
        "questions": {
            "96": "List all the musicals with music by Leonard Bernstein.",
            "249": "List all the musicals with music by Elton John."
        },
        "Sparql": {
            "Sparql_96": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Musical> ; <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Leonard_Bernstein> }",
            "Sparql_249": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Musical ; dbo:musicBy res:Elton_John }"
        }
    }, {
        "word": "musician",
        "pairs": [],
        "questions": {
            "123": "Which musician wrote the most books?"
        },
        "Sparql": {
            "Sparql_123": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musician> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "mvp",
        "pairs": [],
        "questions": {
            "53": "Who are the four youngest MVP basketball players?"
        },
        "Sparql": {
            "Sparql_53": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/birthDate> ?date ; <http://dbpedia.org/property/highlights> ?h FILTER regex(?h, \"MVP\") } ORDER BY DESC(?date) OFFSET 0 LIMIT 4"
        }
    }, {
        "word": "name",
        "pairs": [],
        "questions": {
            "151": "What is the birth name of Angela Merkel?",
            "233": "What is the birth name of Adele?",
            "410": "What was the first name of the band Queens of the Stone Age?"
        },
        "Sparql": {
            "Sparql_151": "SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/property/birthName> ?string }",
            "Sparql_233": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?bn WHERE { dbr:Adele dbo:birthName ?bn }",
            "Sparql_410": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?name WHERE { res:Queens_of_the_Stone_Age dbo:alias ?name }"
        }
    }, {
        "word": "nanga",
        "pairs": [],
        "questions": {
            "174": "Which mountains are higher than the Nanga Parbat?"
        },
        "Sparql": {
            "Sparql_174": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nanga_Parbat> <http://dbpedia.org/ontology/elevation> ?elevation . ?uri a <http://dbpedia.org/ontology/Mountain> { ?uri <http://dbpedia.org/ontology/elevation> ?otherelevation } UNION { ?uri <http://dbpedia.org/property/elevationM> ?otherelevation } FILTER ( ?otherelevation > ?elevation ) }"
        }
    }, {
        "word": "nasa",
        "pairs": [],
        "questions": {
            "231": "Give me all launch pads operated by NASA."
        },
        "Sparql": {
            "Sparql_231": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:LaunchPad ; dbo:operator res:NASA }"
        }
    }, {
        "word": "natalie",
        "pairs": [],
        "questions": {
            "184": "Who produced films starring Natalie Portman?",
            "318": "Was Natalie Portman born in the United States?"
        },
        "Sparql": {
            "Sparql_184": "SELECT DISTINCT ?uri WHERE { ?film a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Natalie_Portman> ; <http://dbpedia.org/ontology/producer> ?uri }",
            "Sparql_318": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Natalie_Portman dbo:birthPlace ?city . ?city dbo:country res:United_States }"
        }
    }, {
        "word": "nations",
        "pairs": [],
        "questions": {
            "404": "In which city are the headquarters of the United Nations?"
        },
        "Sparql": {
            "Sparql_404": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Headquarters_of_the_United_Nations dbo:location ?uri . ?uri rdf:type dbo:City }"
        }
    }, {
        "word": "neil",
        "pairs": [],
        "questions": {
            "91": "Give me all the TV shows with Neil Patrick Harris."
        },
        "Sparql": {
            "Sparql_91": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Neil_Patrick_Harris> }"
        }
    }, {
        "word": "netherlands",
        "pairs": [],
        "questions": {
            "192": "Who is the king of the Netherlands?"
        },
        "Sparql": {
            "Sparql_192": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Netherlands dbo:leader ?uri . ?uri rdf:type dbo:Royalty }"
        }
    }, {
        "word": "new",
        "pairs": [],
        "questions": {
            "5": "Who is the mayor of New York City?",
            "173": "Give me all cities in New Jersey with more than 100000 inhabitants.",
            "393": "What are the five boroughs of New York?",
            "408": "Which museum in New York has the most visitors?"
        },
        "Sparql": {
            "Sparql_5": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:New_York_City dbo:leaderName ?uri }",
            "Sparql_173": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:isPartOf res:New_Jersey ; dbo:populationTotal ?inhabitants FILTER ( ?inhabitants > 100000 ) }",
            "Sparql_393": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:governmentType <http://dbpedia.org/resource/Borough_(New_York_City)> }",
            "Sparql_408": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Museum ; dbo:location res:New_York_City ; dbo:numberOfVisitors ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "neymar",
        "pairs": [],
        "questions": {
            "334": "Does Neymar play for Real Madrid?"
        },
        "Sparql": {
            "Sparql_334": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Neymar dbo:team <http://dbpedia.org/resource/Real_Madrid_C.F.> }"
        }
    }, {
        "word": "nikos",
        "pairs": [],
        "questions": {
            "292": "In which city did Nikos Kazantzakis die?"
        },
        "Sparql": {
            "Sparql_292": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Nikos_Kazantzakis dbo:deathPlace ?uri . ?uri rdf:type dbo:Town }"
        }
    }, {
        "word": "nile",
        "pairs": [],
        "questions": {
            "205": "In which country does the Nile start?"
        },
        "Sparql": {
            "Sparql_205": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Nile dbo:sourceCountry ?uri }"
        }
    }, {
        "word": "nobel",
        "pairs": [],
        "questions": {
            "33": "Give me all writers that won the Nobel Prize in literature.",
            "328": "Which scientist is known for the Manhattan Project and the Nobel Peace Prize?"
        },
        "Sparql": {
            "Sparql_33": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> }",
            "Sparql_328": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri dbo:knownFor res:Manhattan_Project ; rdf:type dbo:Scientist ; dbo:knownFor res:Nobel_Peace_Prize }"
        }
    }, {
        "word": "north",
        "pairs": [],
        "questions": {
            "278": "how big is the total area of North Rhine- Westphalia?"
        },
        "Sparql": {
            "Sparql_278": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?tarea WHERE { dbr:North_Rhine-Westphalia dbo:areaTotal ?tarea }"
        }
    }, {
        "word": "obama",
        "pairs": [],
        "questions": {
            "227": "Is the wife of president Obama called Michelle?",
            "274": "Is Barack Obama a democrat?",
            "376": "Is Michelle Obama the wife of Barack Obama?"
        },
        "Sparql": {
            "Sparql_227": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Barack_Obama dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, \"Michelle\") }",
            "Sparql_274": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Barack_Obama dbo:party <http://dbpedia.org/resource/Democratic_Party_(United_States)> }",
            "Sparql_376": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Barack_Obama dbo:spouse res:Michelle_Obama }"
        }
    }, {
        "word": "oceanographers",
        "pairs": [],
        "questions": {
            "403": "Give me all Swedish oceanographers."
        },
        "Sparql": {
            "Sparql_403": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:field res:Oceanography ; dbo:birthPlace res:Sweden }"
        }
    }, {
        "word": "operation",
        "pairs": [],
        "questions": {
            "356": "When did Operation Overlord commence?"
        },
        "Sparql": {
            "Sparql_356": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Operation_Overlord dbo:date ?d }"
        }
    }, {
        "word": "oregon",
        "pairs": [],
        "questions": {
            "323": "Which types of grapes grow in Oregon?"
        },
        "Sparql": {
            "Sparql_323": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Oregon_wine dbo:growingGrape ?uri }"
        }
    }, {
        "word": "organizations",
        "pairs": [],
        "questions": {
            "18": "Which organizations were founded in 1950?",
            "42": "Give me all Swiss non-profit organizations.",
            "71": "Give me all Australian nonprofit organizations.",
            "125": "Which software has been developed by organizations founded in California?",
            "142": "Which telecommunications organizations are located in Belgium?",
            "150": "Which organizations were founded in 1930?"
        },
        "Sparql": {
            "Sparql_18": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, \"^1950\") }",
            "Sparql_42": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Switzerland> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Switzerland> } }",
            "Sparql_71": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> { ?uri <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }",
            "Sparql_125": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Software> . ?company a <http://dbpedia.org/ontology/Company> . ?uri <http://dbpedia.org/ontology/developer> ?company . ?company <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/California> }",
            "Sparql_142": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Organisation> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Telecommunication> } UNION { ?uri <http://dbpedia.org/property/industry> ?industry FILTER regex(?industry, \"Telecommunications\") } { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belgium> } UNION { ?uri <http://dbpedia.org/property/locationCountry> \"Belgium\"@en } }",
            "Sparql_150": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Organisation> { ?uri <http://dbpedia.org/ontology/formationYear> ?date } UNION { ?uri <http://dbpedia.org/ontology/foundingYear> ?date } FILTER regex(?date, \"^1930\") }"
        }
    }, {
        "word": "origin",
        "pairs": [],
        "questions": {
            "242": "Where is the origin of Carolina reaper?"
        },
        "Sparql": {
            "Sparql_242": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:Carolina_Reaper dbo:origin ?uri}"
        }
    }, {
        "word": "overlord",
        "pairs": [],
        "questions": {
            "356": "When did Operation Overlord commence?"
        },
        "Sparql": {
            "Sparql_356": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Operation_Overlord dbo:date ?d }"
        }
    }, {
        "word": "owner",
        "pairs": [],
        "questions": {
            "15": "Who is the owner of Universal Studios?",
            "75": "Who is the owner of Rolls-Royce?",
            "170": "Who is the owner of Facebook?"
        },
        "Sparql": {
            "Sparql_15": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Universal_Studios dbo:owner ?uri }",
            "Sparql_75": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rolls-Royce_Motors> <http://dbpedia.org/ontology/owner> ?uri }",
            "Sparql_170": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/ontology/foundedBy> ?uri }"
        }
    }, {
        "word": "oxford",
        "pairs": [],
        "questions": {
            "49": "What is the official color of the University of Oxford?"
        },
        "Sparql": {
            "Sparql_49": "SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/University_of_Oxford> <http://dbpedia.org/ontology/officialSchoolColour> ?string }"
        }
    }, {
        "word": "pads",
        "pairs": [],
        "questions": {
            "231": "Give me all launch pads operated by NASA."
        },
        "Sparql": {
            "Sparql_231": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:LaunchPad ; dbo:operator res:NASA }"
        }
    }, {
        "word": "pages",
        "pairs": [],
        "questions": {
            "319": "How many pages does War and Peace have?",
            "371": "Give me all books by William Goldman with more than 300 pages."
        },
        "Sparql": {
            "Sparql_319": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:War_and_Peace dbo:numberOfPages ?n }",
            "Sparql_371": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:William_Goldman ; dbo:numberOfPages ?x FILTER ( ?x > 300 ) }"
        }
    }, {
        "word": "painter",
        "pairs": [],
        "questions": {
            "355": "To which artistic movement did the painter of The Three Dancers belong?"
        },
        "Sparql": {
            "Sparql_355": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Three_Dancers dbo:author ?person . ?person dbo:movement ?uri }"
        }
    }, {
        "word": "pakistan",
        "pairs": [],
        "questions": {
            "74": "Who was president of Pakistan in 1978?"
        },
        "Sparql": {
            "Sparql_74": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/President_of_Pakistan> ; <http://dbpedia.org/property/years> 1978 }"
        }
    }, {
        "word": "palme",
        "pairs": [],
        "questions": {
            "177": "When was Olof Palme shot?"
        },
        "Sparql": {
            "Sparql_177": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date }"
        }
    }, {
        "word": "parbat",
        "pairs": [],
        "questions": {
            "174": "Which mountains are higher than the Nanga Parbat?"
        },
        "Sparql": {
            "Sparql_174": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nanga_Parbat> <http://dbpedia.org/ontology/elevation> ?elevation . ?uri a <http://dbpedia.org/ontology/Mountain> { ?uri <http://dbpedia.org/ontology/elevation> ?otherelevation } UNION { ?uri <http://dbpedia.org/property/elevationM> ?otherelevation } FILTER ( ?otherelevation > ?elevation ) }"
        }
    }, {
        "word": "parents",
        "pairs": [],
        "questions": {
            "336": "Do Prince Harry and Prince William have the same parents?"
        },
        "Sparql": {
            "Sparql_336": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Prince_William,_Duke_of_Cambridge> dbo:parent ?x . res:Prince_Harry dbo:parent ?x }"
        }
    }, {
        "word": "paris",
        "pairs": [],
        "questions": {
            "69": "Give me all actors who were born in Paris after 1950.",
            "76": "How many museums does Paris have?",
            "265": "Who is the mayor of Paris?",
            "310": "To which party does the mayor of Paris belong?"
        },
        "Sparql": {
            "Sparql_69": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . ?uri <http://dbpedia.org/ontology/birthDate> ?date . FILTER ( ?date >= xsd:dateTime('1950-12-31T00:00:00Z')) }",
            "Sparql_76": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Museum> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Paris> }",
            "Sparql_265": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Paris dbo:mayor ?uri }",
            "Sparql_310": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Paris dbo:mayor ?x . ?x dbo:party ?uri }"
        }
    }, {
        "word": "park",
        "pairs": [],
        "questions": {
            "56": "How many movies did Park Chan-wook direct?"
        },
        "Sparql": {
            "Sparql_56": "SELECT COUNT(DISTINCT ?uri AS ?uri) WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Park_Chan-wook> . }"
        }
    }, {
        "word": "parliament",
        "pairs": [],
        "questions": {
            "215": "What is the location of the Houses of Parliament?"
        },
        "Sparql": {
            "Sparql_215": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:Palace_of_Westminster dbo:location ?uri }"
        }
    }, {
        "word": "part",
        "pairs": [],
        "questions": {
            "116": "What airlines are part of the SkyTeam alliance?"
        },
        "Sparql": {
            "Sparql_116": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airline> { ?uri <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/SkyTeam> } UNION { ?uri <http://dbpedia.org/ontology/Alliance> <http://dbpedia.org/resource/SkyTeam> } }"
        }
    }, {
        "word": "parties",
        "pairs": [],
        "questions": {
            "163": "Which Greek parties are pro-European?"
        },
        "Sparql": {
            "Sparql_163": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> ; <http://dbpedia.org/ontology/ideology> <http://dbpedia.org/resource/Pro-Europeanism> }"
        }
    }, {
        "word": "party",
        "pairs": [],
        "questions": {
            "155": "What is the ruling party in Lisbon?",
            "310": "To which party does the mayor of Paris belong?"
        },
        "Sparql": {
            "Sparql_155": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lisbon> <http://dbpedia.org/property/leaderParty> ?uri }",
            "Sparql_310": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Paris dbo:mayor ?x . ?x dbo:party ?uri }"
        }
    }, {
        "word": "patrick",
        "pairs": [],
        "questions": {
            "91": "Give me all the TV shows with Neil Patrick Harris."
        },
        "Sparql": {
            "Sparql_91": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Neil_Patrick_Harris> }"
        }
    }, {
        "word": "paul",
        "pairs": [],
        "questions": {
            "72": "Which pope succeeded John Paul II?"
        },
        "Sparql": {
            "Sparql_72": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_John_Paul_II> <http://dbpedia.org/property/successor> ?uri }"
        }
    }, {
        "word": "peace",
        "pairs": [],
        "questions": {
            "319": "How many pages does War and Peace have?",
            "328": "Which scientist is known for the Manhattan Project and the Nobel Peace Prize?"
        },
        "Sparql": {
            "Sparql_319": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:War_and_Peace dbo:numberOfPages ?n }",
            "Sparql_328": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri dbo:knownFor res:Manhattan_Project ; rdf:type dbo:Scientist ; dbo:knownFor res:Nobel_Peace_Prize }"
        }
    }, {
        "word": "peanut",
        "pairs": [],
        "questions": {
            "83": "How much carbs does peanut butter have?"
        },
        "Sparql": {
            "Sparql_83": "SELECT DISTINCT ?carbs WHERE { <http://dbpedia.org/resource/Peanut_butter> <http://dbpedia.org/property/carbs> ?carbs }"
        }
    }, {
        "word": "pedro",
        "pairs": [],
        "questions": {
            "370": "What is the timezone in San Pedro de Atacama?"
        },
        "Sparql": {
            "Sparql_370": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:San_Pedro_de_Atacama dbo:timeZone ?uri }"
        }
    }, {
        "word": "penguin",
        "pairs": [],
        "questions": {
            "396": "Who is the founder of Penguin Books?"
        },
        "Sparql": {
            "Sparql_396": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Penguin_Books dbo:founder ?uri }"
        }
    }, {
        "word": "penn",
        "pairs": [],
        "questions": {
            "206": "In which state Penn State University is located?"
        },
        "Sparql": {
            "Sparql_206": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?s WHERE { dbr:Pennsylvania_State_University dbo:state ?s }"
        }
    }, {
        "word": "people",
        "pairs": [],
        "questions": {
            "3": "Which people were born in Heraklion?",
            "179": "Give me all people that were born in Vienna and died in Berlin.",
            "225": "How many people live in Poland?",
            "256": "How many people live in the capital of Australia?",
            "351": "How many people live in Eurasia?",
            "406": "In which countries do people speak Japanese?"
        },
        "Sparql": {
            "Sparql_3": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX onto: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Person ; onto:birthPlace <http://dbpedia.org/resource/Heraklion>. }",
            "Sparql_179": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Vienna> ; <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Berlin> }",
            "Sparql_225": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Poland dbo:populationTotal ?uri }",
            "Sparql_256": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Australia dbo:capital ?x . ?x dbo:populationTotal ?num }",
            "Sparql_351": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?population WHERE { res:Eurasia dbo:populationTotal ?population }",
            "Sparql_406": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:language res:Japanese_language }"
        }
    }, {
        "word": "perl",
        "pairs": [],
        "questions": {
            "114": "Which programming languages were influenced by Perl?"
        },
        "Sparql": {
            "Sparql_114": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> { ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Perl> } UNION { <http://dbpedia.org/resource/Perl> <http://dbpedia.org/ontology/influenced> ?uri } }"
        }
    }, {
        "word": "persian",
        "pairs": [],
        "questions": {
            "344": "Do Urdu and Persian have a common root?"
        },
        "Sparql": {
            "Sparql_344": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { dbr:Urdu dbo:languageFamily ?uri . dbr:Persian_language dbo:languageFamily ?uri }"
        }
    }, {
        "word": "philippines",
        "pairs": [],
        "questions": {
            "10": "What are the official languages of the Philippines?"
        },
        "Sparql": {
            "Sparql_10": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Philippines dbo:officialLanguage ?uri }"
        }
    }, {
        "word": "physics",
        "pairs": [],
        "questions": {
            "326": "Did Tesla win a nobel prize in physics?"
        },
        "Sparql": {
            "Sparql_326": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Nikola_Tesla dbo:award res:Nobel_Prize_in_Physics }"
        }
    }, {
        "word": "pigs",
        "pairs": [],
        "questions": {
            "198": "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?"
        },
        "Sparql": {
            "Sparql_198": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Cuban_Missile_Crisis dbo:date ?x . res:Bay_of_Pigs_Invasion dbo:date ?y FILTER ( ?x < ?y ) }"
        }
    }, {
        "word": "piliers",
        "pairs": [],
        "questions": {
            "195": "Who wrote the book Les Piliers de la terre?"
        },
        "Sparql": {
            "Sparql_195": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }"
        }
    }, {
        "word": "pillars",
        "pairs": [],
        "questions": {
            "21": "Who wrote the book The pillars of the Earth?",
            "335": "Who wrote the book The Pillars of the Earth?"
        },
        "Sparql": {
            "Sparql_21": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }",
            "Sparql_335": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }"
        }
    }, {
        "word": "pink",
        "pairs": [],
        "questions": {
            "299": "Who are the writers of the Wall album of Pink Floyd?"
        },
        "Sparql": {
            "Sparql_299": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?writers WHERE { dbr:The_Wall dbp:writer ?writers }"
        }
    }, {
        "word": "pitt",
        "pairs": [],
        "questions": {
            "12": "Which movies starring Brad Pitt were directed by Guy Ritchie?"
        },
        "Sparql": {
            "Sparql_12": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Brad_Pitt ; dbo:director res:Guy_Ritchie }"
        }
    }, {
        "word": "place",
        "pairs": [],
        "questions": {
            "65": "What is the highest place of the Urals?",
            "169": "Which Chess players died in the same place they were born in?",
            "313": "Give me the birth place of Frank Sinatra.",
            "374": "Does Abraham Lincoln's death place have a website?"
        },
        "Sparql": {
            "Sparql_65": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ural_Mountains> <http://dbpedia.org/property/highest> ?uri }",
            "Sparql_169": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ChessPlayer> ; <http://dbpedia.org/ontology/birthPlace> ?x ; <http://dbpedia.org/ontology/deathPlace> ?y FILTER ( ?x = ?y ) }",
            "Sparql_313": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?place WHERE { res:Frank_Sinatra dbo:birthPlace ?place }",
            "Sparql_374": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Abraham_Lincoln dbo:deathPlace ?p . ?p dbo:website ?w }"
        }
    }, {
        "word": "places",
        "pairs": [],
        "questions": {
            "6": "Which countries have places with more than two caves?"
        },
        "Sparql": {
            "Sparql_6": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?cave rdf:type dbo:Cave ; dbo:location ?uri . ?uri rdf:type dbo:Country } GROUP BY ?uri HAVING ( COUNT(?cave) > 2 )"
        }
    }, {
        "word": "placid",
        "pairs": [],
        "questions": {
            "28": "How deep is Lake Placid?"
        },
        "Sparql": {
            "Sparql_28": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Lake_Placid_(Texas)> dbo:maximumDepth ?n }"
        }
    }, {
        "word": "plant",
        "pairs": [],
        "questions": {
            "360": "Does the Ford Motor Company have a manufacturing plant in Malaysia?"
        },
        "Sparql": {
            "Sparql_360": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { ?uri dbo:assembly dbr:Malaysia ; dbo:manufacturer dbr:Ford_Motor_Company }"
        }
    }, {
        "word": "player",
        "pairs": [],
        "questions": {
            "31": "Who is the tallest player of the Atlanta Falcons?",
            "186": "Who is the heaviest player of the Chicago Bulls?",
            "222": "Who is the youngest Darts player?",
            "306": "Who is the tallest basketball player?"
        },
        "Sparql": {
            "Sparql_31": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Atlanta_Falcons> ; <http://dbpedia.org/ontology/height> ?h } ORDER BY DESC(?h) OFFSET 0 LIMIT 1",
            "Sparql_186": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/ontology/weight> ?num { ?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/ontology/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } } ORDER BY DESC(?num) OFFSET 0 LIMIT 1",
            "Sparql_222": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:DartsPlayer ; dbo:birthDate ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1",
            "Sparql_306": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:BasketballPlayer ; dbo:height ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "players",
        "pairs": [],
        "questions": {
            "24": "Give me a list of all trumpet players that were bandleaders.",
            "34": "Show me all basketball players that are higher than 2 meters.",
            "53": "Who are the four youngest MVP basketball players?",
            "139": "Which soccer players were born on Malta?",
            "169": "Which Chess players died in the same place they were born in?"
        },
        "Sparql": {
            "Sparql_24": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation res:Bandleader ; dbo:instrument res:Trumpet }",
            "Sparql_34": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > 2.0 ) }",
            "Sparql_53": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/birthDate> ?date ; <http://dbpedia.org/property/highlights> ?h FILTER regex(?h, \"MVP\") } ORDER BY DESC(?date) OFFSET 0 LIMIT 4",
            "Sparql_139": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerPlayer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Malta> }",
            "Sparql_169": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ChessPlayer> ; <http://dbpedia.org/ontology/birthPlace> ?x ; <http://dbpedia.org/ontology/deathPlace> ?y FILTER ( ?x = ?y ) }"
        }
    }, {
        "word": "pluto",
        "pairs": [],
        "questions": {
            "413": "Who discovered Pluto?"
        },
        "Sparql": {
            "Sparql_413": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:Pluto dbo:discoverer ?uri }"
        }
    }, {
        "word": "poet",
        "pairs": [],
        "questions": {
            "121": "Which poet wrote the most books?"
        },
        "Sparql": {
            "Sparql_121": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Poet> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "poland",
        "pairs": [],
        "questions": {
            "225": "How many people live in Poland?"
        },
        "Sparql": {
            "Sparql_225": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Poland dbo:populationTotal ?uri }"
        }
    }, {
        "word": "politicians",
        "pairs": [],
        "questions": {
            "118": "Give me all Methodist politicians.",
            "140": "How many politicians graduated from Columbia University?"
        },
        "Sparql": {
            "Sparql_118": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Politician> ; <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> }",
            "Sparql_140": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> ; <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Columbia_University> }"
        }
    }, {
        "word": "polynesia",
        "pairs": [],
        "questions": {
            "285": "Who is the mayor of the capital of French Polynesia?"
        },
        "Sparql": {
            "Sparql_285": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:French_Polynesia dbo:capital ?x . ?x dbo:mayor ?uri }"
        }
    }, {
        "word": "pope",
        "pairs": [],
        "questions": {
            "72": "Which pope succeeded John Paul II?",
            "190": "Who was the pope that founded the Vatican Television?"
        },
        "Sparql": {
            "Sparql_72": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_John_Paul_II> <http://dbpedia.org/property/successor> ?uri }",
            "Sparql_190": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:Pope . res:Vatican_Television_Center dbo:foundedBy ?uri }"
        }
    }, {
        "word": "population",
        "pairs": [],
        "questions": {
            "16": "Which state of the USA has the highest population density?",
            "217": "How much is the population of mexico city ?",
            "230": "how much is the total population of  european union?",
            "234": "What is the population of Cairo?",
            "283": "how much is the population  Iraq?",
            "288": "how much is the population densty rank of germany?",
            "353": "What is the total population of Melbourne, Florida?"
        },
        "Sparql": {
            "Sparql_16": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:densityrank ?rank } ORDER BY ASC(?rank) LIMIT 1",
            "Sparql_217": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Mexico_City WHERE { dbr:Mexico_City dbo:populationTotal ?Mexico_City }",
            "Sparql_230": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?europop WHERE { dbr:European_Union dbo:populationTotal ?europop }",
            "Sparql_234": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?pop WHERE { dbr:Cairo dbo:populationTotal ?pop }",
            "Sparql_283": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?pIraq WHERE { dbr:Iraq dbo:populationTotal ?pIraq }",
            "Sparql_288": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?rank WHERE { dbr:Germany dbp:populationDensityRank ?rank }",
            "Sparql_353": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Melbourne,_Florida> dbo:populationTotal ?uri }"
        }
    }, {
        "word": "portman",
        "pairs": [],
        "questions": {
            "184": "Who produced films starring Natalie Portman?",
            "318": "Was Natalie Portman born in the United States?"
        },
        "Sparql": {
            "Sparql_184": "SELECT DISTINCT ?uri WHERE { ?film a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Natalie_Portman> ; <http://dbpedia.org/ontology/producer> ?uri }",
            "Sparql_318": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Natalie_Portman dbo:birthPlace ?city . ?city dbo:country res:United_States }"
        }
    }, {
        "word": "premier",
        "pairs": [],
        "questions": {
            "64": "Give me all soccer clubs in the Premier League."
        },
        "Sparql": {
            "Sparql_64": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Premier_League> }"
        }
    }, {
        "word": "president",
        "pairs": [],
        "questions": {
            "74": "Who was president of Pakistan in 1978?",
            "227": "Is the wife of president Obama called Michelle?",
            "229": "Who is 8th president of US?",
            "245": "Was the wife of president Lincoln called Mary?",
            "254": "Who was the wife of U.S. president Lincoln?",
            "270": "Who was John F. Kennedy's vice president?",
            "302": "Who was married to president Chirac?",
            "324": "Was U.S. president Jackson involved in a war?",
            "398": "Who is the president of Eritrea?"
        },
        "Sparql": {
            "Sparql_74": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/President_of_Pakistan> ; <http://dbpedia.org/property/years> 1978 }",
            "Sparql_227": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Barack_Obama dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, \"Michelle\") }",
            "Sparql_229": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?name WHERE { dbr:8th_President_of_the_United_States dbo:wikiPageRedirects ?link . ?link dbp:name ?name }",
            "Sparql_245": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Abraham_Lincoln dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, \"Mary\") }",
            "Sparql_254": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:spouse ?uri }",
            "Sparql_270": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:vicePresident ?uri }",
            "Sparql_302": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Jacques_Chirac dbo:spouse ?uri }",
            "Sparql_324": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Andrew_Jackson dbo:battle ?battle }",
            "Sparql_398": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Eritrea dbo:leader ?uri ; dbo:leaderTitle \"President\"@en }"
        }
    }, {
        "word": "presidents",
        "pairs": [],
        "questions": {
            "43": "Which presidents were born in 1945?"
        },
        "Sparql": {
            "Sparql_43": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/President> ; <http://dbpedia.org/ontology/birthDate> ?date FILTER regex(?date, \"^1945\") }"
        }
    }, {
        "word": "presley",
        "pairs": [],
        "questions": {
            "367": "Give me the grandchildren of Elvis Presley.",
            "375": "Did Elvis Presley have children?"
        },
        "Sparql": {
            "Sparql_367": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Elvis_Presley dbo:child ?child . ?child dbo:child ?uri }",
            "Sparql_375": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Elvis_Presley dbo:child ?uri }"
        }
    }, {
        "word": "press",
        "pairs": [],
        "questions": {
            "378": "Which books by Kerouac were published by Viking Press?"
        },
        "Sparql": {
            "Sparql_378": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:publisher res:Viking_Press ; dbo:author res:Jack_Kerouac }"
        }
    }, {
        "word": "prince",
        "pairs": [],
        "questions": {
            "336": "Do Prince Harry and Prince William have the same parents?"
        },
        "Sparql": {
            "Sparql_336": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Prince_William,_Duke_of_Cambridge> dbo:parent ?x . res:Prince_Harry dbo:parent ?x }"
        }
    }, {
        "word": "prix",
        "pairs": [],
        "questions": {
            "309": "Did Kaurismäki ever win the Grand Prix at Cannes?"
        },
        "Sparql": {
            "Sparql_309": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Aki_Kaurismäki dbo:award <http://dbpedia.org/resource/Grand_Prix_(Cannes_Film_Festival)> }"
        }
    }, {
        "word": "prize",
        "pairs": [],
        "questions": {
            "33": "Give me all writers that won the Nobel Prize in literature.",
            "326": "Did Tesla win a nobel prize in physics?",
            "328": "Which scientist is known for the Manhattan Project and the Nobel Peace Prize?"
        },
        "Sparql": {
            "Sparql_33": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> }",
            "Sparql_326": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Nikola_Tesla dbo:award res:Nobel_Prize_in_Physics }",
            "Sparql_328": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri dbo:knownFor res:Manhattan_Project ; rdf:type dbo:Scientist ; dbo:knownFor res:Nobel_Peace_Prize }"
        }
    }, {
        "word": "prodigy",
        "pairs": [],
        "questions": {
            "296": "Give me all members of Prodigy."
        },
        "Sparql": {
            "Sparql_296": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Prodigy dbo:bandMember ?uri }"
        }
    }, {
        "word": "programme",
        "pairs": [],
        "questions": {
            "90": "How many missions does the Soyuz programme have?"
        },
        "Sparql": {
            "Sparql_90": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/property/programme> <http://dbpedia.org/resource/Soyuz_programme> }"
        }
    }, {
        "word": "programming",
        "pairs": [],
        "questions": {
            "114": "Which programming languages were influenced by Perl?",
            "122": "Which programming languages influenced Javascript?",
            "168": "How many programming languages are there?",
            "247": "In which programming language is GIMP written?"
        },
        "Sparql": {
            "Sparql_114": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> { ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Perl> } UNION { <http://dbpedia.org/resource/Perl> <http://dbpedia.org/ontology/influenced> ?uri } }",
            "Sparql_122": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> ; <http://dbpedia.org/ontology/influenced> <http://dbpedia.org/resource/JavaScript> }",
            "Sparql_168": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> }",
            "Sparql_247": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:GIMP dbo:programmingLanguage ?uri }"
        }
    }, {
        "word": "proinsulin",
        "pairs": [],
        "questions": {
            "343": "Is proinsulin a protein?"
        },
        "Sparql": {
            "Sparql_343": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Proinsulin rdf:type dbo:Protein }"
        }
    }, {
        "word": "project",
        "pairs": [],
        "questions": {
            "328": "Which scientist is known for the Manhattan Project and the Nobel Peace Prize?"
        },
        "Sparql": {
            "Sparql_328": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri dbo:knownFor res:Manhattan_Project ; rdf:type dbo:Scientist ; dbo:knownFor res:Nobel_Peace_Prize }"
        }
    }, {
        "word": "protein",
        "pairs": [],
        "questions": {
            "343": "Is proinsulin a protein?"
        },
        "Sparql": {
            "Sparql_343": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Proinsulin rdf:type dbo:Protein }"
        }
    }, {
        "word": "province",
        "pairs": [],
        "questions": {
            "89": "When was Alberta admitted as province?"
        },
        "Sparql": {
            "Sparql_89": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Alberta> <http://dbpedia.org/property/admittancedate> ?date }"
        }
    }, {
        "word": "pulp",
        "pairs": [],
        "questions": {
            "342": "How much did Pulp Fiction cost?"
        },
        "Sparql": {
            "Sparql_342": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:Pulp_Fiction dbo:budget ?n }"
        }
    }, {
        "word": "pyramid",
        "pairs": [],
        "questions": {
            "359": "Who was buried in the Great Pyramid of Giza?"
        },
        "Sparql": {
            "Sparql_359": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:restingPlace dbr:Great_Pyramid_of_Giza }"
        }
    }, {
        "word": "queen",
        "pairs": [],
        "questions": {
            "95": "In which city was the former Dutch queen Juliana buried?",
            "409": "What was the first Queen album?"
        },
        "Sparql": {
            "Sparql_95": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juliana_of_the_Netherlands> <http://dbpedia.org/property/burialPlace> ?uri . ?uri a <http://dbpedia.org/ontology/Settlement> }",
            "Sparql_409": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Album ; dbo:artist <http://dbpedia.org/resource/Queen_(band)> ; dbo:releaseDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "queens",
        "pairs": [],
        "questions": {
            "410": "What was the first name of the band Queens of the Stone Age?"
        },
        "Sparql": {
            "Sparql_410": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?name WHERE { res:Queens_of_the_Stone_Age dbo:alias ?name }"
        }
    }, {
        "word": "race",
        "pairs": [],
        "questions": {
            "311": "Who is the Formula 1 race driver with the most races?"
        },
        "Sparql": {
            "Sparql_311": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:FormulaOneRacer ; dbo:races ?x } ORDER BY DESC(?x) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "races",
        "pairs": [],
        "questions": {
            "311": "Who is the Formula 1 race driver with the most races?"
        },
        "Sparql": {
            "Sparql_311": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:FormulaOneRacer ; dbo:races ?x } ORDER BY DESC(?x) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "rachel",
        "pairs": [],
        "questions": {
            "243": "In which year was Rachel Stevens born?"
        },
        "Sparql": {
            "Sparql_243": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rachel_Stevens dbo:birthYear ?uri }"
        }
    }, {
        "word": "ramones",
        "pairs": [],
        "questions": {
            "175": "Give me all B-sides of the Ramones."
        },
        "Sparql": {
            "Sparql_175": "SELECT DISTINCT ?string WHERE { ?x <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Ramones> ; <http://dbpedia.org/ontology/bSide> ?string }"
        }
    }, {
        "word": "rank",
        "pairs": [],
        "questions": {
            "105": "What was Brazil's lowest rank in the FIFA World Ranking?",
            "288": "how much is the population densty rank of germany?"
        },
        "Sparql": {
            "Sparql_105": "SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Brazil_national_football_team> <http://dbpedia.org/property/fifaMin> ?n }",
            "Sparql_288": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?rank WHERE { dbr:Germany dbp:populationDensityRank ?rank }"
        }
    }, {
        "word": "ranking",
        "pairs": [],
        "questions": {
            "105": "What was Brazil's lowest rank in the FIFA World Ranking?"
        },
        "Sparql": {
            "Sparql_105": "SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Brazil_national_football_team> <http://dbpedia.org/property/fifaMin> ?n }"
        }
    }, {
        "word": "reaper",
        "pairs": [],
        "questions": {
            "242": "Where is the origin of Carolina reaper?"
        },
        "Sparql": {
            "Sparql_242": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:Carolina_Reaper dbo:origin ?uri}"
        }
    }, {
        "word": "record",
        "pairs": [],
        "questions": {
            "394": "Give me all Canadian Grunge record labels."
        },
        "Sparql": {
            "Sparql_394": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:RecordLabel ; dbo:genre res:Grunge ; dbo:country res:Canada }"
        }
    }, {
        "word": "red",
        "pairs": [],
        "questions": {
            "45": "Where do the Red Sox play?"
        },
        "Sparql": {
            "Sparql_45": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boston_Red_Sox> <http://dbpedia.org/property/ballpark> ?uri }"
        }
    }, {
        "word": "reed",
        "pairs": [],
        "questions": {
            "44": "What kind of music did Lou Reed play?"
        },
        "Sparql": {
            "Sparql_44": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?uri }"
        }
    }, {
        "word": "region",
        "pairs": [],
        "questions": {
            "276": "From which region is the Melon de Bourgogne?"
        },
        "Sparql": {
            "Sparql_276": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Melon_de_Bourgogne dbo:wineRegion ?uri }"
        }
    }, {
        "word": "republic",
        "pairs": [],
        "questions": {
            "218": "when was the founding date of french fifth republic?",
            "386": "What is the currency of the Czech Republic?"
        },
        "Sparql": {
            "Sparql_218": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ff WHERE { dbr:French_Fifth_Republic dbo:foundingDate ?ff }",
            "Sparql_386": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Czech_Republic dbo:currency ?uri }"
        }
    }, {
        "word": "residence",
        "pairs": [],
        "questions": {
            "132": "Where is the residence of the prime minister of Spain?"
        },
        "Sparql": {
            "Sparql_132": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/property/residence> ?uri }"
        }
    }, {
        "word": "result",
        "pairs": [],
        "questions": {
            "341": "What was the final result of the War of the Roses?"
        },
        "Sparql": {
            "Sparql_341": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?result WHERE { ?uri dbo:isPartOfMilitaryConflict dbr:Wars_of_the_Roses ; dbo:result ?result ; dbo:date ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "rhee",
        "pairs": [],
        "questions": {
            "333": "Where is Syngman Rhee buried?"
        },
        "Sparql": {
            "Sparql_333": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Syngman_Rhee dbo:restingPlace ?uri }"
        }
    }, {
        "word": "rhine",
        "pairs": [],
        "questions": {
            "278": "how big is the total area of North Rhine- Westphalia?"
        },
        "Sparql": {
            "Sparql_278": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?tarea WHERE { dbr:North_Rhine-Westphalia dbo:areaTotal ?tarea }"
        }
    }, {
        "word": "richard",
        "pairs": [],
        "questions": {
            "70": "Which movies star both Liz Taylor and Richard Burton?",
            "390": "In which films did Julia Roberts as well as Richard Gere play?"
        },
        "Sparql": {
            "Sparql_70": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> }",
            "Sparql_390": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Julia_Roberts ; dbo:starring res:Richard_Gere }"
        }
    }, {
        "word": "rita",
        "pairs": [],
        "questions": {
            "405": "Is Rita Wilson the wife of Tom Hanks?"
        },
        "Sparql": {
            "Sparql_405": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Tom_Hanks dbo:spouse res:Rita_Wilson }"
        }
    }, {
        "word": "ritchie",
        "pairs": [],
        "questions": {
            "12": "Which movies starring Brad Pitt were directed by Guy Ritchie?",
            "389": "Which movies starring Mickey Rourke were directed by Guy Ritchie?"
        },
        "Sparql": {
            "Sparql_12": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Brad_Pitt ; dbo:director res:Guy_Ritchie }",
            "Sparql_389": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Mickey_Rourke ; dbo:director res:Guy_Ritchie }"
        }
    }, {
        "word": "river",
        "pairs": [],
        "questions": {
            "149": "What is the longest river?",
            "224": "Which river does the Brooklyn Bridge cross?",
            "251": "What is the longest river in the world?"
        },
        "Sparql": {
            "Sparql_149": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> { ?uri <http://dbpedia.org/ontology/length> ?l } UNION { ?uri <http://dbpedia.org/property/length> ?l } } ORDER BY DESC(?l) OFFSET 0 LIMIT 1",
            "Sparql_224": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:crosses ?uri }",
            "Sparql_251": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:BodyOfWater ; dbo:length ?length } ORDER BY DESC(?length) LIMIT 1"
        }
    }, {
        "word": "rivers",
        "pairs": [],
        "questions": {
            "57": "Which rivers flow into a German lake?"
        },
        "Sparql": {
            "Sparql_57": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> . ?x <http://dbpedia.org/ontology/inflow> ?uri ; a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> }"
        }
    }, {
        "word": "roach",
        "pairs": [],
        "questions": {
            "50": "How many films did Hal Roach produce?",
            "161": "Give me all films produced by Hal Roach."
        },
        "Sparql": {
            "Sparql_50": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> }",
            "Sparql_161": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> }"
        }
    }, {
        "word": "roberts",
        "pairs": [],
        "questions": {
            "63": "In which films directed by Garry Marshall was Julia Roberts starring?",
            "390": "In which films did Julia Roberts as well as Richard Gere play?"
        },
        "Sparql": {
            "Sparql_63": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> ; <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> }",
            "Sparql_390": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Julia_Roberts ; dbo:starring res:Richard_Gere }"
        }
    }, {
        "word": "rockets",
        "pairs": [],
        "questions": {
            "167": "Which rockets were launched from Baikonur?"
        },
        "Sparql": {
            "Sparql_167": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Rocket> ; <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Baikonur_Cosmodrome> }"
        }
    }, {
        "word": "rolls-royce",
        "pairs": [],
        "questions": {
            "75": "Who is the owner of Rolls-Royce?"
        },
        "Sparql": {
            "Sparql_75": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rolls-Royce_Motors> <http://dbpedia.org/ontology/owner> ?uri }"
        }
    }, {
        "word": "rome",
        "pairs": [],
        "questions": {
            "178": "List the seven kings of Rome.",
            "297": "In which time zone is Rome?"
        },
        "Sparql": {
            "Sparql_178": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/King_of_Rome> }",
            "Sparql_297": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rome dbo:timeZone ?uri }"
        }
    }, {
        "word": "root",
        "pairs": [],
        "questions": {
            "344": "Do Urdu and Persian have a common root?"
        },
        "Sparql": {
            "Sparql_344": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { dbr:Urdu dbo:languageFamily ?uri . dbr:Persian_language dbo:languageFamily ?uri }"
        }
    }, {
        "word": "roses",
        "pairs": [],
        "questions": {
            "341": "What was the final result of the War of the Roses?"
        },
        "Sparql": {
            "Sparql_341": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?result WHERE { ?uri dbo:isPartOfMilitaryConflict dbr:Wars_of_the_Roses ; dbo:result ?result ; dbo:date ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "rotterdam",
        "pairs": [],
        "questions": {
            "300": "Who is the mayor of Rotterdam?"
        },
        "Sparql": {
            "Sparql_300": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rotterdam dbo:leaderName ?uri }"
        }
    }, {
        "word": "rourke",
        "pairs": [],
        "questions": {
            "389": "Which movies starring Mickey Rourke were directed by Guy Ritchie?"
        },
        "Sparql": {
            "Sparql_389": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Mickey_Rourke ; dbo:director res:Guy_Ritchie }"
        }
    }, {
        "word": "route",
        "pairs": [],
        "questions": {
            "366": "In which city does the Chile Route 68 end?"
        },
        "Sparql": {
            "Sparql_366": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Chile_Route_68 dbo:routeEnd ?uri }"
        }
    }, {
        "word": "runtime",
        "pairs": [],
        "questions": {
            "260": "Give me the runtime of Toy Story."
        },
        "Sparql": {
            "Sparql_260": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?runtime WHERE { res:Toy_Story dbo:runtime ?runtime }"
        }
    }, {
        "word": "russia",
        "pairs": [],
        "questions": {
            "382": "What form of government does Russia have?"
        },
        "Sparql": {
            "Sparql_382": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Russia dbo:governmentType ?uri }"
        }
    }, {
        "word": "san",
        "pairs": [],
        "questions": {
            "370": "What is the timezone in San Pedro de Atacama?"
        },
        "Sparql": {
            "Sparql_370": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:San_Pedro_de_Atacama dbo:timeZone ?uri }"
        }
    }, {
        "word": "saxony",
        "pairs": [],
        "questions": {
            "201": "What is the highest mountain in Saxony Germany?"
        },
        "Sparql": {
            "Sparql_201": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?m WHERE { ?m dbo:mountainRange dbr:Ore_Mountains ; dbo:elevation ?height } ORDER BY DESC(?height) LIMIT 1"
        }
    }, {
        "word": "schiffer",
        "pairs": [],
        "questions": {
            "287": "How tall is Claudia Schiffer?"
        },
        "Sparql": {
            "Sparql_287": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Claudia_Schiffer dbo:height ?height }"
        }
    }, {
        "word": "schwarzenegger",
        "pairs": [],
        "questions": {
            "266": "Did Arnold Schwarzenegger attend a university?"
        },
        "Sparql": {
            "Sparql_266": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Arnold_Schwarzenegger dbo:almaMater ?x . ?x rdf:type dbo:University }"
        }
    }, {
        "word": "scientist",
        "pairs": [],
        "questions": {
            "328": "Which scientist is known for the Manhattan Project and the Nobel Peace Prize?"
        },
        "Sparql": {
            "Sparql_328": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri dbo:knownFor res:Manhattan_Project ; rdf:type dbo:Scientist ; dbo:knownFor res:Nobel_Peace_Prize }"
        }
    }, {
        "word": "season",
        "pairs": [],
        "questions": {
            "158": "List all episodes of the first season of the HBO television series The Sopranos!",
            "331": "List all episodes of the first season of the HBO television series The Sopranos."
        },
        "Sparql": {
            "Sparql_158": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }",
            "Sparql_331": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }"
        }
    }, {
        "word": "seine",
        "pairs": [],
        "questions": {
            "48": "Which bridges cross the Seine?"
        },
        "Sparql": {
            "Sparql_48": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Bridge> ; <http://dbpedia.org/ontology/crosses> <http://dbpedia.org/resource/Seine> }"
        }
    }, {
        "word": "series",
        "pairs": [],
        "questions": {
            "158": "List all episodes of the first season of the HBO television series The Sopranos!",
            "160": "Does the new Battlestar Galactica series have more episodes than the old one?",
            "226": "When was the last episode of the TV series Friends aired?",
            "331": "List all episodes of the first season of the HBO television series The Sopranos.",
            "347": "Show me all books in Asimov's Foundation series."
        },
        "Sparql": {
            "Sparql_158": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }",
            "Sparql_160": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Battlestar_Galactica_%281978_TV_series%29> dbo:numberOfEpisodes ?x . <http://dbpedia.org/resource/Battlestar_Galactica_%282004_TV_series%29> dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }",
            "Sparql_226": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?date WHERE { dbr:Friends dbo:completionDate ?date }",
            "Sparql_331": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }",
            "Sparql_347": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:Foundation_series }"
        }
    }, {
        "word": "shakespeare",
        "pairs": [],
        "questions": {
            "239": "When was the death  of  Shakespeare?"
        },
        "Sparql": {
            "Sparql_239": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?x WHERE { dbr:William_Shakespeare dbo:deathDate ?x } LIMIT 1"
        }
    }, {
        "word": "shatner",
        "pairs": [],
        "questions": {
            "9": "Give me all actors starring in movies directed by and starring William Shatner.",
            "286": "Give me all actors starring in movies directed by William Shatner."
        },
        "Sparql": {
            "Sparql_9": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring res:William_Shatner { ?x dbo:starring ?uri } UNION { ?x dbp:starring ?uri } }",
            "Sparql_286": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring ?uri }"
        }
    }, {
        "word": "shepherd",
        "pairs": [],
        "questions": {
            "185": "Give me all breeds of the German Shepherd dog."
        },
        "Sparql": {
            "Sparql_185": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/breed> <http://dbpedia.org/resource/German_Shepherd> }"
        }
    }, {
        "word": "ships",
        "pairs": [],
        "questions": {
            "117": "Which ships were called after Benjamin Franklin?"
        },
        "Sparql": {
            "Sparql_117": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/shipNamesake> <http://dbpedia.org/resource/Benjamin_Franklin> }"
        }
    }, {
        "word": "shot",
        "pairs": [],
        "questions": {
            "177": "When was Olof Palme shot?"
        },
        "Sparql": {
            "Sparql_177": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date }"
        }
    }, {
        "word": "show",
        "pairs": [],
        "questions": {
            "29": "Show me all museums in London.",
            "34": "Show me all basketball players that are higher than 2 meters.",
            "46": "Show a list of soccer clubs that play in the Bundesliga.",
            "79": "Show me everyone who was born on Halloween.",
            "136": "Show me all songs from Bruce Springsteen released between 1980 and 1990.",
            "141": "Give me the birthdays of all actors of the television show Charmed.",
            "145": "Show me all English Gothic buildings in Kent.",
            "181": "Show me all the breweries in Australia.",
            "347": "Show me all books in Asimov's Foundation series.",
            "383": "Show me the book that Muhammad Ali wrote.",
            "391": "Show me Hemingway's autobiography."
        },
        "Sparql": {
            "Sparql_29": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Museum> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/London> }",
            "Sparql_34": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > 2.0 ) }",
            "Sparql_46": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Bundesliga> }",
            "Sparql_79": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> { ?uri <http://dbpedia.org/ontology/birthDate> ?date } UNION { ?uri <http://dbpedia.org/property/birthDate> ?date } <http://dbpedia.org/resource/Halloween> <http://dbpedia.org/property/date> ?date }",
            "Sparql_136": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> . ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Bruce_Springsteen> . ?uri <http://dbpedia.org/ontology/releaseDate> ?date . FILTER (?date >= '1980-01-01'^^xsd:date && ?date <= '1990-12-31'^^xsd:date) }",
            "Sparql_141": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date }",
            "Sparql_145": "SELECT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Building> ; <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/English_Gothic_architecture> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Kent> }",
            "Sparql_181": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Brewery> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }",
            "Sparql_347": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:Foundation_series }",
            "Sparql_383": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:Muhammad_Ali }",
            "Sparql_391": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:author res:Ernest_Hemingway ; dbo:literaryGenre res:Autobiography }"
        }
    }, {
        "word": "shows",
        "pairs": [],
        "questions": {
            "137": "Which television shows were created by John Cleese?",
            "321": "Which television shows were created by Walt Disney?"
        },
        "Sparql": {
            "Sparql_137": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> }",
            "Sparql_321": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:TelevisionShow ; dbo:creator res:Walt_Disney }"
        }
    }, {
        "word": "sigmund",
        "pairs": [],
        "questions": {
            "211": "Was Sigmund Freud married?"
        },
        "Sparql": {
            "Sparql_211": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { dbr:Sigmund_Freud dbo:spouse ?uri }"
        }
    }, {
        "word": "sinatra",
        "pairs": [],
        "questions": {
            "313": "Give me the birth place of Frank Sinatra."
        },
        "Sparql": {
            "Sparql_313": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?place WHERE { res:Frank_Sinatra dbo:birthPlace ?place }"
        }
    }, {
        "word": "sitecore",
        "pairs": [],
        "questions": {
            "312": "What country is Sitecore from?"
        },
        "Sparql": {
            "Sparql_312": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Sitecore dbo:foundationPlace ?uri }"
        }
    }, {
        "word": "sites",
        "pairs": [],
        "questions": {
            "68": "Give me all world heritage sites designated within the past two years."
        },
        "Sparql": {
            "Sparql_68": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WorldHeritageSite> . { ?uri <http://dbpedia.org/property/year> '2013'^^xsd:integer . } UNION { ?uri <http://dbpedia.org/property/year> '2014'^^xsd:integer . } }"
        }
    }, {
        "word": "skyteam",
        "pairs": [],
        "questions": {
            "116": "What airlines are part of the SkyTeam alliance?"
        },
        "Sparql": {
            "Sparql_116": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Airline> { ?uri <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/SkyTeam> } UNION { ?uri <http://dbpedia.org/ontology/Alliance> <http://dbpedia.org/resource/SkyTeam> } }"
        }
    }, {
        "word": "slack",
        "pairs": [],
        "questions": {
            "241": "Who developed Slack?"
        },
        "Sparql": {
            "Sparql_241": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:product <http://dbpedia.org/resource/Slack_(software)> }"
        }
    }, {
        "word": "slovak",
        "pairs": [],
        "questions": {
            "38": "Where did Hillel Slovak die?"
        },
        "Sparql": {
            "Sparql_38": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hillel_Slovak> <http://dbpedia.org/ontology/deathPlace> ?uri }"
        }
    }, {
        "word": "slovenia",
        "pairs": [],
        "questions": {
            "316": "How many ethnic groups live in Slovenia?"
        },
        "Sparql": {
            "Sparql_316": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Slovenia dbo:ethnicGroup ?uri }"
        }
    }, {
        "word": "smith",
        "pairs": [],
        "questions": {
            "162": "Who played Agent Smith in Matrix?"
        },
        "Sparql": {
            "Sparql_162": "PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Agent_Smith <http://dbpedia.org/ontology/portrayer> ?uri }"
        }
    }, {
        "word": "soccer",
        "pairs": [],
        "questions": {
            "46": "Show a list of soccer clubs that play in the Bundesliga.",
            "64": "Give me all soccer clubs in the Premier League.",
            "139": "Which soccer players were born on Malta?",
            "183": "Give me all soccer clubs in Spain."
        },
        "Sparql": {
            "Sparql_46": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Bundesliga> }",
            "Sparql_64": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> ; <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Premier_League> }",
            "Sparql_139": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerPlayer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Malta> }",
            "Sparql_183": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> { ?uri <http://dbpedia.org/ontology/ground> <http://dbpedia.org/resource/Spain> } UNION { ?uri <http://dbpedia.org/property/ground> ?ground FILTER regex(?ground, \"Spain\") } }"
        }
    }, {
        "word": "socrates",
        "pairs": [],
        "questions": {
            "361": "Did Socrates influence Aristotle?"
        },
        "Sparql": {
            "Sparql_361": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Aristotle dbo:influencedBy res:Socrates }"
        }
    }, {
        "word": "software",
        "pairs": [],
        "questions": {
            "125": "Which software has been developed by organizations founded in California?",
            "295": "Give me all video games published by Mean Hamster Software."
        },
        "Sparql": {
            "Sparql_125": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Software> . ?company a <http://dbpedia.org/ontology/Company> . ?uri <http://dbpedia.org/ontology/developer> ?company . ?company <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/California> }",
            "Sparql_295": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:VideoGame ; dbo:publisher res:Mean_Hamster_Software }"
        }
    }, {
        "word": "son",
        "pairs": [],
        "questions": {
            "315": "Who is the son of Sonny and Cher?"
        },
        "Sparql": {
            "Sparql_315": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:parent res:Cher ; dbo:parent res:Sonny_Bono }"
        }
    }, {
        "word": "song",
        "pairs": [],
        "questions": {
            "88": "Which music albums contain the song Last Christmas?",
            "379": "Who wrote the song Hotel California?"
        },
        "Sparql": {
            "Sparql_88": "SELECT DISTINCT ?uri WHERE { ?single <http://dbpedia.org/ontology/album> ?uri ; <http://www.w3.org/2000/01/rdf-schema#label> \"Last Christmas\"@en }",
            "Sparql_379": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Hotel_California dbo:writer ?uri }"
        }
    }, {
        "word": "songs",
        "pairs": [],
        "questions": {
            "136": "Show me all songs from Bruce Springsteen released between 1980 and 1990."
        },
        "Sparql": {
            "Sparql_136": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> . ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Bruce_Springsteen> . ?uri <http://dbpedia.org/ontology/releaseDate> ?date . FILTER (?date >= '1980-01-01'^^xsd:date && ?date <= '1990-12-31'^^xsd:date) }"
        }
    }, {
        "word": "sonny",
        "pairs": [],
        "questions": {
            "315": "Who is the son of Sonny and Cher?"
        },
        "Sparql": {
            "Sparql_315": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:parent res:Cher ; dbo:parent res:Sonny_Bono }"
        }
    }, {
        "word": "sopranos",
        "pairs": [],
        "questions": {
            "158": "List all episodes of the first season of the HBO television series The Sopranos!",
            "331": "List all episodes of the first season of the HBO television series The Sopranos."
        },
        "Sparql": {
            "Sparql_158": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }",
            "Sparql_331": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }"
        }
    }, {
        "word": "soundtrack",
        "pairs": [],
        "questions": {
            "259": "Who composed the soundtrack for Cameron's Titanic?"
        },
        "Sparql": {
            "Sparql_259": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Titanic_(1997_film)> dbo:musicComposer ?uri }"
        }
    }, {
        "word": "south",
        "pairs": [],
        "questions": {
            "303": "What form of government is found in South Africa?"
        },
        "Sparql": {
            "Sparql_303": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:South_Africa dbo:governmentType ?uri }"
        }
    }, {
        "word": "sox",
        "pairs": [],
        "questions": {
            "45": "Where do the Red Sox play?"
        },
        "Sparql": {
            "Sparql_45": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boston_Red_Sox> <http://dbpedia.org/property/ballpark> ?uri }"
        }
    }, {
        "word": "soyuz",
        "pairs": [],
        "questions": {
            "90": "How many missions does the Soyuz programme have?"
        },
        "Sparql": {
            "Sparql_90": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/property/programme> <http://dbpedia.org/resource/Soyuz_programme> }"
        }
    }, {
        "word": "spaceflights",
        "pairs": [],
        "questions": {
            "23": "Which spaceflights were launched from Baikonur?"
        },
        "Sparql": {
            "Sparql_23": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/launchPad> res:Baikonur_Cosmodrome }"
        }
    }, {
        "word": "spain",
        "pairs": [],
        "questions": {
            "132": "Where is the residence of the prime minister of Spain?",
            "183": "Give me all soccer clubs in Spain.",
            "207": "What is the biggest stadium in Spain?"
        },
        "Sparql": {
            "Sparql_132": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/property/residence> ?uri }",
            "Sparql_183": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerClub> { ?uri <http://dbpedia.org/ontology/ground> <http://dbpedia.org/resource/Spain> } UNION { ?uri <http://dbpedia.org/property/ground> ?ground FILTER regex(?ground, \"Spain\") } }",
            "Sparql_207": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Stadium ; dbo:location res:Spain ; dbo:seatingCapacity ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "span",
        "pairs": [],
        "questions": {
            "357": "What is the bridge with the longest span?"
        },
        "Sparql": {
            "Sparql_357": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Bridge ; dbo:mainspan ?s } ORDER BY DESC(?s) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "specialities",
        "pairs": [],
        "questions": {
            "176": "What are the specialities of the UNC Health Care?"
        },
        "Sparql": {
            "Sparql_176": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/UNC_Health_Care> <http://dbpedia.org/property/speciality> ?uri }"
        }
    }, {
        "word": "specials",
        "pairs": [],
        "questions": {
            "352": "Who is the host of the BBC Wildlife Specials?"
        },
        "Sparql": {
            "Sparql_352": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:BBC_Wildlife_Specials dbo:presenter ?uri }"
        }
    }, {
        "word": "species",
        "pairs": [],
        "questions": {
            "255": "Which species does an elephant belong?"
        },
        "Sparql": {
            "Sparql_255": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?species WHERE { dbr:Elephant dbp:species ?species }"
        }
    }, {
        "word": "spielberg",
        "pairs": [],
        "questions": {
            "182": "Give me all films produced by Steven Spielberg with a budget of at least $80 million."
        },
        "Sparql": {
            "Sparql_182": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Steven_Spielberg> . ?uri <http://dbpedia.org/ontology/budget> ?b . FILTER( xsd:double(?b) >= 8.0E7 ) }"
        }
    }, {
        "word": "sport",
        "pairs": [],
        "questions": {
            "223": "Is horse racing a sport?"
        },
        "Sparql": {
            "Sparql_223": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { dbr:Horse_racing rdf:type dbo:Sport }"
        }
    }, {
        "word": "springsteen",
        "pairs": [],
        "questions": {
            "136": "Show me all songs from Bruce Springsteen released between 1980 and 1990."
        },
        "Sparql": {
            "Sparql_136": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> . ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Bruce_Springsteen> . ?uri <http://dbpedia.org/ontology/releaseDate> ?date . FILTER (?date >= '1980-01-01'^^xsd:date && ?date <= '1990-12-31'^^xsd:date) }"
        }
    }, {
        "word": "stadium",
        "pairs": [],
        "questions": {
            "207": "What is the biggest stadium in Spain?"
        },
        "Sparql": {
            "Sparql_207": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Stadium ; dbo:location res:Spain ; dbo:seatingCapacity ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "stallone",
        "pairs": [],
        "questions": {
            "377": "In which city does Sylvester Stallone live?"
        },
        "Sparql": {
            "Sparql_377": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City . res:Sylvester_Stallone dbo:residence ?uri }"
        }
    }, {
        "word": "stanley",
        "pairs": [],
        "questions": {
            "282": "Which films did Stanley Kubrick direct?"
        },
        "Sparql": {
            "Sparql_282": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Stanley_Kubrick }"
        }
    }, {
        "word": "star",
        "pairs": [],
        "questions": {
            "106": "How many films did Leonardo DiCaprio star in?",
            "127": "How many airlines are members of the Star Alliance?"
        },
        "Sparql": {
            "Sparql_106": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Leonardo_DiCaprio> }",
            "Sparql_127": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Airline> ; <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/Star_Alliance> }"
        }
    }, {
        "word": "stars",
        "pairs": [],
        "questions": {
            "119": "What other books have been written by the author of The Fault in Our Stars?"
        },
        "Sparql": {
            "Sparql_119": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?books WHERE { ?books dbo:author <http://dbpedia.org/resource/John_Green_(author)> }"
        }
    }, {
        "word": "state",
        "pairs": [],
        "questions": {
            "4": "In which U.S. state is Area 51 located?",
            "16": "Which state of the USA has the highest population density?",
            "22": "Which state of the United States of America has the highest density?",
            "98": "What is the largest metropolitan area in Washington state?",
            "115": "In which U.S. state is Mount McKinley located?",
            "172": "In which U.S. state is Fort Knox located?",
            "206": "In which state Penn State University is located?"
        },
        "Sparql": {
            "Sparql_4": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Area_51 dbo:location ?uri . ?uri dbo:country res:United_States. }",
            "Sparql_16": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:densityrank ?rank } ORDER BY ASC(?rank) LIMIT 1",
            "Sparql_22": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1",
            "Sparql_98": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Washington_(state)> <http://dbpedia.org/property/largestmetro> ?uri }",
            "Sparql_115": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_McKinley> dbo:wikiPageRedirects ?x . ?x <http://dbpedia.org/ontology/locatedInArea> ?uri. ?uri rdf:type yago:WikicatStatesOfTheUnitedStates }",
            "Sparql_172": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Fort_Knox dbo:location ?uri . ?uri dbo:country res:United_States }",
            "Sparql_206": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?s WHERE { dbr:Pennsylvania_State_University dbo:state ?s }"
        }
    }, {
        "word": "states",
        "pairs": [],
        "questions": {
            "22": "Which state of the United States of America has the highest density?",
            "25": "Which U.S. states are in the same timezone as Utah?",
            "26": "Which U.S. states possess gold minerals?",
            "36": "Which states border Illinois?",
            "108": "Which U.S. states are in the same time zone as Utah?",
            "318": "Was Natalie Portman born in the United States?",
            "327": "How many states are in Mexico?"
        },
        "Sparql": {
            "Sparql_22": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1",
            "Sparql_25": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Utah dbp:timezone ?x . ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:timezone ?x FILTER ( ?uri != res:Utah ) }",
            "Sparql_26": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:mineral ?mineral FILTER regex(?mineral, \"gold\", \"i\") }",
            "Sparql_36": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Illinois> <http://dbpedia.org/property/borderingstates> ?uri }",
            "Sparql_108": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Utah> <http://dbpedia.org/property/timezone> ?x . ?uri a <http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates> ; <http://dbpedia.org/property/timezone> ?x FILTER ( ?uri != <http://dbpedia.org/resource/Utah> ) }",
            "Sparql_318": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Natalie_Portman dbo:birthPlace ?city . ?city dbo:country res:United_States }",
            "Sparql_327": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(?uri) AS ?count) WHERE { ?uri dbo:type dbr:States_of_Mexico }"
        }
    }, {
        "word": "statue",
        "pairs": [],
        "questions": {
            "35": "When was the Statue of Liberty built?"
        },
        "Sparql": {
            "Sparql_35": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Statue_of_Liberty> <http://dbpedia.org/property/beginningDate> ?date }"
        }
    }, {
        "word": "steel",
        "pairs": [],
        "questions": {
            "109": "Give me all books written by Danielle Steel."
        },
        "Sparql": {
            "Sparql_109": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Book> ; <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Danielle_Steel> }"
        }
    }, {
        "word": "steven",
        "pairs": [],
        "questions": {
            "182": "Give me all films produced by Steven Spielberg with a budget of at least $80 million."
        },
        "Sparql": {
            "Sparql_182": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Steven_Spielberg> . ?uri <http://dbpedia.org/ontology/budget> ?b . FILTER( xsd:double(?b) >= 8.0E7 ) }"
        }
    }, {
        "word": "stevens",
        "pairs": [],
        "questions": {
            "126": "Which instruments does Cat Stevens play?",
            "243": "In which year was Rachel Stevens born?"
        },
        "Sparql": {
            "Sparql_126": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cat_Stevens> <http://dbpedia.org/ontology/instrument> ?uri }",
            "Sparql_243": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rachel_Stevens dbo:birthYear ?uri }"
        }
    }, {
        "word": "stone",
        "pairs": [],
        "questions": {
            "410": "What was the first name of the band Queens of the Stone Age?"
        },
        "Sparql": {
            "Sparql_410": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?name WHERE { res:Queens_of_the_Stone_Age dbo:alias ?name }"
        }
    }, {
        "word": "stores",
        "pairs": [],
        "questions": {
            "250": "How many Aldi stores are there?"
        },
        "Sparql": {
            "Sparql_250": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?number WHERE { res:Aldi dbo:numberOfLocations ?number }"
        }
    }, {
        "word": "story",
        "pairs": [],
        "questions": {
            "260": "Give me the runtime of Toy Story."
        },
        "Sparql": {
            "Sparql_260": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?runtime WHERE { res:Toy_Story dbo:runtime ?runtime }"
        }
    }, {
        "word": "streep",
        "pairs": [],
        "questions": {
            "320": "Who is the oldest child of Meryl Streep?"
        },
        "Sparql": {
            "Sparql_320": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Meryl_Streep dbo:child ?uri . ?uri dbo:birthDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "studios",
        "pairs": [],
        "questions": {
            "15": "Who is the owner of Universal Studios?"
        },
        "Sparql": {
            "Sparql_15": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Universal_Studios dbo:owner ?uri }"
        }
    }, {
        "word": "subsidiary",
        "pairs": [],
        "questions": {
            "373": "Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?"
        },
        "Sparql": {
            "Sparql_373": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Lufthansa dbo:subsidiary ?uri . ?uri dbo:targetAirport res:Dortmund_Airport ; dbo:targetAirport res:Berlin_Tegel_Airport }"
        }
    }, {
        "word": "successor",
        "pairs": [],
        "questions": {
            "264": "Who was the successor of John F. Kennedy?"
        },
        "Sparql": {
            "Sparql_264": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:successor ?uri }"
        }
    }, {
        "word": "sungkyunkwan",
        "pairs": [],
        "questions": {
            "237": "Where is Sungkyunkwan University?"
        },
        "Sparql": {
            "Sparql_237": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?country WHERE { dbr:Sungkyunkwan_University dbo:city ?city ; dbo:country ?country }"
        }
    }, {
        "word": "supervisor",
        "pairs": [],
        "questions": {
            "337": "Who was the doctoral supervisor of Albert Einstein?"
        },
        "Sparql": {
            "Sparql_337": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Albert_Einstein dbo:doctoralAdvisor ?uri }"
        }
    }, {
        "word": "suriname",
        "pairs": [],
        "questions": {
            "291": "What is the official language of Suriname?"
        },
        "Sparql": {
            "Sparql_291": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Suriname dbo:officialLanguage ?uri }"
        }
    }, {
        "word": "swimmers",
        "pairs": [],
        "questions": {
            "40": "Give all swimmers that were born in Moscow."
        },
        "Sparql": {
            "Sparql_40": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Swimmer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Moscow> }"
        }
    }, {
        "word": "sylvester",
        "pairs": [],
        "questions": {
            "377": "In which city does Sylvester Stallone live?"
        },
        "Sparql": {
            "Sparql_377": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City . res:Sylvester_Stallone dbo:residence ?uri }"
        }
    }, {
        "word": "syngman",
        "pairs": [],
        "questions": {
            "333": "Where is Syngman Rhee buried?"
        },
        "Sparql": {
            "Sparql_333": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Syngman_Rhee dbo:restingPlace ?uri }"
        }
    }, {
        "word": "system",
        "pairs": [],
        "questions": {
            "81": "To which countries does the Himalayan mountain system extend?"
        },
        "Sparql": {
            "Sparql_81": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?uri }"
        }
    }, {
        "word": "taylor",
        "pairs": [],
        "questions": {
            "70": "Which movies star both Liz Taylor and Richard Burton?"
        },
        "Sparql": {
            "Sparql_70": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> }"
        }
    }, {
        "word": "team",
        "pairs": [],
        "questions": {
            "208": "Who is the coach of Ankara's ice hockey team?"
        },
        "Sparql": {
            "Sparql_208": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:city res:Ankara ; dbo:league res:Turkish_Ice_Hockey_First_League ; dbo:coach ?uri }"
        }
    }, {
        "word": "tegel",
        "pairs": [],
        "questions": {
            "373": "Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel?"
        },
        "Sparql": {
            "Sparql_373": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Lufthansa dbo:subsidiary ?uri . ?uri dbo:targetAirport res:Dortmund_Airport ; dbo:targetAirport res:Berlin_Tegel_Airport }"
        }
    }, {
        "word": "tel",
        "pairs": [],
        "questions": {
            "381": "Who is the mayor of Tel Aviv?"
        },
        "Sparql": {
            "Sparql_381": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Tel_Aviv dbo:leaderName ?uri }"
        }
    }, {
        "word": "telecommunications",
        "pairs": [],
        "questions": {
            "142": "Which telecommunications organizations are located in Belgium?"
        },
        "Sparql": {
            "Sparql_142": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Organisation> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Telecommunication> } UNION { ?uri <http://dbpedia.org/property/industry> ?industry FILTER regex(?industry, \"Telecommunications\") } { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belgium> } UNION { ?uri <http://dbpedia.org/property/locationCountry> \"Belgium\"@en } }"
        }
    }, {
        "word": "television",
        "pairs": [],
        "questions": {
            "137": "Which television shows were created by John Cleese?",
            "141": "Give me the birthdays of all actors of the television show Charmed.",
            "158": "List all episodes of the first season of the HBO television series The Sopranos!",
            "190": "Who was the pope that founded the Vatican Television?",
            "321": "Which television shows were created by Walt Disney?",
            "331": "List all episodes of the first season of the HBO television series The Sopranos."
        },
        "Sparql": {
            "Sparql_137": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> }",
            "Sparql_141": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date }",
            "Sparql_158": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }",
            "Sparql_190": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:Pope . res:Vatican_Television_Center dbo:foundedBy ?uri }",
            "Sparql_321": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:TelevisionShow ; dbo:creator res:Walt_Disney }",
            "Sparql_331": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }"
        }
    }, {
        "word": "terre",
        "pairs": [],
        "questions": {
            "195": "Who wrote the book Les Piliers de la terre?"
        },
        "Sparql": {
            "Sparql_195": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }"
        }
    }, {
        "word": "tesla",
        "pairs": [],
        "questions": {
            "326": "Did Tesla win a nobel prize in physics?"
        },
        "Sparql": {
            "Sparql_326": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Nikola_Tesla dbo:award res:Nobel_Prize_in_Physics }"
        }
    }, {
        "word": "test2",
        "pairs": [],
        "questions": {
            "305": "Which holidays are celebrated around the world? test2"
        },
        "Sparql": {
            "Sparql_305": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday }"
        }
    }, {
        "word": "thatcher",
        "pairs": [],
        "questions": {
            "107": "Was Margaret Thatcher a chemist?",
            "275": "List the children of Margaret Thatcher."
        },
        "Sparql": {
            "Sparql_107": "ASK WHERE { <http://dbpedia.org/resource/Margaret_Thatcher> <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Chemist> }",
            "Sparql_275": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Margaret_Thatcher dbo:child ?uri }"
        }
    }, {
        "word": "theme",
        "pairs": [],
        "questions": {
            "397": "Who wrote the Game of Thrones theme?"
        },
        "Sparql": {
            "Sparql_397": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Game_of_Thrones dbo:composer ?uri }"
        }
    }, {
        "word": "theories",
        "pairs": [],
        "questions": {
            "258": "How many theories did Albert Einstein come up with?"
        },
        "Sparql": {
            "Sparql_258": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(?uri) AS ?count) WHERE { dbr:Albert_Einstein dbo:knownFor ?uri }"
        }
    }, {
        "word": "thrones",
        "pairs": [],
        "questions": {
            "338": "Does Breaking Bad have more episodes than Game of Thrones?",
            "397": "Who wrote the Game of Thrones theme?"
        },
        "Sparql": {
            "Sparql_338": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Breaking_Bad dbo:numberOfEpisodes ?x . res:Game_of_Thrones dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }",
            "Sparql_397": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Game_of_Thrones dbo:composer ?uri }"
        }
    }, {
        "word": "tim",
        "pairs": [],
        "questions": {
            "407": "Which of Tim Burton's films had the highest budget?"
        },
        "Sparql": {
            "Sparql_407": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Tim_Burton ; dbo:budget ?b } ORDER BY ?b OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "time",
        "pairs": [],
        "questions": {
            "108": "Which U.S. states are in the same time zone as Utah?",
            "297": "In which time zone is Rome?"
        },
        "Sparql": {
            "Sparql_108": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Utah> <http://dbpedia.org/property/timezone> ?x . ?uri a <http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates> ; <http://dbpedia.org/property/timezone> ?x FILTER ( ?uri != <http://dbpedia.org/resource/Utah> ) }",
            "Sparql_297": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rome dbo:timeZone ?uri }"
        }
    }, {
        "word": "timezone",
        "pairs": [],
        "questions": {
            "25": "Which U.S. states are in the same timezone as Utah?",
            "370": "What is the timezone in San Pedro de Atacama?"
        },
        "Sparql": {
            "Sparql_25": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Utah dbp:timezone ?x . ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:timezone ?x FILTER ( ?uri != res:Utah ) }",
            "Sparql_370": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:San_Pedro_de_Atacama dbo:timeZone ?uri }"
        }
    }, {
        "word": "titanic",
        "pairs": [],
        "questions": {
            "259": "Who composed the soundtrack for Cameron's Titanic?",
            "325": "When was the Titanic completed?"
        },
        "Sparql": {
            "Sparql_259": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Titanic_(1997_film)> dbo:musicComposer ?uri }",
            "Sparql_325": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:RMS_Titanic dbo:completionDate ?date }"
        }
    }, {
        "word": "tom",
        "pairs": [],
        "questions": {
            "152": "Who has Tom Cruise been married to?",
            "171": "Give me all movies with Tom Cruise.",
            "405": "Is Rita Wilson the wife of Tom Hanks?"
        },
        "Sparql": {
            "Sparql_152": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tom_Cruise> }",
            "Sparql_171": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Tom_Cruise> }",
            "Sparql_405": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Tom_Hanks dbo:spouse res:Rita_Wilson }"
        }
    }, {
        "word": "toro",
        "pairs": [],
        "questions": {
            "345": "Who is starring in Spanish movies produced by Benicio del Toro?"
        },
        "Sparql": {
            "Sparql_345": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?film rdf:type dbo:Film ; dbo:country res:Spain ; dbo:producer res:Benicio_del_Toro ; dbo:starring ?uri . ?uri rdf:type dbo:Person }"
        }
    }, {
        "word": "tower",
        "pairs": [],
        "questions": {
            "67": "Where did the architect of the Eiffel Tower study?",
            "304": "How high is the Yokohama Marine Tower?"
        },
        "Sparql": {
            "Sparql_67": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eiffel_Tower> <http://dbpedia.org/ontology/architect> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri }",
            "Sparql_304": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Yokohama_Marine_Tower dbo:height ?num }"
        }
    }, {
        "word": "toy",
        "pairs": [],
        "questions": {
            "260": "Give me the runtime of Toy Story."
        },
        "Sparql": {
            "Sparql_260": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?runtime WHERE { res:Toy_Story dbo:runtime ?runtime }"
        }
    }, {
        "word": "tree",
        "pairs": [],
        "questions": {
            "214": "Are tree frogs a type of amphibian?"
        },
        "Sparql": {
            "Sparql_214": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Hylidae dbo:class res:Amphibian }"
        }
    }, {
        "word": "trump",
        "pairs": [],
        "questions": {
            "280": "What is Donald Trump's main business?"
        },
        "Sparql": {
            "Sparql_280": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?owner WHERE { ?owner dbo:owner dbr:Donald_Trump }"
        }
    }, {
        "word": "trumpet",
        "pairs": [],
        "questions": {
            "24": "Give me a list of all trumpet players that were bandleaders.",
            "164": "Give me a list of all bandleaders that play trumpet."
        },
        "Sparql": {
            "Sparql_24": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation res:Bandleader ; dbo:instrument res:Trumpet }",
            "Sparql_164": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Bandleader> ; <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Trumpet> }"
        }
    }, {
        "word": "turkmenistan",
        "pairs": [],
        "questions": {
            "307": "How many languages are spoken in Turkmenistan?"
        },
        "Sparql": {
            "Sparql_307": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?x) AS ?c) WHERE { res:Turkmenistan dbo:language ?x }"
        }
    }, {
        "word": "tv",
        "pairs": [],
        "questions": {
            "91": "Give me all the TV shows with Neil Patrick Harris.",
            "226": "When was the last episode of the TV series Friends aired?"
        },
        "Sparql": {
            "Sparql_91": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Neil_Patrick_Harris> }",
            "Sparql_226": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?date WHERE { dbr:Friends dbo:completionDate ?date }"
        }
    }, {
        "word": "type",
        "pairs": [],
        "questions": {
            "214": "Are tree frogs a type of amphibian?"
        },
        "Sparql": {
            "Sparql_214": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Hylidae dbo:class res:Amphibian }"
        }
    }, {
        "word": "types",
        "pairs": [],
        "questions": {
            "103": "Give me all types of eating disorders.",
            "323": "Which types of grapes grow in Oregon?"
        },
        "Sparql": {
            "Sparql_103": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/class/yago/WikicatEatingDisorders> }",
            "Sparql_323": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Oregon_wine dbo:growingGrape ?uri }"
        }
    }, {
        "word": "u.s.",
        "pairs": [],
        "questions": {
            "4": "In which U.S. state is Area 51 located?",
            "25": "Which U.S. states are in the same timezone as Utah?",
            "26": "Which U.S. states possess gold minerals?",
            "108": "Which U.S. states are in the same time zone as Utah?",
            "115": "In which U.S. state is Mount McKinley located?",
            "172": "In which U.S. state is Fort Knox located?",
            "254": "Who was the wife of U.S. president Lincoln?",
            "324": "Was U.S. president Jackson involved in a war?"
        },
        "Sparql": {
            "Sparql_4": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Area_51 dbo:location ?uri . ?uri dbo:country res:United_States. }",
            "Sparql_25": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Utah dbp:timezone ?x . ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:timezone ?x FILTER ( ?uri != res:Utah ) }",
            "Sparql_26": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:mineral ?mineral FILTER regex(?mineral, \"gold\", \"i\") }",
            "Sparql_108": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Utah> <http://dbpedia.org/property/timezone> ?x . ?uri a <http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates> ; <http://dbpedia.org/property/timezone> ?x FILTER ( ?uri != <http://dbpedia.org/resource/Utah> ) }",
            "Sparql_115": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_McKinley> dbo:wikiPageRedirects ?x . ?x <http://dbpedia.org/ontology/locatedInArea> ?uri. ?uri rdf:type yago:WikicatStatesOfTheUnitedStates }",
            "Sparql_172": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Fort_Knox dbo:location ?uri . ?uri dbo:country res:United_States }",
            "Sparql_254": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:spouse ?uri }",
            "Sparql_324": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Andrew_Jackson dbo:battle ?battle }"
        }
    }, {
        "word": "uk",
        "pairs": [],
        "questions": {
            "209": "How large is the area of UK?",
            "364": "In which UK city are the headquarters of the MI6?"
        },
        "Sparql": {
            "Sparql_209": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?area WHERE { dbr:United_Kingdom dbo:areaTotal ?area }",
            "Sparql_364": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Secret_Intelligence_Service dbo:headquarter ?uri . ?uri dbo:country res:United_Kingdom }"
        }
    }, {
        "word": "unc",
        "pairs": [],
        "questions": {
            "176": "What are the specialities of the UNC Health Care?"
        },
        "Sparql": {
            "Sparql_176": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/UNC_Health_Care> <http://dbpedia.org/property/speciality> ?uri }"
        }
    }, {
        "word": "union",
        "pairs": [],
        "questions": {
            "230": "how much is the total population of  european union?"
        },
        "Sparql": {
            "Sparql_230": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?europop WHERE { dbr:European_Union dbo:populationTotal ?europop }"
        }
    }, {
        "word": "united",
        "pairs": [],
        "questions": {
            "22": "Which state of the United States of America has the highest density?",
            "318": "Was Natalie Portman born in the United States?",
            "404": "In which city are the headquarters of the United Nations?"
        },
        "Sparql": {
            "Sparql_22": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1",
            "Sparql_318": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Natalie_Portman dbo:birthPlace ?city . ?city dbo:country res:United_States }",
            "Sparql_404": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Headquarters_of_the_United_Nations dbo:location ?uri . ?uri rdf:type dbo:City }"
        }
    }, {
        "word": "universal",
        "pairs": [],
        "questions": {
            "15": "Who is the owner of Universal Studios?"
        },
        "Sparql": {
            "Sparql_15": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Universal_Studios dbo:owner ?uri }"
        }
    }, {
        "word": "university",
        "pairs": [],
        "questions": {
            "49": "What is the official color of the University of Oxford?",
            "140": "How many politicians graduated from Columbia University?",
            "206": "In which state Penn State University is located?",
            "237": "Where is Sungkyunkwan University?",
            "248": "Which university did Angela Merkel attend?",
            "266": "Did Arnold Schwarzenegger attend a university?"
        },
        "Sparql": {
            "Sparql_49": "SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/University_of_Oxford> <http://dbpedia.org/ontology/officialSchoolColour> ?string }",
            "Sparql_140": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> ; <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Columbia_University> }",
            "Sparql_206": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?s WHERE { dbr:Pennsylvania_State_University dbo:state ?s }",
            "Sparql_237": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?country WHERE { dbr:Sungkyunkwan_University dbo:city ?city ; dbo:country ?country }",
            "Sparql_248": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?university WHERE { res:Angela_Merkel dbo:almaMater ?university }",
            "Sparql_266": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Arnold_Schwarzenegger dbo:almaMater ?x . ?x rdf:type dbo:University }"
        }
    }, {
        "word": "urals",
        "pairs": [],
        "questions": {
            "65": "What is the highest place of the Urals?"
        },
        "Sparql": {
            "Sparql_65": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ural_Mountains> <http://dbpedia.org/property/highest> ?uri }"
        }
    }, {
        "word": "urdu",
        "pairs": [],
        "questions": {
            "344": "Do Urdu and Persian have a common root?"
        },
        "Sparql": {
            "Sparql_344": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { dbr:Urdu dbo:languageFamily ?uri . dbr:Persian_language dbo:languageFamily ?uri }"
        }
    }, {
        "word": "us",
        "pairs": [],
        "questions": {
            "229": "Who is 8th president of US?"
        },
        "Sparql": {
            "Sparql_229": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?name WHERE { dbr:8th_President_of_the_United_States dbo:wikiPageRedirects ?link . ?link dbp:name ?name }"
        }
    }, {
        "word": "usa",
        "pairs": [],
        "questions": {
            "16": "Which state of the USA has the highest population density?"
        },
        "Sparql": {
            "Sparql_16": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:densityrank ?rank } ORDER BY ASC(?rank) LIMIT 1"
        }
    }, {
        "word": "utah",
        "pairs": [],
        "questions": {
            "25": "Which U.S. states are in the same timezone as Utah?",
            "108": "Which U.S. states are in the same time zone as Utah?"
        },
        "Sparql": {
            "Sparql_25": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Utah dbp:timezone ?x . ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:timezone ?x FILTER ( ?uri != res:Utah ) }",
            "Sparql_108": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Utah> <http://dbpedia.org/property/timezone> ?x . ?uri a <http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates> ; <http://dbpedia.org/property/timezone> ?x FILTER ( ?uri != <http://dbpedia.org/resource/Utah> ) }"
        }
    }, {
        "word": "uzi",
        "pairs": [],
        "questions": {
            "14": "Which other weapons did the designer of the Uzi develop?"
        },
        "Sparql": {
            "Sparql_14": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Weapon ; dbp:designer ?x . res:Uzi dbp:designer ?x FILTER ( ?uri != res:Uzi ) }"
        }
    }, {
        "word": "vader",
        "pairs": [],
        "questions": {
            "180": "Is Darth Vader Luke’s father?"
        },
        "Sparql": {
            "Sparql_180": "ASK WHERE { <http://dbpedia.org/resource/Darth_Vader> <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Luke_Skywalker> }"
        }
    }, {
        "word": "van",
        "pairs": [],
        "questions": {
            "339": "Who was Vincent van Gogh inspired by?"
        },
        "Sparql": {
            "Sparql_339": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:influenced res:Vincent_van_Gogh }"
        }
    }, {
        "word": "vatican",
        "pairs": [],
        "questions": {
            "190": "Who was the pope that founded the Vatican Television?"
        },
        "Sparql": {
            "Sparql_190": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:Pope . res:Vatican_Television_Center dbo:foundedBy ?uri }"
        }
    }, {
        "word": "velvet",
        "pairs": [],
        "questions": {
            "314": "Is Christian Bale starring in Velvet Goldmine?"
        },
        "Sparql": {
            "Sparql_314": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Velvet_Goldmine dbo:starring res:Christian_Bale }"
        }
    }, {
        "word": "vice",
        "pairs": [],
        "questions": {
            "270": "Who was John F. Kennedy's vice president?"
        },
        "Sparql": {
            "Sparql_270": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:vicePresident ?uri }"
        }
    }, {
        "word": "video",
        "pairs": [],
        "questions": {
            "32": "What are the top-10 action role-playing video games according to IGN?",
            "232": "Who developed the video game World of Warcraft?",
            "295": "Give me all video games published by Mean Hamster Software.",
            "358": "Is there a video game called Battle Chess?"
        },
        "Sparql": {
            "Sparql_32": "SELECT DISTINCT ?uri WHERE { ?uri <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Action_role-playing_video_games> ; <http://dbpedia.org/property/ign> ?score } ORDER BY DESC(?score) LIMIT 10",
            "Sparql_232": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:World_of_Warcraft dbo:developer ?uri }",
            "Sparql_295": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:VideoGame ; dbo:publisher res:Mean_Hamster_Software }",
            "Sparql_358": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?uri rdf:type dbo:VideoGame ; rdfs:label \"Battle Chess\"@en }"
        }
    }, {
        "word": "vienna",
        "pairs": [],
        "questions": {
            "179": "Give me all people that were born in Vienna and died in Berlin."
        },
        "Sparql": {
            "Sparql_179": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Vienna> ; <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Berlin> }"
        }
    }, {
        "word": "vincent",
        "pairs": [],
        "questions": {
            "339": "Who was Vincent van Gogh inspired by?"
        },
        "Sparql": {
            "Sparql_339": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:influenced res:Vincent_van_Gogh }"
        }
    }, {
        "word": "visitors",
        "pairs": [],
        "questions": {
            "408": "Which museum in New York has the most visitors?"
        },
        "Sparql": {
            "Sparql_408": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Museum ; dbo:location res:New_York_City ; dbo:numberOfVisitors ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "volcanos",
        "pairs": [],
        "questions": {
            "47": "Which volcanos in Japan erupted since 2000?"
        },
        "Sparql": {
            "Sparql_47": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Japan> ; <http://dbpedia.org/ontology/eruptionYear> ?date FILTER ( year(?date) >= 2000 ) }"
        }
    }, {
        "word": "wall",
        "pairs": [],
        "questions": {
            "299": "Who are the writers of the Wall album of Pink Floyd?"
        },
        "Sparql": {
            "Sparql_299": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?writers WHERE { dbr:The_Wall dbp:writer ?writers }"
        }
    }, {
        "word": "walt",
        "pairs": [],
        "questions": {
            "321": "Which television shows were created by Walt Disney?"
        },
        "Sparql": {
            "Sparql_321": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:TelevisionShow ; dbo:creator res:Walt_Disney }"
        }
    }, {
        "word": "war",
        "pairs": [],
        "questions": {
            "319": "How many pages does War and Peace have?",
            "324": "Was U.S. president Jackson involved in a war?",
            "341": "What was the final result of the War of the Roses?"
        },
        "Sparql": {
            "Sparql_319": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:War_and_Peace dbo:numberOfPages ?n }",
            "Sparql_324": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Andrew_Jackson dbo:battle ?battle }",
            "Sparql_341": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?result WHERE { ?uri dbo:isPartOfMilitaryConflict dbr:Wars_of_the_Roses ; dbo:result ?result ; dbo:date ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "warcraft",
        "pairs": [],
        "questions": {
            "232": "Who developed the video game World of Warcraft?"
        },
        "Sparql": {
            "Sparql_232": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:World_of_Warcraft dbo:developer ?uri }"
        }
    }, {
        "word": "washington",
        "pairs": [],
        "questions": {
            "98": "What is the largest metropolitan area in Washington state?"
        },
        "Sparql": {
            "Sparql_98": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Washington_(state)> <http://dbpedia.org/property/largestmetro> ?uri }"
        }
    }, {
        "word": "weapons",
        "pairs": [],
        "questions": {
            "14": "Which other weapons did the designer of the Uzi develop?",
            "153": "Which weapons did Heckler & Koch develop?"
        },
        "Sparql": {
            "Sparql_14": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Weapon ; dbp:designer ?x . res:Uzi dbp:designer ?x FILTER ( ?uri != res:Uzi ) }",
            "Sparql_153": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Weapon> ; <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Heckler_&_Koch> }"
        }
    }, {
        "word": "website",
        "pairs": [],
        "questions": {
            "374": "Does Abraham Lincoln's death place have a website?"
        },
        "Sparql": {
            "Sparql_374": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Abraham_Lincoln dbo:deathPlace ?p . ?p dbo:website ?w }"
        }
    }, {
        "word": "weser",
        "pairs": [],
        "questions": {
            "246": "Which cities does the Weser flow through?"
        },
        "Sparql": {
            "Sparql_246": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Weser dbo:city ?uri }"
        }
    }, {
        "word": "west",
        "pairs": [],
        "questions": {
            "147": "In which countries can you pay using the West African CFA franc?"
        },
        "Sparql": {
            "Sparql_147": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> }"
        }
    }, {
        "word": "westphalia",
        "pairs": [],
        "questions": {
            "278": "how big is the total area of North Rhine- Westphalia?"
        },
        "Sparql": {
            "Sparql_278": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?tarea WHERE { dbr:North_Rhine-Westphalia dbo:areaTotal ?tarea }"
        }
    }, {
        "word": "wife",
        "pairs": [],
        "questions": {
            "227": "Is the wife of president Obama called Michelle?",
            "245": "Was the wife of president Lincoln called Mary?",
            "254": "Who was the wife of U.S. president Lincoln?",
            "376": "Is Michelle Obama the wife of Barack Obama?",
            "405": "Is Rita Wilson the wife of Tom Hanks?"
        },
        "Sparql": {
            "Sparql_227": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Barack_Obama dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, \"Michelle\") }",
            "Sparql_245": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Abraham_Lincoln dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, \"Mary\") }",
            "Sparql_254": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:spouse ?uri }",
            "Sparql_376": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Barack_Obama dbo:spouse res:Michelle_Obama }",
            "Sparql_405": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Tom_Hanks dbo:spouse res:Rita_Wilson }"
        }
    }, {
        "word": "wikipedia",
        "pairs": [],
        "questions": {
            "200": "Who created Wikipedia?"
        },
        "Sparql": {
            "Sparql_200": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Wikipedia dbo:author ?uri }"
        }
    }, {
        "word": "wildlife",
        "pairs": [],
        "questions": {
            "352": "Who is the host of the BBC Wildlife Specials?"
        },
        "Sparql": {
            "Sparql_352": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:BBC_Wildlife_Specials dbo:presenter ?uri }"
        }
    }, {
        "word": "william",
        "pairs": [],
        "questions": {
            "9": "Give me all actors starring in movies directed by and starring William Shatner.",
            "286": "Give me all actors starring in movies directed by William Shatner.",
            "336": "Do Prince Harry and Prince William have the same parents?",
            "371": "Give me all books by William Goldman with more than 300 pages."
        },
        "Sparql": {
            "Sparql_9": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring res:William_Shatner { ?x dbo:starring ?uri } UNION { ?x dbp:starring ?uri } }",
            "Sparql_286": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring ?uri }",
            "Sparql_336": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Prince_William,_Duke_of_Cambridge> dbo:parent ?x . res:Prince_Harry dbo:parent ?x }",
            "Sparql_371": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:William_Goldman ; dbo:numberOfPages ?x FILTER ( ?x > 300 ) }"
        }
    }, {
        "word": "wilson",
        "pairs": [],
        "questions": {
            "405": "Is Rita Wilson the wife of Tom Hanks?"
        },
        "Sparql": {
            "Sparql_405": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Tom_Hanks dbo:spouse res:Rita_Wilson }"
        }
    }, {
        "word": "wine",
        "pairs": [],
        "questions": {
            "387": "Where in France is sparkling wine produced?"
        },
        "Sparql": {
            "Sparql_387": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:wineProduced res:Sparkling_wine ; dbo:location res:France }"
        }
    }, {
        "word": "women",
        "pairs": [],
        "questions": {
            "111": "What is the total amount of men and women serving in the FDNY?"
        },
        "Sparql": {
            "Sparql_111": "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/New_York_City_Fire_Department> <http://dbpedia.org/property/employees> ?num }"
        }
    }, {
        "word": "work",
        "pairs": [],
        "questions": {
            "236": "What is the last work of Dan Brown?"
        },
        "Sparql": {
            "Sparql_236": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?book WHERE { { ?book dbo:author dbr:Dan_Brown . ?book dbp:releaseDate ?date } UNION { ?book dbo:author dbr:Dan_Brown . ?book dbo:publicationDate ?date} } ORDER BY DESC(xsd:date(?date)) LIMIT 1"
        }
    }, {
        "word": "world",
        "pairs": [],
        "questions": {
            "68": "Give me all world heritage sites designated within the past two years.",
            "105": "What was Brazil's lowest rank in the FIFA World Ranking?",
            "148": "Which holidays are celebrated around the world?",
            "188": "What is the largest country in the world?",
            "232": "Who developed the video game World of Warcraft?",
            "251": "What is the longest river in the world?",
            "281": "When will start the final match of the football world cup 2018?",
            "305": "Which holidays are celebrated around the world? test2"
        },
        "Sparql": {
            "Sparql_68": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WorldHeritageSite> . { ?uri <http://dbpedia.org/property/year> '2013'^^xsd:integer . } UNION { ?uri <http://dbpedia.org/property/year> '2014'^^xsd:integer . } }",
            "Sparql_105": "SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Brazil_national_football_team> <http://dbpedia.org/property/fifaMin> ?n }",
            "Sparql_148": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday }",
            "Sparql_188": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:areaTotal ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1",
            "Sparql_232": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:World_of_Warcraft dbo:developer ?uri }",
            "Sparql_251": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:BodyOfWater ; dbo:length ?length } ORDER BY DESC(?length) LIMIT 1",
            "Sparql_281": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?Date WHERE { dbr:2018_FIFA_World_Cup dbp:date ?Date } ORDER BY DESC(?Date) LIMIT 1",
            "Sparql_305": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday }"
        }
    }, {
        "word": "writers",
        "pairs": [],
        "questions": {
            "33": "Give me all writers that won the Nobel Prize in literature.",
            "100": "Which writers studied in Istanbul?",
            "299": "Who are the writers of the Wall album of Pink Floyd?"
        },
        "Sparql": {
            "Sparql_33": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> }",
            "Sparql_100": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> { ?uri <http://dbpedia.org/ontology/almaMater> ?x } UNION { ?uri <http://dbpedia.org/ontology/education> ?x } { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Istanbul> } UNION { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Istanbul> } }",
            "Sparql_299": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?writers WHERE { dbr:The_Wall dbp:writer ?writers }"
        }
    }, {
        "word": "wyoming",
        "pairs": [],
        "questions": {
            "66": "Who is the governor of Wyoming?"
        },
        "Sparql": {
            "Sparql_66": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wyoming> <http://dbpedia.org/property/governor> ?uri }"
        }
    }, {
        "word": "year",
        "pairs": [],
        "questions": {
            "243": "In which year was Rachel Stevens born?"
        },
        "Sparql": {
            "Sparql_243": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rachel_Stevens dbo:birthYear ?uri }"
        }
    }, {
        "word": "years",
        "pairs": [],
        "questions": {
            "68": "Give me all world heritage sites designated within the past two years."
        },
        "Sparql": {
            "Sparql_68": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WorldHeritageSite> . { ?uri <http://dbpedia.org/property/year> '2013'^^xsd:integer . } UNION { ?uri <http://dbpedia.org/property/year> '2014'^^xsd:integer . } }"
        }
    }, {
        "word": "yeti",
        "pairs": [],
        "questions": {
            "196": "Which airports does Yeti Airlines serve?"
        },
        "Sparql": {
            "Sparql_196": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Yeti_Airlines dbo:targetAirport ?uri }"
        }
    }, {
        "word": "yokohama",
        "pairs": [],
        "questions": {
            "304": "How high is the Yokohama Marine Tower?"
        },
        "Sparql": {
            "Sparql_304": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Yokohama_Marine_Tower dbo:height ?num }"
        }
    }, {
        "word": "york",
        "pairs": [],
        "questions": {
            "5": "Who is the mayor of New York City?",
            "393": "What are the five boroughs of New York?",
            "408": "Which museum in New York has the most visitors?"
        },
        "Sparql": {
            "Sparql_5": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:New_York_City dbo:leaderName ?uri }",
            "Sparql_393": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:governmentType <http://dbpedia.org/resource/Borough_(New_York_City)> }",
            "Sparql_408": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Museum ; dbo:location res:New_York_City ; dbo:numberOfVisitors ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
        }
    }, {
        "word": "zone",
        "pairs": [],
        "questions": {
            "108": "Which U.S. states are in the same time zone as Utah?",
            "297": "In which time zone is Rome?"
        },
        "Sparql": {
            "Sparql_108": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Utah> <http://dbpedia.org/property/timezone> ?x . ?uri a <http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates> ; <http://dbpedia.org/property/timezone> ?x FILTER ( ?uri != <http://dbpedia.org/resource/Utah> ) }",
            "Sparql_297": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rome dbo:timeZone ?uri }"
        }
    }]